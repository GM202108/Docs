{
  "key": "arena-plm",
  "public": true,
  "documentationUrl": "https://prismatic.io/docs/components/arena-plm/",
  "display": {
    "label": "Arena PLM",
    "description": "Interact with items and resources in Arena PLM",
    "iconPath": "icon.png",
    "category": "Application Connectors",
    "iconBase64": ""
  },
  "connections": [
    {
      "label": "Arena PLM Basic Auth",
      "key": "arenaPlmBasicAuth",
      "inputs": [
        {
          "required": true,
          "example": "user@example.com",
          "key": "email",
          "type": "string",
          "default": "",
          "label": "Email Address"
        },
        {
          "required": true,
          "example": "P@ssW0Rd",
          "key": "password",
          "type": "password",
          "default": "",
          "label": "Password"
        },
        {
          "required": true,
          "example": "123456789",
          "key": "workspaceId",
          "type": "string",
          "default": "",
          "label": "Arena PLM Workspace ID"
        }
      ],
      "documentation": {
        "description": "Arena's API relies on basic authentication.\nThey recommend that you create a user dedicated to integrations with an email address and password.\nIn addition to email address and password, your customer will also need to know their **workspace ID**, which is a 9-digit number that they can find within Arena PLM.\n"
      }
    }
  ],
  "actions": {
    "rawRequest": {
      "display": {
        "label": "Raw Request",
        "description": "Send a raw HTTP request to  Arena PLM API"
      },
      "key": "rawRequest",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "URL to call",
          "required": true,
          "comments": "Input the path only (/v1/items), The base URL is already included (https://api.arenasolutions.com). For example, to connect to https://api.arenasolutions.com/v1/items, only /v1/items is entered in this field.",
          "example": "/v1/items",
          "key": "url",
          "type": "string",
          "default": "",
          "label": "URL"
        },
        {
          "required": true,
          "model": [
            {
              "label": "DELETE",
              "value": "DELETE"
            },
            {
              "label": "GET",
              "value": "GET"
            },
            {
              "label": "HEAD",
              "value": "HEAD"
            },
            {
              "label": "LINK",
              "value": "LINK"
            },
            {
              "label": "OPTIONS",
              "value": "OPTIONS"
            },
            {
              "label": "PATCH",
              "value": "PATCH"
            },
            {
              "label": "POST",
              "value": "POST"
            },
            {
              "label": "PURGE",
              "value": "PURGE"
            },
            {
              "label": "PUT",
              "value": "PUT"
            },
            {
              "label": "UNLINK",
              "value": "UNLINK"
            }
          ],
          "comments": "The HTTP method to use.",
          "key": "method",
          "type": "string",
          "default": "",
          "label": "Method"
        },
        {
          "placeholder": "Data to send",
          "required": false,
          "comments": "The HTTP body payload to send to the URL.",
          "example": "{\"exampleKey\": \"Example Data\"}",
          "key": "data",
          "type": "string",
          "default": "",
          "label": "Data"
        },
        {
          "placeholder": "Data to send",
          "required": false,
          "comments": "The Form Data to be sent as a multipart form upload.",
          "example": "[{\"key\": \"Example Key\", \"value\": new Buffer(\"Hello World\")}]",
          "key": "formData",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Form Data"
        },
        {
          "placeholder": "Data to send",
          "required": false,
          "comments": "File Data to be sent as a multipart form upload.",
          "example": "[{key: \"example.txt\", value: \"My File Contents\"}]",
          "key": "fileData",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "File Data"
        },
        {
          "placeholder": "Query Parameter",
          "required": false,
          "comments": "A list of query parameters to send with the request. This is the portion at the end of the URL similar to ?key1=value1&key2=value2.",
          "key": "queryParams",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Query Parameter"
        },
        {
          "placeholder": "Header",
          "required": false,
          "comments": "A list of headers to send with the request.",
          "example": "User-Agent: curl/7.64.1",
          "key": "headers",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Header"
        },
        {
          "placeholder": "Response Type",
          "required": true,
          "comments": "The type of data you expect in the response. You can request json, text, or binary data.",
          "model": [
            {
              "label": "arraybuffer",
              "value": "arraybuffer"
            },
            {
              "label": "document",
              "value": "document"
            },
            {
              "label": "json",
              "value": "json"
            },
            {
              "label": "text",
              "value": "text"
            }
          ],
          "key": "responseType",
          "type": "string",
          "default": "json",
          "label": "Response Type"
        },
        {
          "required": false,
          "comments": "The maximum time that a client will await a response to its request",
          "example": "2000",
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        },
        {
          "placeholder": "Retry Delay",
          "required": false,
          "comments": "The delay in milliseconds between retries.",
          "key": "retryDelayMS",
          "type": "string",
          "default": "0",
          "label": "Retry Delay (ms)"
        },
        {
          "required": false,
          "comments": "If true, retries on all erroneous responses regardless of type.",
          "key": "retryAllErrors",
          "type": "boolean",
          "default": "false",
          "label": "Retry On All Errors"
        },
        {
          "placeholder": "Max Retries",
          "required": false,
          "comments": "The maximum number of retries to attempt.",
          "key": "maxRetries",
          "type": "string",
          "default": "0",
          "label": "Max Retry Count"
        },
        {
          "required": false,
          "comments": "Specifies whether to use a pre-defined exponential backoff strategy for retries.",
          "key": "useExponentialBackoff",
          "type": "boolean",
          "default": "false",
          "label": "Use Exponential Backoff"
        }
      ]
    }
  },
  "triggers": {},
  "dataSources": {},
  "documentation": {
    "description": "Arena PLM (Product Lifecycle Management) software brings product information, people, and processes together into a single enterprise platform to speed product design and development.\n"
  },
  "$version": 1
}
