{
  "version": "placeholder",
  "key": "csv",
  "public": true,
  "documentationUrl": "https://prismatic.io/docs/components/csv/",
  "display": {
    "label": "CSV",
    "category": "Helpers",
    "description": "Build and parse CSV files to and from JavaScript arrays",
    "iconPath": "icon.png",
    "iconBase64": ""
  },
  "actions": {
    "parse": {
      "display": {
        "label": "Parse",
        "description": "Parse CSV data into an array of rows"
      },
      "inputs": [
        {
          "key": "csv",
          "label": "CSV Data",
          "type": "text",
          "required": true,
          "comments": "Provide a string containing one or more rows of comma-seperated data",
          "example": "Column 1,Column 2\nfoo,bar\nabc,def"
        },
        {
          "key": "delimiter",
          "label": "Delimiter",
          "type": "string",
          "required": false,
          "default": ",",
          "comments": "Provide a string value containing the character the file is delimited on."
        }
      ],
      "examplePayload": {
        "data": {
          "data": [],
          "errors": [],
          "meta": {
            "delimiter": ",",
            "linebreak": "",
            "aborted": false,
            "truncated": false,
            "cursor": 385
          }
        }
      },
      "key": "parse"
    },
    "generate": {
      "display": {
        "label": "Generate (deprecated)",
        "description": "Generates a CSV file from an array of objects"
      },
      "inputs": [
        {
          "key": "rowData",
          "label": "Data",
          "type": "string",
          "required": true,
          "collection": "valuelist",
          "example": "{key: \"value\"}",
          "comments": "For each list item, provide a list of strings that represent a row in the file."
        },
        {
          "key": "delimiter",
          "label": "Delimiter",
          "type": "string",
          "required": false,
          "default": ",",
          "comments": "Provide a string value containing the character the file is delimited on."
        }
      ],
      "key": "generate"
    },
    "generateFromObject": {
      "display": {
        "label": "Generate CSV From Array",
        "description": "Generates CSV data from an array of objects"
      },
      "inputs": [
        {
          "key": "inputArray",
          "label": "Input Array",
          "comments": "This should be an array of un-nested objects",
          "type": "code",
          "language": "JSON",
          "default": "[\n  {\n    \"Column 1\": \"foo\",\n    \"Column 2\": \"bar\"\n  },\n  {\n    \"Column 1\": \"abc\",\n    \"Column 2\": \"def\"\n  }\n]"
        },
        {
          "key": "delimiter",
          "label": "Delimiter",
          "type": "string",
          "required": false,
          "default": ",",
          "comments": "Provide a string value containing the character the file is delimited on."
        }
      ],
      "key": "generateFromObject"
    }
  },
  "documentation": {
    "description": "CSV is a delimited text file format that uses a comma to separate values.\nThe CSV component gives you the ability to parse and generate CSV files from JavaScript Arrays.\nYou can also specify a custom delimiter character when building and parsing CSV files.\n"
  },
  "$version": 1
}
