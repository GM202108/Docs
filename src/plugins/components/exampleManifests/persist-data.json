{
  "key": "persist-data",
  "documentationUrl": "https://prismatic.io/docs/components/persist-data/",
  "public": true,
  "display": {
    "label": "Persist Data",
    "description": "Persist small amounts of data that will be available later in the execution or in subsequent executions of the Instance",
    "iconPath": "icon.png",
    "category": "Helpers",
    "iconBase64": ""
  },
  "connections": [],
  "actions": {
    "addCrossFlowValueToSet": {
      "display": {
        "label": "Cross Flow - Add Value To Set",
        "description": "Add a value to the set with the specified key, creating the set as needed"
      },
      "key": "addCrossFlowValueToSet",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        },
        {
          "placeholder": "Value",
          "required": true,
          "comments": "This is the value that will be stored",
          "example": "Example Value",
          "key": "valueInput",
          "type": "data",
          "default": "",
          "label": "Value"
        }
      ]
    },
    "appendCrossFlowValueToList": {
      "display": {
        "label": "Cross Flow - Append Value To List",
        "description": "Append a value to the list with the specified key, creating the list as needed"
      },
      "key": "appendCrossFlowValueToList",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        },
        {
          "placeholder": "Value",
          "required": true,
          "comments": "This is the value that will be stored",
          "example": "Example Value",
          "key": "valueInput",
          "type": "data",
          "default": "",
          "label": "Value"
        }
      ]
    },
    "decrementCrossFlowValue": {
      "display": {
        "label": "Cross Flow - Decrement Value",
        "description": "Decrement the stored integer value with the specified key by the specified amount"
      },
      "key": "decrementCrossFlowValue",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        },
        {
          "placeholder": "Amount",
          "required": false,
          "comments": "This is the amount that will be used for incrementing/decrementing",
          "example": "1",
          "key": "amountInput",
          "type": "data",
          "default": "1",
          "label": "Amount"
        }
      ]
    },
    "getCrossFlowValue": {
      "display": {
        "label": "Cross Flow - Get Value",
        "description": "Get the value with the specified key, returning the specified default value if key not present"
      },
      "examplePayload": {
        "data": "Example Saved Value"
      },
      "key": "getCrossFlowValue",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        },
        {
          "placeholder": "Default Value",
          "required": false,
          "comments": "This is the value that will be returned if there is no value present",
          "example": "Example Default Value",
          "key": "defaultValueInput",
          "type": "data",
          "default": "",
          "label": "Default Value"
        }
      ]
    },
    "incrementCrossFlowValue": {
      "display": {
        "label": "Cross Flow - Increment Value",
        "description": "Increment the stored integer value with the specified key by the specified amount"
      },
      "key": "incrementCrossFlowValue",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        },
        {
          "placeholder": "Amount",
          "required": false,
          "comments": "This is the amount that will be used for incrementing/decrementing",
          "example": "1",
          "key": "amountInput",
          "type": "data",
          "default": "1",
          "label": "Amount"
        }
      ]
    },
    "listCrossFlowKeys": {
      "display": {
        "label": "Cross Flow - List Keys",
        "description": "List all keys persisted at the cross-flow level"
      },
      "key": "listCrossFlowKeys",
      "inputs": []
    },
    "removeCrossFlowState": {
      "display": {
        "label": "Cross Flow - Clear All State",
        "description": "Delete all cross-flow state stored for this instance"
      },
      "key": "removeCrossFlowState",
      "inputs": []
    },
    "removeCrossFlowValue": {
      "display": {
        "label": "Cross Flow - Remove Value",
        "description": "Remove the value with the specified key"
      },
      "key": "removeCrossFlowValue",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        }
      ]
    },
    "removeCrossFlowValueFromList": {
      "display": {
        "label": "Cross Flow - Remove Value From List",
        "description": "Remove the value from the list with the specified key"
      },
      "key": "removeCrossFlowValueFromList",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        },
        {
          "placeholder": "Value",
          "required": true,
          "comments": "This is the value that will be removed",
          "example": "Example Value",
          "key": "valueInput",
          "type": "data",
          "default": "",
          "label": "Value"
        }
      ]
    },
    "removeCrossFlowValueFromSet": {
      "display": {
        "label": "Cross Flow - Remove Value From Set",
        "description": "Remove the value from the set with the specified key"
      },
      "key": "removeCrossFlowValueFromSet",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        },
        {
          "placeholder": "Value",
          "required": true,
          "comments": "This is the value that will be removed",
          "example": "Example Value",
          "key": "valueInput",
          "type": "data",
          "default": "",
          "label": "Value"
        }
      ]
    },
    "saveCrossFlowCurrentTime": {
      "display": {
        "label": "Cross Flow - Save Current Time",
        "description": "Save the current time in UTC using the specified key"
      },
      "key": "saveCrossFlowCurrentTime",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        }
      ]
    },
    "saveCrossFlowValue": {
      "display": {
        "label": "Cross Flow - Save Value",
        "description": "Save a value with the specified key for use at a later time"
      },
      "key": "saveCrossFlowValue",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        },
        {
          "placeholder": "Value",
          "required": true,
          "comments": "This is the value that will be stored",
          "example": "Example Value",
          "key": "valueInput",
          "type": "data",
          "default": "",
          "label": "Value"
        }
      ]
    },
    "addExecutionValueToSet": {
      "display": {
        "label": "Execution - Add Value To Set",
        "description": "Add a value to the set with the specified key, creating the set as needed"
      },
      "key": "addExecutionValueToSet",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        },
        {
          "placeholder": "Value",
          "required": true,
          "comments": "This is the value that will be stored",
          "example": "Example Value",
          "key": "valueInput",
          "type": "data",
          "default": "",
          "label": "Value"
        }
      ]
    },
    "appendExecutionValueToList": {
      "display": {
        "label": "Execution - Append Value To List",
        "description": "Append a value to the list with the specified key, creating the list as needed"
      },
      "key": "appendExecutionValueToList",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        },
        {
          "placeholder": "Value",
          "required": true,
          "comments": "This is the value that will be stored",
          "example": "Example Value",
          "key": "valueInput",
          "type": "data",
          "default": "",
          "label": "Value"
        }
      ]
    },
    "decrementExecutionValue": {
      "display": {
        "label": "Execution - Decrement Value",
        "description": "Decrement the stored integer value with the specified key by the specified amount"
      },
      "key": "decrementExecutionValue",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        },
        {
          "placeholder": "Amount",
          "required": false,
          "comments": "This is the amount that will be used for incrementing/decrementing",
          "example": "1",
          "key": "amountInput",
          "type": "data",
          "default": "1",
          "label": "Amount"
        }
      ]
    },
    "getExecutionValue": {
      "display": {
        "label": "Execution - Get Value",
        "description": "Get the value with the specified key, returning the specified default value if key not present"
      },
      "examplePayload": {
        "data": "Example Saved Value"
      },
      "key": "getExecutionValue",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        },
        {
          "placeholder": "Default Value",
          "required": false,
          "comments": "This is the value that will be returned if there is no value present",
          "example": "Example Default Value",
          "key": "defaultValueInput",
          "type": "data",
          "default": "",
          "label": "Default Value"
        }
      ]
    },
    "incrementExecutionValue": {
      "display": {
        "label": "Execution - Increment Value",
        "description": "Increment the stored integer value with the specified key by the specified amount"
      },
      "key": "incrementExecutionValue",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        },
        {
          "placeholder": "Amount",
          "required": false,
          "comments": "This is the amount that will be used for incrementing/decrementing",
          "example": "1",
          "key": "amountInput",
          "type": "data",
          "default": "1",
          "label": "Amount"
        }
      ]
    },
    "listExecutionKeys": {
      "display": {
        "label": "Execution - List Keys",
        "description": "List all keys persisted at the execution level"
      },
      "key": "listExecutionKeys",
      "inputs": []
    },
    "removeExecutionState": {
      "display": {
        "label": "Execution - Clear All State",
        "description": "Delete all execution state"
      },
      "key": "removeExecutionState",
      "inputs": []
    },
    "removeExecutionValue": {
      "display": {
        "label": "Execution - Remove Value",
        "description": "Remove the value with the specified key"
      },
      "key": "removeExecutionValue",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        }
      ]
    },
    "removeExecutionValueFromList": {
      "display": {
        "label": "Execution - Remove Value From List",
        "description": "Remove the value from the list with the specified key"
      },
      "key": "removeExecutionValueFromList",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        },
        {
          "placeholder": "Value",
          "required": true,
          "comments": "This is the value that will be removed",
          "example": "Example Value",
          "key": "valueInput",
          "type": "data",
          "default": "",
          "label": "Value"
        }
      ]
    },
    "removeExecutionValueFromSet": {
      "display": {
        "label": "Execution - Remove Value From Set",
        "description": "Remove the value from the set with the specified key"
      },
      "key": "removeExecutionValueFromSet",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        },
        {
          "placeholder": "Value",
          "required": true,
          "comments": "This is the value that will be removed",
          "example": "Example Value",
          "key": "valueInput",
          "type": "data",
          "default": "",
          "label": "Value"
        }
      ]
    },
    "saveExecutionCurrentTime": {
      "display": {
        "label": "Execution - Save Current Time",
        "description": "Save the current time in UTC using the specified key"
      },
      "key": "saveExecutionCurrentTime",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        }
      ]
    },
    "saveExecutionValue": {
      "display": {
        "label": "Execution - Save Value",
        "description": "Save a value with the specified key for use at a later time"
      },
      "key": "saveExecutionValue",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        },
        {
          "placeholder": "Value",
          "required": true,
          "comments": "This is the value that will be stored",
          "example": "Example Value",
          "key": "valueInput",
          "type": "data",
          "default": "",
          "label": "Value"
        }
      ]
    },
    "addInstanceValueToSet": {
      "display": {
        "label": "Flow - Add Value To Set",
        "description": "Add a value to the set with the specified key, creating the set as needed"
      },
      "key": "addInstanceValueToSet",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        },
        {
          "placeholder": "Value",
          "required": true,
          "comments": "This is the value that will be stored",
          "example": "Example Value",
          "key": "valueInput",
          "type": "data",
          "default": "",
          "label": "Value"
        }
      ]
    },
    "appendInstanceValueToList": {
      "display": {
        "label": "Flow - Append Value To List",
        "description": "Append a value to the list with the specified key, creating the list as needed"
      },
      "key": "appendInstanceValueToList",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        },
        {
          "placeholder": "Value",
          "required": true,
          "comments": "This is the value that will be stored",
          "example": "Example Value",
          "key": "valueInput",
          "type": "data",
          "default": "",
          "label": "Value"
        }
      ]
    },
    "decrementInstanceValue": {
      "display": {
        "label": "Flow - Decrement Value",
        "description": "Decrement the stored integer value with the specified key by the specified amount"
      },
      "key": "decrementInstanceValue",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        },
        {
          "placeholder": "Amount",
          "required": false,
          "comments": "This is the amount that will be used for incrementing/decrementing",
          "example": "1",
          "key": "amountInput",
          "type": "data",
          "default": "1",
          "label": "Amount"
        }
      ]
    },
    "getInstanceValue": {
      "display": {
        "label": "Flow - Get Value",
        "description": "Get the value with the specified key, returning the specified default value if key not present"
      },
      "examplePayload": {
        "data": "Example Saved Value"
      },
      "key": "getInstanceValue",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        },
        {
          "placeholder": "Default Value",
          "required": false,
          "comments": "This is the value that will be returned if there is no value present",
          "example": "Example Default Value",
          "key": "defaultValueInput",
          "type": "data",
          "default": "",
          "label": "Default Value"
        }
      ]
    },
    "incrementInstanceValue": {
      "display": {
        "label": "Flow - Increment Value",
        "description": "Increment the stored integer value with the specified key by the specified amount"
      },
      "key": "incrementInstanceValue",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        },
        {
          "placeholder": "Amount",
          "required": false,
          "comments": "This is the amount that will be used for incrementing/decrementing",
          "example": "1",
          "key": "amountInput",
          "type": "data",
          "default": "1",
          "label": "Amount"
        }
      ]
    },
    "listInstanceKeys": {
      "display": {
        "label": "Flow - List Keys",
        "description": "List all keys persisted at the flow level"
      },
      "key": "listInstanceKeys",
      "inputs": []
    },
    "removeInstanceState": {
      "display": {
        "label": "Flow - Clear All State",
        "description": "Delete all flow state stored for this instance"
      },
      "key": "removeInstanceState",
      "inputs": []
    },
    "removeInstanceValue": {
      "display": {
        "label": "Flow - Remove Value",
        "description": "Remove the value with the specified key"
      },
      "key": "removeInstanceValue",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        }
      ]
    },
    "removeInstanceValueFromList": {
      "display": {
        "label": "Flow - Remove Value From List",
        "description": "Remove the value from the list with the specified key"
      },
      "key": "removeInstanceValueFromList",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        },
        {
          "placeholder": "Value",
          "required": true,
          "comments": "This is the value that will be removed",
          "example": "Example Value",
          "key": "valueInput",
          "type": "data",
          "default": "",
          "label": "Value"
        }
      ]
    },
    "removeInstanceValueFromSet": {
      "display": {
        "label": "Flow - Remove Value From Set",
        "description": "Remove the value from the set with the specified key"
      },
      "key": "removeInstanceValueFromSet",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        },
        {
          "placeholder": "Value",
          "required": true,
          "comments": "This is the value that will be removed",
          "example": "Example Value",
          "key": "valueInput",
          "type": "data",
          "default": "",
          "label": "Value"
        }
      ]
    },
    "saveInstanceCurrentTime": {
      "display": {
        "label": "Flow - Save Current Time",
        "description": "Save the current time in UTC using the specified key"
      },
      "key": "saveInstanceCurrentTime",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        }
      ]
    },
    "saveInstanceValue": {
      "display": {
        "label": "Flow - Save Value",
        "description": "Save a value with the specified key for use at a later time"
      },
      "key": "saveInstanceValue",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        },
        {
          "placeholder": "Value",
          "required": true,
          "comments": "This is the value that will be stored",
          "example": "Example Value",
          "key": "valueInput",
          "type": "data",
          "default": "",
          "label": "Value"
        }
      ]
    },
    "addIntegrationValueToSet": {
      "display": {
        "label": "Integration - Add Value To Set",
        "description": "Add a value to the set with the specified key, creating the set as needed"
      },
      "key": "addIntegrationValueToSet",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        },
        {
          "placeholder": "Value",
          "required": true,
          "comments": "This is the value that will be stored",
          "example": "Example Value",
          "key": "valueInput",
          "type": "data",
          "default": "",
          "label": "Value"
        }
      ]
    },
    "appendIntegrationValueToList": {
      "display": {
        "label": "Integration - Append Value To List",
        "description": "Append a value to the list with the specified key, creating the list as needed"
      },
      "key": "appendIntegrationValueToList",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        },
        {
          "placeholder": "Value",
          "required": true,
          "comments": "This is the value that will be stored",
          "example": "Example Value",
          "key": "valueInput",
          "type": "data",
          "default": "",
          "label": "Value"
        }
      ]
    },
    "decrementIntegrationValue": {
      "display": {
        "label": "Integration - Decrement Value",
        "description": "Decrement the stored integer value with the specified key by the specified amount"
      },
      "key": "decrementIntegrationValue",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        },
        {
          "placeholder": "Amount",
          "required": false,
          "comments": "This is the amount that will be used for incrementing/decrementing",
          "example": "1",
          "key": "amountInput",
          "type": "data",
          "default": "1",
          "label": "Amount"
        }
      ]
    },
    "getIntegrationValue": {
      "display": {
        "label": "Integration - Get Value",
        "description": "Get the value with the specified key, returning the specified default value if key not present"
      },
      "examplePayload": {
        "data": "Example Saved Value"
      },
      "key": "getIntegrationValue",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        },
        {
          "placeholder": "Default Value",
          "required": false,
          "comments": "This is the value that will be returned if there is no value present",
          "example": "Example Default Value",
          "key": "defaultValueInput",
          "type": "data",
          "default": "",
          "label": "Default Value"
        }
      ]
    },
    "incrementIntegrationValue": {
      "display": {
        "label": "Integration - Increment Value",
        "description": "Increment the stored integer value with the specified key by the specified amount"
      },
      "key": "incrementIntegrationValue",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        },
        {
          "placeholder": "Amount",
          "required": false,
          "comments": "This is the amount that will be used for incrementing/decrementing",
          "example": "1",
          "key": "amountInput",
          "type": "data",
          "default": "1",
          "label": "Amount"
        }
      ]
    },
    "listIntegrationKeys": {
      "display": {
        "label": "Integration - List Keys",
        "description": "List all keys persisted at the integration level"
      },
      "key": "listIntegrationKeys",
      "inputs": []
    },
    "removeIntegrationState": {
      "display": {
        "label": "Integration - Clear All State",
        "description": "Delete all integration state stored for all instances of this integration"
      },
      "key": "removeIntegrationState",
      "inputs": []
    },
    "removeIntegrationValue": {
      "display": {
        "label": "Integration - Remove Value",
        "description": "Remove the value with the specified key"
      },
      "key": "removeIntegrationValue",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        }
      ]
    },
    "removeIntegrationValueFromList": {
      "display": {
        "label": "Integration - Remove Value From List",
        "description": "Remove the value from the list with the specified key"
      },
      "key": "removeIntegrationValueFromList",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        },
        {
          "placeholder": "Value",
          "required": true,
          "comments": "This is the value that will be removed",
          "example": "Example Value",
          "key": "valueInput",
          "type": "data",
          "default": "",
          "label": "Value"
        }
      ]
    },
    "removeIntegrationValueFromSet": {
      "display": {
        "label": "Integration - Remove Value From Set",
        "description": "Remove the value from the set with the specified key"
      },
      "key": "removeIntegrationValueFromSet",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        },
        {
          "placeholder": "Value",
          "required": true,
          "comments": "This is the value that will be removed",
          "example": "Example Value",
          "key": "valueInput",
          "type": "data",
          "default": "",
          "label": "Value"
        }
      ]
    },
    "saveIntegrationCurrentTime": {
      "display": {
        "label": "Integration - Save Current Time",
        "description": "Save the current time in UTC using the specified key"
      },
      "key": "saveIntegrationCurrentTime",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        }
      ]
    },
    "saveIntegrationValue": {
      "display": {
        "label": "Integration - Save Value",
        "description": "Save a value with the specified key for use at a later time"
      },
      "key": "saveIntegrationValue",
      "inputs": [
        {
          "placeholder": "Key",
          "required": true,
          "comments": "This is the key that will be used to refer to the stored value",
          "example": "Example Key",
          "key": "keyInput",
          "type": "data",
          "default": "",
          "label": "Key"
        },
        {
          "placeholder": "Value",
          "required": true,
          "comments": "This is the value that will be stored",
          "example": "Example Value",
          "key": "valueInput",
          "type": "data",
          "default": "",
          "label": "Value"
        }
      ]
    }
  },
  "triggers": {},
  "dataSources": {},
  "documentation": {
    "description": "The **persist data** component provides functionality to persist small amounts of data for use during an integration execution or in subsequent integration executions.\nThis is helpful if you want to save a bit of data during an integration invocation for use in a later step, or in a subsequent execution.\n",
    "dev": "For details on how to persist data between flow invocations, see the [building integrations](building-integrations.mdx#persisting-data-between-runs) article.\n\nData can be persisted in three ways:\n\n- For just the duration of the **execution**.\n  Data persists ephemerally for only as long as a flow runs.\n  You might use the `Execution -` actions, for example, as an accumulator in a loop.\n- Between executions of a **specific flow**.\n  Data persists between instance executions and is scoped for a specific flow.\n  One flow cannot access another flow's data.\n  The `Flow -` actions are handy for saving data from one flow's run, and referencing it in a subsequent run of that same flow.\n- Globally, for **all flows** in an instance.\n  Data persists between instance executions and is scoped for the entire instance.\n  The `Cross Flow -` actions let flows within an instance reference one another's persisted data.\n\n:::caution Persisted data implementation\nWhen an execution starts, it loads persisted data from storage.\nWhen the execution finishes, it writes out its state to storage if any state was changed.\n\nNote that if two executions run at the same time, the execution that finishes last will overwrite any state that the first execution wrote.\n:::\n"
  },
  "$version": 1
}
