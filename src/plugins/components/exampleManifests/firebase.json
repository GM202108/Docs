{
  "key": "firebase",
  "public": true,
  "documentationUrl": "https://prismatic.io/docs/components/firebase/",
  "display": {
    "category": "Data Platforms",
    "label": "Firebase",
    "description": "Create, read, update, and delete documents in a Firebase Cloud Firestore database collection.",
    "iconPath": "icon.png",
    "iconBase64": ""
  },
  "connections": [
    {
      "key": "firebaseConnection",
      "label": "Firebase Private Key Connection",
      "comments": "Authenticate requests to firebase using values obtained from the Google Cloud Platform.",
      "inputs": [
        {
          "placeholder": "Project Id",
          "required": true,
          "shown": true,
          "comments": "Provide the unique identifier of the project from the Google Cloud Platform.",
          "key": "projectId",
          "type": "string",
          "default": "",
          "label": "Project Id"
        },
        {
          "placeholder": "Private Key",
          "required": true,
          "shown": true,
          "comments": "Provide the private key from the Google Cloud Platform.",
          "example": "example-\nMIIEvdegIBADANBgkqhkiG9w0BAVtkOIcMjQXRzx+2VLoPkAs\nl1vRkI4wWtbNn6taw01eserX1/vkyxHcByEtkAlaDFrqSlSclRmgRd/ddGWD6xGss9fGIjjJcez4jh\n8z6EUeZBAgMBAAECggEAE8vqqRrYdZFNSTOzZN+R/eDzW2nZMiBTqHTl/KvPmp0m\nfiXX94pJxcRKMEm44n7MFUSdMG3MJoMUeAIs+thYibqkFpXWBCzzq8EzfTuTjR8+ycF+GXWN",
          "key": "privateKey",
          "type": "text",
          "default": "",
          "label": "Private Key"
        },
        {
          "placeholder": "Email",
          "required": true,
          "shown": true,
          "comments": "Provide the client email for the GCP account.",
          "example": "someone@example.com",
          "key": "clientEmail",
          "type": "string",
          "default": "",
          "label": "Email"
        }
      ],
      "documentation": {
        "description": "The Firebase Admin SDK is a set of server libraries that lets you interact with Firebase from privileged environments.\nTo authenticate through the Firebase Admin SDK, follow the instructions to generate a private key located on the Firebase [docs](https://firebase.google.com/docs/admin/setup#set-up-project-and-service-account)\nThis will involve you creating a service account in the Google Cloud Platform and generating credentials for that user.\nYou will receive a JSON file containing many fields including a private key, and client email which you will use to make a new connection.\nIn the new connection, enter the value of the client email, private key, and your GCP project Id.\n"
      }
    }
  ],
  "actions": {
    "createDocument": {
      "display": {
        "label": "Create Document",
        "description": "Create a document in a Cloud Firestore collection"
      },
      "examplePayload": {
        "data": {
          "id": "",
          "path": ""
        }
      },
      "key": "createDocument",
      "inputs": [
        {
          "placeholder": "Collection Name",
          "required": true,
          "comments": "Provide a string value for the collection name.",
          "example": "Customers",
          "key": "collection",
          "type": "string",
          "default": "",
          "label": "Collection"
        },
        {
          "placeholder": "Data",
          "required": true,
          "comments": "Provide a key value pair that represents your data.",
          "key": "data",
          "type": "data",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Data"
        },
        {
          "required": true,
          "key": "firebaseConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "bulkCreateDocuments": {
      "display": {
        "label": "Bulk Create Documents",
        "description": "Create multiple documents in a Cloud Firestore collection in a single operation"
      },
      "examplePayload": {
        "data": "Documents created successfully."
      },
      "key": "bulkCreateDocuments",
      "inputs": [
        {
          "required": true,
          "key": "firebaseConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "Collection Name",
          "required": true,
          "comments": "Provide a string value for the collection name.",
          "example": "Customers",
          "key": "collection",
          "type": "string",
          "default": "",
          "label": "Collection"
        },
        {
          "language": "json",
          "comments": "An array of documents to be created in the collection.",
          "required": true,
          "key": "documents",
          "type": "code",
          "default": "[\n  {\n    \"field1\": \"value1\",\n    \"field2\": \"value2\"\n  },\n  {\n    \"field1\": \"value3\",\n    \"field2\": \"value4\"\n  }\n]",
          "label": "Documents"
        }
      ]
    },
    "listCollections": {
      "display": {
        "label": "List Collections",
        "description": "List all collections in a Cloud Firestore database"
      },
      "examplePayload": {},
      "key": "listCollections",
      "inputs": [
        {
          "required": true,
          "key": "firebaseConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "listDocuments": {
      "display": {
        "label": "List Documents",
        "description": "List all documents in a Cloud Firestore collection"
      },
      "examplePayload": {
        "data": [
          {
            "id": "",
            "path": "",
            "data": {}
          }
        ]
      },
      "key": "listDocuments",
      "inputs": [
        {
          "placeholder": "Collection Name",
          "required": true,
          "comments": "Provide a string value for the collection name.",
          "example": "Customers",
          "key": "collection",
          "type": "string",
          "default": "",
          "label": "Collection"
        },
        {
          "required": true,
          "key": "firebaseConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "Field",
          "required": false,
          "comments": "Provide a string value for the field to order by.",
          "example": "Name",
          "key": "orderBy",
          "type": "string",
          "default": "",
          "label": "Order By"
        },
        {
          "language": "json",
          "example": "[{\"field\":\"myFieldName\",\"operator\":\"!=\",\"value\":\"myFieldValue\"},{\"field\":\"myOtherFieldName\",\"operator\":\"not-in\",\"value\":[\"myOtherFieldValue1\",\"myOtherFieldValue2\"]}]",
          "key": "queryOperatorCode",
          "type": "code",
          "default": "",
          "label": "Query Operators"
        }
      ]
    },
    "getDocument": {
      "display": {
        "label": "Get Document",
        "description": "Get the contents of a document in a Cloud Firestore collection"
      },
      "examplePayload": {
        "data": {
          "data": {},
          "id": "",
          "createTime": "2021-08-25T00:00:00.000Z",
          "updateTime": "2021-08-25T00:00:00.000Z",
          "exists": true,
          "readTime": "2021-08-25T00:00:00.000Z"
        }
      },
      "key": "getDocument",
      "inputs": [
        {
          "placeholder": "Collection Name",
          "required": true,
          "comments": "Provide a string value for the collection name.",
          "example": "Customers",
          "key": "collection",
          "type": "string",
          "default": "",
          "label": "Collection"
        },
        {
          "placeholder": "Document",
          "required": true,
          "comments": "Provide a string value for the unique identifier of the document.",
          "example": "/path/to/destination/file.txt",
          "key": "document",
          "type": "string",
          "default": "",
          "label": "Document"
        },
        {
          "required": true,
          "key": "firebaseConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "deleteDocument": {
      "display": {
        "label": "Delete Document",
        "description": "Remove a document from a Cloud Firestore collection"
      },
      "key": "deleteDocument",
      "inputs": [
        {
          "placeholder": "Collection Name",
          "required": true,
          "comments": "Provide a string value for the collection name.",
          "example": "Customers",
          "key": "collection",
          "type": "string",
          "default": "",
          "label": "Collection"
        },
        {
          "placeholder": "Document",
          "required": true,
          "comments": "Provide a string value for the unique identifier of the document.",
          "example": "/path/to/destination/file.txt",
          "key": "document",
          "type": "string",
          "default": "",
          "label": "Document"
        },
        {
          "required": true,
          "key": "firebaseConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "updateDocument": {
      "display": {
        "label": "Update Document",
        "description": "Updates a document in a Cloud Firestore collection"
      },
      "examplePayload": {},
      "key": "updateDocument",
      "inputs": [
        {
          "placeholder": "Collection Name",
          "required": true,
          "comments": "Provide a string value for the collection name.",
          "example": "Customers",
          "key": "collection",
          "type": "string",
          "default": "",
          "label": "Collection"
        },
        {
          "placeholder": "Document",
          "required": true,
          "comments": "Provide a string value for the unique identifier of the document.",
          "example": "/path/to/destination/file.txt",
          "key": "document",
          "type": "string",
          "default": "",
          "label": "Document"
        },
        {
          "placeholder": "Data",
          "required": true,
          "comments": "Provide a key value pair that represents your data.",
          "key": "data",
          "type": "data",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Data"
        },
        {
          "required": true,
          "key": "firebaseConnection",
          "type": "connection",
          "label": "Connection"
        }
      ],
      "documentation": {
        "description": "When updating a document, you can specify any number of optional fields to be changed.\nHowever, if you would like to unset a value but keep the field, you must pass an unbound input (null, undefined) by using something like the code component or a previous step result.\nThis will result in the field's value becoming null or unset in the document.\nIf you wanted to completely remove this field from the document, you must use the removeField action.\n"
      }
    },
    "removeField": {
      "display": {
        "label": "Remove Field",
        "description": "Completely removes a field from a given document (may not work on a field with a null value)"
      },
      "examplePayload": {
        "data": {}
      },
      "key": "removeField",
      "inputs": [
        {
          "placeholder": "Collection Name",
          "required": true,
          "comments": "Provide a string value for the collection name.",
          "example": "Customers",
          "key": "collection",
          "type": "string",
          "default": "",
          "label": "Collection"
        },
        {
          "placeholder": "Document",
          "required": true,
          "comments": "Provide a string value for the unique identifier of the document.",
          "example": "/path/to/destination/file.txt",
          "key": "document",
          "type": "string",
          "default": "",
          "label": "Document"
        },
        {
          "placeholder": "firstName",
          "example": "firstName",
          "required": true,
          "comments": "Provide a string value for the name of the field you would like to remove from the document.",
          "key": "fieldToRemove",
          "type": "string",
          "default": "",
          "label": "Field To Remove"
        },
        {
          "required": true,
          "key": "firebaseConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    }
  },
  "triggers": {},
  "dataSources": {},
  "documentation": {
    "description": "[Firebase](https://firebase.google.com) is a platform developed by Google for creating mobile and web applications.\nFirebase Cloud Firestore is a document-based, flexible, scalable, and NoSQL cloud database, used to store and sync data for client and server-side applications.\nThis component uses the Firebase Admin SDK to create, read, update, delete, and list documents within a Firebase Cloud Firestore collection.\nSee more information in the Cloud Firestore section of the Firebase Admin SDK in the [Firebase Docs](https://firebase.google.com/docs/reference/admin).\n"
  },
  "$version": 1
}
