{
  "key": "domo",
  "public": true,
  "display": {
    "label": "Domo",
    "category": "Application Connectors",
    "description": "The Domo platform includes a world class data warehouse, robust data pipeline functionality, and visualization engine.",
    "iconPath": "icon.png",
    "iconBase64": ""
  },
  "documentationUrl": "https://prismatic.io/docs/components/domo/",
  "connections": [
    {
      "key": "oauth",
      "label": "Domo OAuth Connection",
      "comments": "OAuth Connectivity for Domo",
      "inputs": [
        {
          "placeholder": "Client ID",
          "required": true,
          "shown": true,
          "comments": "Client Identifier of your Domo app for the API",
          "key": "clientId",
          "type": "string",
          "default": "",
          "label": "Client ID"
        },
        {
          "placeholder": "Client Secret",
          "required": true,
          "comments": "Client Secret of your Domo app for the API",
          "key": "clientSecret",
          "type": "password",
          "default": "",
          "label": "Client Secret"
        },
        {
          "placeholder": "Scopes",
          "required": true,
          "comments": "Space separated OAuth permission scopes for the API",
          "example": "data workflow audit buzz user account dashboard",
          "key": "scopes",
          "type": "string",
          "default": "",
          "label": "Scopes"
        }
      ],
      "documentation": {
        "description": "## [Generating Client ID and Client Secret](https://developer.domo.com/portal/8ba9aedad3679-ap-is#step-1-create-client-id-and-secret)\n\nTo generate a client ID and client secret for your Domo instance, follow these steps:\n\n1. Obtain your Domo Instance Name:\n   - Your Domo Instance Name is the part of the URL preceding \"domo.com.\" For instance, if your Domo URL is \"acmecompany.domo.com,\" your instance name would be \"acmecompany.\"\n\n2. Log in to the Developer Portal:\n   - Click on the \"Dev Portal Login\" link to access the Developer Portal or follow this link [https://developer.domo.com/login](https://developer.domo.com/login).\n\n3. Enter Instance Name and User Credentials:\n   - Provide your Domo Instance Name and user credentials when prompted to log in.\n\n4. Access \"Manage Clients\" Page:\n   - After logging in successfully, you will be redirected to the Developer Portal's homepage.\n   - Click on the \"My Account\" dropdown, and you will find options to manage clients, create a new one, or logout.\n\n5. Create a New Client:\n   - Choose the option to create a new client from the \"Manage Clients\" page.\n\n\n6. Submit and Obtain Client ID and Secret:\n   - After submitting the required information, a newly provisioned client ID and client secret will be generated and displayed on the \"Manage Clients\" page.\n\nNow you have successfully generated a client ID and client secret for your Domo instance. These credentials will be used in the component's OAuth connection."
      }
    }
  ],
  "actions": {
    "listAccounts": {
      "display": {
        "label": "List Accounts",
        "description": "Get a list of all Accounts for which the user has permissions."
      },
      "key": "listAccounts",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "The number of Accounts to return in the list. The default is 50 and the maximum is 500.",
          "key": "limit",
          "type": "string",
          "default": "",
          "label": "Limit"
        },
        {
          "required": false,
          "comments": "The offset of Accounts to begin the list of Accounts within the response.",
          "key": "offset",
          "type": "string",
          "default": "",
          "label": "Offset"
        }
      ]
    },
    "getAccounts": {
      "display": {
        "label": "Get Accounts",
        "description": "Retrieve the details of an account type. This includes information on the properties required to create an Account of this type."
      },
      "key": "getAccounts",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "The ID of the account type.",
          "key": "accountTypeId",
          "type": "string",
          "default": "",
          "label": "Account Type ID"
        }
      ]
    },
    "createAccount": {
      "display": {
        "label": "Create Account",
        "description": "When creating an Account, you must specify the Account Type properties. The Account Type properties are different, depending on the type of Account you are trying to create."
      },
      "key": "createAccount",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "key": "name",
          "type": "string",
          "default": "",
          "label": "Name"
        },
        {
          "required": false,
          "key": "id",
          "type": "string",
          "default": "",
          "label": "ID"
        },
        {
          "required": false,
          "key": "password",
          "type": "string",
          "default": "",
          "label": "Password"
        },
        {
          "required": false,
          "key": "authenticateBy",
          "type": "string",
          "default": "",
          "label": "Authenticate By"
        },
        {
          "required": false,
          "key": "url",
          "type": "string",
          "default": "",
          "label": "URL"
        },
        {
          "required": false,
          "key": "username",
          "type": "string",
          "default": "",
          "label": "Username"
        }
      ]
    },
    "updateAccount": {
      "display": {
        "label": "Update Account",
        "description": "Updates the specified Account’s metadata as well as the Account’s Type properties."
      },
      "key": "updateAccount",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "The ID of the account to update.",
          "key": "accountId",
          "type": "string",
          "default": "",
          "label": "Account ID"
        },
        {
          "language": "json",
          "required": true,
          "example": "{\n    \"name\": \"string\",\n    \"type\": {\n      \"id\": \"string\",\n      \"properties\": {\n        \"password\": \"string\",\n        \"authenticateBy\": \"string\",\n        \"url\": \"string\",\n        \"username\": \"string\"\n      }\n    }\n  }",
          "key": "updateAccountBody",
          "type": "code",
          "default": "",
          "label": "Update Account Body"
        }
      ]
    },
    "deleteAccount": {
      "display": {
        "label": "Delete Account",
        "description": "Deletes an Account from your Domo instance."
      },
      "key": "deleteAccount",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "The ID of the account to delete.",
          "key": "accountId",
          "type": "string",
          "default": "",
          "label": "Account ID"
        }
      ]
    },
    "shareAccount": {
      "display": {
        "label": "Share Account",
        "description": "Share an Account with a User."
      },
      "key": "shareAccount",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The User to share the Account with.",
          "required": true,
          "key": "userArray",
          "type": "string",
          "default": "",
          "collection": "valuelist",
          "label": "User"
        },
        {
          "required": true,
          "comments": "The ID of the Account.",
          "key": "accountId",
          "type": "string",
          "default": "",
          "label": "Account ID"
        }
      ]
    },
    "listUsers": {
      "display": {
        "label": "List Users",
        "description": "Get a list of all users in your Domo instance."
      },
      "key": "listUsers",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "The amount of users to return in the list. The default is 50 and the maximum is 500.",
          "key": "limit",
          "type": "string",
          "default": "",
          "label": "Limit"
        },
        {
          "required": false,
          "comments": "The offset of the user ID to begin list of users within the response.",
          "key": "offset",
          "type": "string",
          "default": "",
          "label": "Offset"
        }
      ]
    },
    "getUser": {
      "display": {
        "label": "Get User",
        "description": "Retrieves the details of an existing user."
      },
      "key": "getUser",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the user.",
          "required": true,
          "key": "userId",
          "type": "string",
          "default": "",
          "label": "User ID"
        }
      ]
    },
    "createUser": {
      "display": {
        "label": "Create User",
        "description": "Creates a new user in your Domo instance."
      },
      "key": "createUser",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "User's primary email used in profile.",
          "key": "email",
          "type": "string",
          "default": "",
          "label": "Email"
        },
        {
          "required": false,
          "key": "name",
          "type": "string",
          "default": "",
          "label": "Name"
        },
        {
          "required": true,
          "comments": "The role of the user created.",
          "model": [
            {
              "label": "Admin",
              "value": "Admin"
            },
            {
              "label": "Privileged",
              "value": "Privileged"
            },
            {
              "label": "Participant",
              "value": "Participant"
            }
          ],
          "key": "role",
          "type": "string",
          "default": "Admin",
          "label": "Role"
        },
        {
          "required": false,
          "comments": "User's secondary email in profile.",
          "key": "alternateEmail",
          "type": "string",
          "default": "",
          "label": "Alternate Email"
        },
        {
          "required": false,
          "comments": "Employee number within company.",
          "key": "employeeNumber",
          "type": "string",
          "default": "",
          "label": "Employee Number"
        },
        {
          "required": false,
          "comments": "Locale used to display to user the system settings throughout Domo application.",
          "key": "locale",
          "type": "string",
          "default": "",
          "label": "Locale"
        },
        {
          "required": false,
          "comments": "Free text that can be used to define office location.",
          "key": "location",
          "type": "string",
          "default": "",
          "label": "Location"
        },
        {
          "required": false,
          "comments": "Primary phone number of user.",
          "key": "phone",
          "type": "string",
          "default": "",
          "label": "Phone"
        },
        {
          "required": false,
          "comments": "Send an email invite to created user.",
          "key": "sendInvite",
          "type": "string",
          "default": "",
          "label": "Send Invite"
        },
        {
          "required": false,
          "comments": "Time zone used to display to user the system times throughout Domo application.",
          "key": "timezone",
          "type": "string",
          "default": "",
          "label": "Timezone"
        },
        {
          "required": false,
          "comments": "User's job title.",
          "key": "title",
          "type": "string",
          "default": "",
          "label": "Title"
        },
        {
          "language": "json",
          "required": false,
          "example": "{\n    \"title\": \"Software Engineer\",\n    \"email\": \"leonhard.euler@domo.com\",\n    \"alternateEmail\": \"leonhardeuler@email.com\",\n    \"role\": \"Admin\",\n    \"phone\": \"888-361-1078\",\n    \"name\": \"Leonhard Euler\",\n    \"location\": \"American Fork\",\n    \"timezone\": \"\",\n    \"locale\": \"\",\n    \"employeeNumber\": 23432\n  }",
          "key": "userBody",
          "type": "code",
          "default": "",
          "label": "User Body"
        }
      ]
    },
    "updateUser": {
      "display": {
        "label": "Update User",
        "description": "Updates the specified user by providing values to parameters passed. Any parameter left out of the request will cause the specific user’s attribute to remain unchanged."
      },
      "key": "updateUser",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the user.",
          "required": true,
          "key": "userId",
          "type": "string",
          "default": "",
          "label": "User ID"
        },
        {
          "required": false,
          "comments": "User's primary email used in profile.",
          "key": "email",
          "type": "string",
          "default": "",
          "label": "Email"
        },
        {
          "required": false,
          "comments": "User's full name",
          "key": "name",
          "type": "string",
          "default": "",
          "label": "Name"
        },
        {
          "required": false,
          "comments": "The system role of the user",
          "model": [
            {
              "label": "Admin",
              "value": "Admin"
            },
            {
              "label": "Privileged",
              "value": "Privileged"
            },
            {
              "label": "Participant",
              "value": "Participant"
            }
          ],
          "key": "role",
          "type": "string",
          "default": "Admin",
          "label": "Role"
        },
        {
          "required": false,
          "comments": "User's secondary email in profile.",
          "key": "alternateEmail",
          "type": "string",
          "default": "",
          "label": "Alternate Email"
        },
        {
          "required": false,
          "comments": "Employee number within company.",
          "key": "employeeNumber",
          "type": "string",
          "default": "",
          "label": "Employee Number"
        },
        {
          "required": false,
          "comments": "Locale used to display to user the system settings throughout Domo application.",
          "key": "locale",
          "type": "string",
          "default": "",
          "label": "Locale"
        },
        {
          "required": false,
          "comments": "Free text that can be used to define office location.",
          "key": "location",
          "type": "string",
          "default": "",
          "label": "Location"
        },
        {
          "required": false,
          "comments": "Primary phone number of user.",
          "key": "phone",
          "type": "string",
          "default": "",
          "label": "Phone"
        },
        {
          "required": false,
          "comments": "The ID of the custom or system role of the user.",
          "key": "roled",
          "type": "string",
          "default": "",
          "label": "Roled"
        },
        {
          "required": false,
          "comments": "Time zone used to display to user the system times throughout Domo application.",
          "key": "timezone",
          "type": "string",
          "default": "",
          "label": "Timezone"
        },
        {
          "required": false,
          "comments": "User's job title.",
          "key": "title",
          "type": "string",
          "default": "",
          "label": "Title"
        },
        {
          "language": "json",
          "required": false,
          "example": "{\n    \"email\": \"leonhard.euler@domo.com\",\n    \"role\": \"Admin\",\n    \"name\": \"Leonhard Euler\"\n  }",
          "key": "updateUserBody",
          "type": "code",
          "default": "",
          "label": "Update User Body"
        }
      ]
    },
    "deleteUser": {
      "display": {
        "label": "Delete User",
        "description": "Permanently deletes a user from your Domo instance."
      },
      "key": "deleteUser",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the user.",
          "required": true,
          "key": "userId",
          "type": "string",
          "default": "",
          "label": "User ID"
        }
      ]
    },
    "getActivityLogEntries": {
      "display": {
        "label": "Get Activity Log Entries",
        "description": "Retrieves activity log entries"
      },
      "key": "getActivityLogEntries",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "The start time(milliseconds) of when you want to receive log events.",
          "key": "start",
          "type": "string",
          "default": "",
          "label": "Start"
        },
        {
          "required": false,
          "comments": "The end time(milliseconds) of when you want to receive log events.",
          "key": "end",
          "type": "string",
          "default": "",
          "label": "End"
        },
        {
          "required": false,
          "comments": "The maximum number of events you want to retrieve(default is 50, maximum of 1000).",
          "key": "limit",
          "type": "string",
          "default": "",
          "label": "Limit"
        },
        {
          "required": false,
          "comments": "The offset location of events you retrieve(default is 0).",
          "key": "offset",
          "type": "string",
          "default": "",
          "label": "Offset"
        },
        {
          "required": false,
          "comments": "The Id of the user.",
          "key": "user",
          "type": "string",
          "default": "",
          "label": "User"
        }
      ]
    },
    "listDataSets": {
      "display": {
        "label": "List DataSets",
        "description": "Get a list of all DataSets in your Domo instance."
      },
      "key": "listDataSets",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "The amount of DataSets to return in the list. The default is 50 and the maximum is 50.",
          "key": "limit",
          "type": "string",
          "default": "",
          "label": "Limit"
        },
        {
          "required": false,
          "comments": "If included, will limit the list of DataSets to those with names that contain the string passed in. nameLike is case insensitive.",
          "key": "nameLike",
          "type": "string",
          "default": "",
          "label": "Name Like"
        },
        {
          "required": false,
          "comments": "The offset of the DataSet ID to begin list of users within the response.",
          "key": "offset",
          "type": "string",
          "default": "",
          "label": "Offset"
        },
        {
          "required": false,
          "comments": "The DataSet field to sort by. Fields prefixed with a negative sign reverses the sort (i.e. '-name' does a reverse sort by the name of the DataSets).",
          "key": "sort",
          "type": "string",
          "default": "",
          "label": "Sort"
        }
      ]
    },
    "getDataSet": {
      "display": {
        "label": "Get Data Set",
        "description": "Retrieves the details of an existing DataSet."
      },
      "key": "getDataSet",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "The ID of the DataSet.",
          "key": "datasetId",
          "type": "string",
          "default": "",
          "label": "DataSet ID"
        }
      ]
    },
    "createDataSet": {
      "display": {
        "label": "Create Data Set",
        "description": "Creates a new DataSet in your Domo instance. Once the DataSet has been created, data can then be imported into the DataSet."
      },
      "key": "createDataSet",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "Name of the DataSet to create",
          "key": "name",
          "type": "string",
          "default": "",
          "label": "Name"
        },
        {
          "comments": "Description of the DataSet to create",
          "required": true,
          "key": "description",
          "type": "string",
          "default": "",
          "label": "Description"
        },
        {
          "required": false,
          "key": "rows",
          "type": "string",
          "default": "",
          "label": "Rows"
        },
        {
          "language": "json",
          "required": true,
          "comments": "Array of columns in the DataSet",
          "example": "[\n      {\n        \"type\": \"STRING\",\n        \"name\": \"Friend\"\n      },\n      {\n        \"type\": \"STRING\",\n        \"name\": \"Attending\"\n      }\n    ]",
          "key": "columns",
          "type": "code",
          "default": "",
          "label": "Columns"
        }
      ]
    },
    "updateDataSet": {
      "display": {
        "label": "Update Data Set",
        "description": "Updates the specified DataSet’s metadata by providing values to parameters passed."
      },
      "key": "updateDataSet",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "The ID of the DataSet.",
          "key": "datasetId",
          "type": "string",
          "default": "",
          "label": "DataSet ID"
        },
        {
          "language": "json",
          "required": false,
          "example": "{\n    \"name\": \"Leonhard Euler Birthday Bash\",\n    \"description\": \"VIP Guest List\",\n    \"pdpEnabled\": true\n  }",
          "key": "updateDataSetBody",
          "type": "code",
          "default": "",
          "label": "Update DataSet Body"
        }
      ]
    },
    "deleteDataSet": {
      "display": {
        "label": "Delete Data Set",
        "description": "Permanently deletes a DataSet from your Domo instance. This can be done for all DataSets, not just those created through the API."
      },
      "key": "deleteDataSet",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "The ID of the DataSet.",
          "key": "datasetId",
          "type": "string",
          "default": "",
          "label": "DataSet ID"
        }
      ]
    },
    "queryDataSet": {
      "display": {
        "label": "Query Data Set",
        "description": "Queries the data in an existing Domo DataSet"
      },
      "key": "queryDataSet",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "The ID of the DataSet.",
          "key": "datasetId",
          "type": "string",
          "default": "",
          "label": "DataSet ID"
        },
        {
          "required": true,
          "comments": "The SQL query to execute.",
          "key": "sql",
          "type": "string",
          "default": "",
          "label": "SQL"
        }
      ]
    },
    "importDataIntoDataSet": {
      "display": {
        "label": "Import Data Into DataSet",
        "description": "Import data into a DataSet in your Domo instance. This request will replace the data currently in the DataSet."
      },
      "key": "importDataIntoDataSet",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "The ID of the DataSet.",
          "key": "datasetId",
          "type": "string",
          "default": "",
          "label": "DataSet ID"
        },
        {
          "required": true,
          "key": "csvBody",
          "type": "text",
          "default": "",
          "label": "CSV Body"
        }
      ]
    },
    "exportDataFromDataSet": {
      "display": {
        "label": "Export Data From DataSet",
        "description": "Export data from a DataSet in your Domo instance."
      },
      "key": "exportDataFromDataSet",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "The filename of the exported csv.",
          "key": "fileName",
          "type": "string",
          "default": "",
          "label": "File Name"
        },
        {
          "comments": "Include table header.",
          "required": false,
          "model": [
            {
              "label": "",
              "value": ""
            },
            {
              "label": "TRUE",
              "value": "true"
            },
            {
              "label": "FALSE",
              "value": "false"
            }
          ],
          "key": "includeHeader",
          "type": "string",
          "default": "",
          "label": "Include Header"
        }
      ]
    },
    "listGroups": {
      "display": {
        "label": "List Groups",
        "description": "Get a list of all groups in your Domo instance."
      },
      "key": "listGroups",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "The amount of groups to return in the list. The default is 50 and the maximum is 500.",
          "key": "limit",
          "type": "string",
          "default": "",
          "label": "Limit"
        },
        {
          "required": false,
          "comments": "The offset of the group ID to begin list of groups within the response.",
          "key": "offset",
          "type": "string",
          "default": "",
          "label": "Offset"
        }
      ]
    },
    "getGroup": {
      "display": {
        "label": "Get Group",
        "description": "Retrieves the details of an existing group."
      },
      "key": "getGroup",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the group.",
          "required": true,
          "key": "groupId",
          "type": "string",
          "default": "",
          "label": "Group ID"
        }
      ]
    },
    "createGroup": {
      "display": {
        "label": "Create Group",
        "description": "Creates a new group in your Domo instance."
      },
      "key": "createGroup",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "The name of the group.",
          "key": "name",
          "type": "string",
          "default": "",
          "label": "Name"
        }
      ]
    },
    "updateGroup": {
      "display": {
        "label": "Update Group",
        "description": "Updates the specified group by providing values to parameters passed. Any parameter left out of the request will cause the specific group’s attribute to remain unchanged."
      },
      "key": "updateGroup",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the group.",
          "required": true,
          "key": "groupId",
          "type": "string",
          "default": "",
          "label": "Group ID"
        },
        {
          "language": "json",
          "required": false,
          "example": "{\n    \"name\": \"Groupy McGroup\",\n    \"active\": true\n  }",
          "key": "updateGroupBody",
          "type": "code",
          "default": "",
          "label": "Update Group Body"
        }
      ]
    },
    "deleteGroup": {
      "display": {
        "label": "Delete Group",
        "description": "Permanently deletes a group from your Domo instance."
      },
      "key": "deleteGroup",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the group to delete.",
          "required": true,
          "key": "groupId",
          "type": "string",
          "default": "",
          "label": "Group ID"
        }
      ]
    },
    "addUserToGroup": {
      "display": {
        "label": "Add User To Group",
        "description": "Add user to a group in your Domo instance."
      },
      "key": "addUserToGroup",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the group.",
          "required": true,
          "key": "groupId",
          "type": "string",
          "default": "",
          "label": "Group ID"
        },
        {
          "comments": "The ID of the user.",
          "required": true,
          "key": "userId",
          "type": "string",
          "default": "",
          "label": "User ID"
        }
      ]
    },
    "removeUserFromGroup": {
      "display": {
        "label": "Remove User From Group",
        "description": "Remove a user from a group in your Domo instance."
      },
      "key": "removeUserFromGroup",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the group.",
          "required": true,
          "key": "groupId",
          "type": "string",
          "default": "",
          "label": "Group ID"
        },
        {
          "comments": "The ID of the user.",
          "required": true,
          "key": "userId",
          "type": "string",
          "default": "",
          "label": "User ID"
        }
      ]
    },
    "listUsersInGroup": {
      "display": {
        "label": "List Users In Group",
        "description": "List the users in a group in your Domo instance."
      },
      "key": "listUsersInGroup",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the group.",
          "required": true,
          "key": "groupId",
          "type": "string",
          "default": "",
          "label": "Group ID"
        },
        {
          "required": false,
          "comments": "The amount of groups to return in the list. The default is 50 and the maximum is 500.",
          "key": "limit",
          "type": "string",
          "default": "",
          "label": "Limit"
        },
        {
          "required": false,
          "comments": "The offset of the group ID to begin list of groups within the response.",
          "key": "offset",
          "type": "string",
          "default": "",
          "label": "Offset"
        }
      ]
    },
    "listPages": {
      "display": {
        "label": "List Pages",
        "description": "Get a list of all pages in your Domo instance."
      },
      "key": "listPages",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "The amount of pages to return in the list. The default is 50 and the maximum is 500.",
          "key": "limit",
          "type": "string",
          "default": "",
          "label": "Limit"
        },
        {
          "required": false,
          "comments": "The offset of the page ID to begin list of pages within the response.",
          "key": "offset",
          "type": "string",
          "default": "",
          "label": "Offset"
        }
      ]
    },
    "getPage": {
      "display": {
        "label": "Get Page",
        "description": "Retrieves the details of an existing page."
      },
      "key": "getPage",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "The ID of the page.",
          "key": "pageId",
          "type": "string",
          "default": "",
          "label": "Page ID"
        }
      ]
    },
    "createPage": {
      "display": {
        "label": "Create Page",
        "description": "Creates a new page in your Domo instance."
      },
      "key": "createPage",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "The name of the page.",
          "key": "name",
          "type": "string",
          "default": "",
          "label": "Name"
        },
        {
          "comments": "If provided, the page will be created as a subpage to the page provided",
          "required": false,
          "key": "parentId",
          "type": "string",
          "default": "",
          "label": "Parent ID"
        },
        {
          "comments": "will restrict other users the ability to make edits to page or its content - the default value is false",
          "required": false,
          "model": [
            {
              "label": "",
              "value": ""
            },
            {
              "label": "TRUE",
              "value": "TRUE"
            },
            {
              "label": "FALSE",
              "value": "FALSE"
            }
          ],
          "key": "locked",
          "type": "string",
          "default": "",
          "label": "Locked"
        },
        {
          "comments": "The ID of the card to add to the page",
          "required": false,
          "key": "cardIds",
          "type": "string",
          "default": "",
          "collection": "valuelist",
          "label": "Card ID"
        },
        {
          "comments": "The ID of the user that will be given access to view the page",
          "required": false,
          "key": "userIds",
          "type": "string",
          "default": "",
          "collection": "valuelist",
          "label": "User ID"
        },
        {
          "comments": "The ID of the group that will be given access to view the page",
          "required": false,
          "key": "groupIds",
          "type": "string",
          "default": "",
          "collection": "valuelist",
          "label": "Group ID"
        }
      ]
    },
    "updatePage": {
      "display": {
        "label": "Update Page",
        "description": "Updates the specified page by providing values to parameters passed. Any parameter left out of the request will cause the specific page’s attribute to remain unchanged."
      },
      "key": "updatePage",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "The ID of the page.",
          "key": "pageId",
          "type": "string",
          "default": "",
          "label": "Page ID"
        },
        {
          "language": "json",
          "required": true,
          "example": "{\n    \"page_id\": 0,\n    \"name\": \"string\",\n    \"parentId\": 0,\n    \"locked\": true,\n    \"collectionIds\": [\n      0\n    ],\n    \"cardIds\": [\n      0\n    ],\n    \"visibility\": {\n      \"userIds\": [\n        0\n      ],\n      \"groupIds\": [\n        0\n      ]\n    }\n  }",
          "key": "updatePageBody",
          "type": "code",
          "default": "",
          "label": "Update Page Body"
        }
      ]
    },
    "deletePage": {
      "display": {
        "label": "Delete Page",
        "description": "Permanently deletes a page from your Domo instance."
      },
      "key": "deletePage",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "The ID of the page.",
          "key": "pageId",
          "type": "string",
          "default": "",
          "label": "Page ID"
        }
      ]
    },
    "listProjects": {
      "display": {
        "label": "List Projects",
        "description": "Retrieves a list of all projects that the client scope has access to."
      },
      "key": "listProjects",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "getProject": {
      "display": {
        "label": "Get Project",
        "description": "Retrieves the details of an individual existing project given a project id. Use the special project ID me to return your personal project."
      },
      "key": "getProject",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the project.",
          "required": true,
          "key": "projectId",
          "type": "string",
          "default": "",
          "label": "Project ID"
        }
      ]
    },
    "createProject": {
      "display": {
        "label": "Create Project",
        "description": "Create a new project in your Domo instance"
      },
      "key": "createProject",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "Array of user ID's that will be assigned as members of the project",
          "required": true,
          "key": "members",
          "type": "string",
          "default": "",
          "label": "Members"
        },
        {
          "required": true,
          "comments": "The name of the project.",
          "key": "name",
          "type": "string",
          "default": "",
          "label": "Name"
        },
        {
          "comments": "Whether or not the project should be publicly available to other Domo users",
          "required": true,
          "model": [
            {
              "label": "TRUE",
              "value": "true"
            },
            {
              "label": "FALSE",
              "value": "false"
            }
          ],
          "key": "publicInput",
          "type": "string",
          "default": "true",
          "label": "Public"
        },
        {
          "comments": "The description of the project.",
          "required": false,
          "key": "description",
          "type": "string",
          "default": "",
          "label": "Description"
        },
        {
          "comments": "The due date of the project",
          "required": false,
          "key": "dueDate",
          "type": "string",
          "default": "",
          "label": "Due Date"
        },
        {
          "comments": "Body member",
          "required": false,
          "key": "membersArray",
          "type": "string",
          "default": "",
          "collection": "valuelist",
          "label": "Member ID"
        },
        {
          "required": false,
          "model": [
            {
              "label": "",
              "value": ""
            },
            {
              "label": "TRUE",
              "value": "TRUE"
            },
            {
              "label": "FALSE",
              "value": "FALSE"
            }
          ],
          "key": "publicBody",
          "type": "string",
          "default": "",
          "label": "Public Body"
        },
        {
          "required": false,
          "comments": "Body name",
          "key": "bodyName",
          "type": "string",
          "default": "",
          "label": "Name"
        }
      ]
    },
    "updateProject": {
      "display": {
        "label": "Update Project",
        "description": "Updates attributes of an existing project in your Domo instance. The following properties are read-only and cannot be updated with this request:id members createdBy createdDate"
      },
      "key": "updateProject",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the project.",
          "required": true,
          "key": "projectId",
          "type": "string",
          "default": "",
          "label": "Project ID"
        },
        {
          "language": "json",
          "required": false,
          "example": "{\n    \"name\": \"string\"\n  }",
          "key": "updateProjectBody",
          "type": "code",
          "default": "",
          "label": "Update Project Body"
        },
        {
          "comments": "Updates the description of the project.",
          "required": false,
          "key": "description",
          "type": "string",
          "default": "",
          "label": "Description"
        },
        {
          "comments": "Updates the due date of the project.",
          "required": false,
          "key": "dueDate",
          "type": "string",
          "default": "",
          "label": "Due Date"
        },
        {
          "required": false,
          "comments": "Updates the name of the project.",
          "key": "name",
          "type": "string",
          "default": "",
          "label": "Name"
        },
        {
          "comments": "Updates whether or not the project is publicly available to Domo users.",
          "required": false,
          "model": [
            {
              "label": "",
              "value": ""
            },
            {
              "label": "TRUE",
              "value": "true"
            },
            {
              "label": "FALSE",
              "value": "false"
            }
          ],
          "key": "publicUpdate",
          "type": "string",
          "default": "",
          "label": "Public"
        }
      ]
    },
    "deleteProject": {
      "display": {
        "label": "Delete Project",
        "description": "Permanently deletes a project from your Domo instance."
      },
      "key": "deleteProject",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the project.",
          "required": true,
          "key": "projectId",
          "type": "string",
          "default": "",
          "label": "Project ID"
        }
      ]
    },
    "addAttachment": {
      "display": {
        "label": "Add Attachment",
        "description": "Add a multipart form file to a task item as an attachment."
      },
      "key": "addAttachment",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the project.",
          "required": true,
          "key": "projectId",
          "type": "string",
          "default": "",
          "label": "Project ID"
        },
        {
          "comments": "The ID of the list.",
          "required": true,
          "key": "listId",
          "type": "string",
          "default": "",
          "label": "List ID"
        },
        {
          "comments": "The ID of the task.",
          "required": true,
          "key": "taskId",
          "type": "string",
          "default": "",
          "label": "Task ID"
        }
      ]
    },
    "downloadAttachment": {
      "display": {
        "label": "Download Attachment",
        "description": "Downloads an individual attachment given an attachment id."
      },
      "key": "downloadAttachment",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the list.",
          "required": true,
          "key": "listId",
          "type": "string",
          "default": "",
          "label": "List ID"
        },
        {
          "comments": "The ID of the project.",
          "required": true,
          "key": "projectId",
          "type": "string",
          "default": "",
          "label": "Project ID"
        },
        {
          "comments": "The ID of the task.",
          "required": true,
          "key": "taskId",
          "type": "string",
          "default": "",
          "label": "Task ID"
        },
        {
          "required": true,
          "comments": "The ID of the attachment.",
          "key": "attachmentId",
          "type": "string",
          "default": "",
          "label": "Attachment ID"
        }
      ]
    },
    "deleteAttachment": {
      "display": {
        "label": "Delete Attachment",
        "description": "Permanently deletes an attachment from your task."
      },
      "key": "deleteAttachment",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the project that the attachment belongs to.",
          "required": true,
          "key": "projectId",
          "type": "string",
          "default": "",
          "label": "Project ID"
        },
        {
          "comments": "The ID of the task that the attachment belongs to.",
          "required": true,
          "key": "taskId",
          "type": "string",
          "default": "",
          "label": "Task ID"
        },
        {
          "required": true,
          "comments": "The ID of the attachment.",
          "key": "attachmentId",
          "type": "string",
          "default": "",
          "label": "Attachment ID"
        }
      ]
    },
    "getListOfAttachments": {
      "display": {
        "label": "Get List Of Attachments",
        "description": "Retrieve details about all of the attachments belonging to a particular task."
      },
      "key": "getListOfAttachments",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the project.",
          "required": true,
          "key": "projectId",
          "type": "string",
          "default": "",
          "label": "Project ID"
        },
        {
          "comments": "The ID of the list.",
          "required": true,
          "key": "listId",
          "type": "string",
          "default": "",
          "label": "List ID"
        },
        {
          "comments": "The ID of the task.",
          "required": true,
          "key": "taskId",
          "type": "string",
          "default": "",
          "label": "Task ID"
        }
      ]
    },
    "getProjectMembers": {
      "display": {
        "label": "Get Project Members",
        "description": "Retrieves a list of ids of the users that are members of the given project id."
      },
      "key": "getProjectMembers",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the project.",
          "required": true,
          "key": "projectId",
          "type": "string",
          "default": "",
          "label": "Project ID"
        }
      ]
    },
    "updateProjectMembers": {
      "display": {
        "label": "Update Project Members",
        "description": "Update the members of a given project id."
      },
      "key": "updateProjectMembers",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the project.",
          "required": true,
          "key": "projectId",
          "type": "string",
          "default": "",
          "label": "Project ID"
        },
        {
          "language": "json",
          "required": false,
          "example": "[\n    27,\n    105,\n    93,\n    84,\n    107\n  ]",
          "key": "updateProjectMembersBody",
          "type": "code",
          "default": "",
          "label": "Update Project Members Body"
        }
      ]
    },
    "listProjectLists": {
      "display": {
        "label": "List Project Lists",
        "description": "Retrieves all lists available within a given project id."
      },
      "key": "listProjectLists",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the project.",
          "required": true,
          "key": "projectId",
          "type": "string",
          "default": "",
          "label": "Project ID"
        }
      ]
    },
    "getList": {
      "display": {
        "label": "Get List",
        "description": "Retrieves the details of an individual list given a project id and a list id."
      },
      "key": "getList",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the project.",
          "required": true,
          "key": "projectId",
          "type": "string",
          "default": "",
          "label": "Project ID"
        },
        {
          "comments": "The ID of the list.",
          "required": true,
          "key": "listId",
          "type": "string",
          "default": "",
          "label": "List ID"
        }
      ]
    },
    "createList": {
      "display": {
        "label": "Create List",
        "description": "Creates a new list within the given project id."
      },
      "key": "createList",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "The name of the list.",
          "key": "name",
          "type": "string",
          "default": "",
          "label": "Name"
        },
        {
          "comments": "The type of the list.",
          "required": true,
          "model": [
            {
              "label": "TODO",
              "value": "TODO"
            },
            {
              "label": "WORKING_ON",
              "value": "WORKING_ON"
            },
            {
              "label": "COMPLETED",
              "value": "COMPLETED"
            }
          ],
          "key": "type",
          "type": "string",
          "default": "",
          "label": "Type"
        },
        {
          "comments": "The ordered index of the list within the project. Setting this property will re-order other lists in the project to maintain sequential order. Leaving this property blank will default the index to 1 and shift the index of all other lists.",
          "required": false,
          "key": "index",
          "type": "string",
          "default": "",
          "label": "Index"
        },
        {
          "comments": "The ID of the project.",
          "required": true,
          "key": "projectId",
          "type": "string",
          "default": "",
          "label": "Project ID"
        }
      ]
    },
    "updateList": {
      "display": {
        "label": "Update List",
        "description": "Update the details of a list given an existing project id and list id."
      },
      "key": "updateList",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the list.",
          "required": true,
          "key": "listId",
          "type": "string",
          "default": "",
          "label": "List ID"
        },
        {
          "comments": "The ID of the project.",
          "required": true,
          "key": "projectId",
          "type": "string",
          "default": "",
          "label": "Project ID"
        },
        {
          "comments": "The updated index of the list within the project. Updating the index of a list may also change the order of the other lists in the project to remain sequential.",
          "required": true,
          "key": "index",
          "type": "string",
          "default": "",
          "label": "Index"
        },
        {
          "required": true,
          "comments": "The updated name of the list.",
          "key": "name",
          "type": "string",
          "default": "",
          "label": "Name"
        },
        {
          "comments": "The type of the list.",
          "required": true,
          "model": [
            {
              "label": "TODO",
              "value": "TODO"
            },
            {
              "label": "WORKING_ON",
              "value": "WORKING_ON"
            },
            {
              "label": "COMPLETED",
              "value": "COMPLETED"
            }
          ],
          "key": "type",
          "type": "string",
          "default": "",
          "label": "Type"
        },
        {
          "language": "json",
          "required": false,
          "example": "{\n    \"name\": \"Needs QA\",\n    \"type\": \"TODO\",\n    \"index\": 3\n  }",
          "key": "updateListBody",
          "type": "code",
          "default": "",
          "label": "Update List Body"
        }
      ]
    },
    "deleteList": {
      "display": {
        "label": "Delete List",
        "description": "Permanently deletes a list from your Domo instance."
      },
      "key": "deleteList",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the project.",
          "required": true,
          "key": "projectId",
          "type": "string",
          "default": "",
          "label": "Project ID"
        },
        {
          "comments": "The ID of the list.",
          "required": true,
          "key": "listId",
          "type": "string",
          "default": "",
          "label": "List ID"
        }
      ]
    },
    "listProjectListTasks": {
      "display": {
        "label": "List Project List Tasks",
        "description": "Retrieves all tasks from a given project id and list id."
      },
      "key": "listProjectListTasks",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the project.",
          "required": true,
          "key": "projectId",
          "type": "string",
          "default": "",
          "label": "Project ID"
        },
        {
          "comments": "The ID of the list.",
          "required": true,
          "key": "listId",
          "type": "string",
          "default": "",
          "label": "List ID"
        },
        {
          "required": false,
          "comments": "The number of records to offset from the beginning of the result list (defaults to 0)",
          "key": "limit",
          "type": "string",
          "default": "",
          "label": "Limit"
        },
        {
          "required": false,
          "comments": "The maximum amount of results to return (defaults to 10 with a maximum of 50)",
          "key": "offset",
          "type": "string",
          "default": "",
          "label": "Offset"
        }
      ]
    },
    "getTask": {
      "display": {
        "label": "Get Task",
        "description": "Retrieves an individual task from a given project id and list id."
      },
      "key": "getTask",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the list.",
          "required": true,
          "key": "listId",
          "type": "string",
          "default": "",
          "label": "List ID"
        },
        {
          "comments": "The ID of the project.",
          "required": true,
          "key": "projectId",
          "type": "string",
          "default": "",
          "label": "Project ID"
        },
        {
          "comments": "The ID of the task.",
          "required": true,
          "key": "taskId",
          "type": "string",
          "default": "",
          "label": "Task ID"
        }
      ]
    },
    "createTask": {
      "display": {
        "label": "Create Task",
        "description": "Add a task to a project list."
      },
      "key": "createTask",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the project that the task belongs to.",
          "required": true,
          "key": "projectId",
          "type": "string",
          "default": "",
          "label": "Project ID"
        },
        {
          "comments": "The ID of the list within a project that the task belongs to.",
          "required": true,
          "key": "listId",
          "type": "string",
          "default": "",
          "label": "List ID"
        },
        {
          "required": true,
          "comments": "The name of the task.",
          "key": "taskName",
          "type": "string",
          "default": "",
          "label": "Task Name"
        },
        {
          "required": false,
          "comments": "An array of user IDs that are assigned as contributors to the task.",
          "key": "contributors",
          "type": "string",
          "default": "",
          "label": "Contributors"
        },
        {
          "comments": "An optional description of the task.",
          "required": false,
          "key": "description",
          "type": "string",
          "default": "",
          "label": "Description"
        },
        {
          "comments": "The date the task is expected to be completed.",
          "required": false,
          "key": "dueDate",
          "type": "string",
          "default": "",
          "label": "Due Date"
        },
        {
          "required": false,
          "comments": "The ID of the Domo user that owns the task.",
          "key": "ownedBy",
          "type": "string",
          "default": "",
          "label": "Owned By"
        },
        {
          "required": false,
          "comments": "Priority of task within a list. Setting this property will impact the index of other tasks in the list to maintain sequential order. If not provided the priority will default to 1 and the index of all the other tasks in the list will shift.",
          "key": "priority",
          "type": "string",
          "default": "",
          "label": "Priority"
        },
        {
          "required": false,
          "comments": "An array of tags that have been assigned to the task.",
          "key": "tags",
          "type": "string",
          "default": "",
          "label": "Tags"
        },
        {
          "language": "json",
          "required": false,
          "comments": "The request body accepts a task object.",
          "example": "{\n    \"id\": \"3\",\n    \"projectId\": \"2\",\n    \"projectListId\": \"4\",\n    \"taskName\": \"Business Plan Review\",\n    \"priority\": 3,\n    \"contributors\": [\n      27\n    ],\n    \"tags\": [],\n    \"archived\": false\n  }",
          "key": "taskObjectBody",
          "type": "code",
          "default": "",
          "label": "Task Object"
        }
      ]
    },
    "updateTask": {
      "display": {
        "label": "Update Task",
        "description": "Update the details of a task given an existing project id, list id, and task id."
      },
      "key": "updateTask",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the task.",
          "required": true,
          "key": "taskId",
          "type": "string",
          "default": "",
          "label": "Task ID"
        },
        {
          "comments": "The ID of the list.",
          "required": true,
          "key": "listId",
          "type": "string",
          "default": "",
          "label": "List ID"
        },
        {
          "comments": "The ID of the project.",
          "required": true,
          "key": "projectId",
          "type": "string",
          "default": "",
          "label": "Project ID"
        },
        {
          "required": false,
          "comments": "An array of user IDs that are assigned as contributors to the task.",
          "key": "contributors",
          "type": "string",
          "default": "",
          "label": "Contributors"
        },
        {
          "comments": "Description of the DataSet to create",
          "required": true,
          "key": "description",
          "type": "string",
          "default": "",
          "label": "Description"
        },
        {
          "comments": "The due date of the project",
          "required": false,
          "key": "dueDate",
          "type": "string",
          "default": "",
          "label": "Due Date"
        },
        {
          "required": false,
          "comments": "The ID of the Domo user that owns the task.",
          "key": "ownedBy",
          "type": "string",
          "default": "",
          "label": "Owned By"
        },
        {
          "required": false,
          "comments": "Priority of task within a list. Setting this property will impact the index of other tasks in the list to maintain sequential order. If not provided the priority will default to 1 and the index of all the other tasks in the list will shift.",
          "key": "priority",
          "type": "string",
          "default": "",
          "label": "Priority"
        },
        {
          "required": false,
          "comments": "An array of tags that have been assigned to the task.",
          "key": "tags",
          "type": "string",
          "default": "",
          "label": "Tags"
        },
        {
          "required": true,
          "comments": "The name of the task.",
          "key": "taskName",
          "type": "string",
          "default": "",
          "label": "Task Name"
        },
        {
          "language": "json",
          "required": false,
          "example": "{\n    \"id\": \"3\",\n    \"projectId\": \"2\",\n    \"projectListId\": \"4\",\n    \"taskName\": \"Project Scaffolding and Infrastructure\",\n    \"priority\": 3,\n    \"contributors\": [\n      27\n    ],\n    \"tags\": [],\n    \"archived\": false\n  }",
          "key": "updateTaskBody",
          "type": "code",
          "default": "",
          "label": "Update Task Body"
        }
      ]
    },
    "listStreams": {
      "display": {
        "label": "List Streams",
        "description": "Get a list of all Streams for which the user has view permissions."
      },
      "key": "listStreams",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "The amount of Stream to return in the list. The default is 50 and the maximum is 500.",
          "key": "limit",
          "type": "string",
          "default": "",
          "label": "Limit"
        },
        {
          "required": false,
          "comments": "The offset of the Stream ID to begin list of users within the response.",
          "key": "offset",
          "type": "string",
          "default": "",
          "label": "Offset"
        }
      ]
    },
    "getStream": {
      "display": {
        "label": "Get Stream",
        "description": "Retrieves the details of an existing stream."
      },
      "key": "getStream",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The id of the stream.",
          "required": true,
          "key": "streamId",
          "type": "string",
          "default": "",
          "label": "Stream ID"
        },
        {
          "required": false,
          "comments": "Return desired fields: {all} or {id, dataset, updateMethod, createdAt, or modifiedAt}",
          "key": "fields",
          "type": "string",
          "default": "",
          "label": "Fields"
        }
      ]
    },
    "createStream": {
      "display": {
        "label": "Create Stream",
        "description": "When creating a Stream, specify the DataSet properties (name and description) and as a convenience, the create Stream API will create a DataSet for you."
      },
      "key": "createStream",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The DataSet object associated with this Stream.",
          "required": true,
          "key": "dataSet",
          "type": "string",
          "default": "",
          "collection": "valuelist",
          "label": "DataSet object"
        },
        {
          "required": false,
          "comments": "The data import behavior.",
          "model": [
            {
              "label": "",
              "value": ""
            },
            {
              "label": "APPEND",
              "value": "APPEND"
            },
            {
              "label": "REPLACE",
              "value": "REPLACE"
            }
          ],
          "key": "updateMethod",
          "type": "string",
          "default": "",
          "label": "Update Method"
        },
        {
          "required": false,
          "key": "name",
          "type": "string",
          "default": "",
          "label": "Name"
        },
        {
          "comments": "",
          "required": false,
          "key": "description",
          "type": "string",
          "default": "",
          "label": "Description"
        },
        {
          "language": "json",
          "required": false,
          "comments": "",
          "example": "[\n      {\n        \"type\": \"STRING\",\n        \"name\": \"Friend\"\n      },\n      {\n        \"type\": \"STRING\",\n        \"name\": \"Attending\"\n      }\n    ]",
          "key": "columns",
          "type": "code",
          "default": "",
          "label": "Columns"
        },
        {
          "required": false,
          "comments": "Update method for body.",
          "model": [
            {
              "label": "",
              "value": ""
            },
            {
              "label": "APPEND",
              "value": "APPEND"
            },
            {
              "label": "REPLACE",
              "value": "REPLACE"
            }
          ],
          "key": "updateMethodBody",
          "type": "string",
          "default": "",
          "label": "Update Method"
        }
      ]
    },
    "updateStream": {
      "display": {
        "label": "Update Stream",
        "description": "Updates the specified Stream’s metadata by providing values to parameters passed."
      },
      "key": "updateStream",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the stream to update.",
          "required": true,
          "key": "streamId",
          "type": "string",
          "default": "",
          "label": "Stream ID"
        },
        {
          "required": true,
          "comments": "The data import behavior.",
          "key": "updateMethodString",
          "type": "string",
          "default": "",
          "label": "Update Method"
        },
        {
          "language": "json",
          "required": false,
          "example": "{\n    \"updateMethod\": \"REPLACE\"\n  }",
          "key": "updateMethodBody",
          "type": "code",
          "default": "",
          "label": "Update Method Body"
        }
      ]
    },
    "deleteStream": {
      "display": {
        "label": "Delete Stream",
        "description": "Deletes a Stream from your Domo instance. This does not a delete the associated DataSet."
      },
      "key": "deleteStream",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the Stream to delete.",
          "required": true,
          "key": "streamId",
          "type": "string",
          "default": "",
          "label": "Stream ID"
        }
      ]
    },
    "searchStream": {
      "display": {
        "label": "Search Stream",
        "description": "Returns all Stream objects that meet argument criteria from original request."
      },
      "key": "searchStream",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "The search qualifiers to search by available qualifiers: dataSource.id or dataSource.owner.id",
          "key": "qualifiers",
          "type": "string",
          "default": "",
          "label": "Qualifiers"
        },
        {
          "required": false,
          "comments": "Return desired fields: {all} or {id, dataset, updateMethod, createdAt, or modifiedAt}",
          "key": "fields",
          "type": "string",
          "default": "",
          "label": "Fields"
        }
      ]
    },
    "listStreamExecution": {
      "display": {
        "label": "List Stream Execution",
        "description": "Returns all Stream Execution objects that meet argument criteria from original request."
      },
      "key": "listStreamExecution",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the Stream",
          "required": true,
          "key": "streamId",
          "type": "string",
          "default": "",
          "label": "Stream ID"
        },
        {
          "required": false,
          "comments": "The amount of Stream to return in the list. The default is 50 and the maximum is 500.",
          "key": "limit",
          "type": "string",
          "default": "",
          "label": "Limit"
        },
        {
          "required": false,
          "comments": "The offset of the Stream ID to begin list of users within the response.",
          "key": "offset",
          "type": "string",
          "default": "",
          "label": "Offset"
        }
      ]
    },
    "getStreamExecution": {
      "display": {
        "label": "Get Stream Execution",
        "description": "Import data into a DataSet in your Domo instance. This request will replace the data currently in the DataSet."
      },
      "key": "getStreamExecution",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the Stream of data being imported into a DataSet.",
          "required": true,
          "key": "streamId",
          "type": "string",
          "default": "",
          "label": "Stream ID"
        },
        {
          "comments": "The ID of the Stream execution within the Stream.",
          "required": true,
          "key": "executionId",
          "type": "string",
          "default": "",
          "label": "Execution ID"
        }
      ]
    },
    "createStreamExecution": {
      "display": {
        "label": "Create Stream Execution",
        "description": "When you’re ready to upload data to your DataSet via a Stream, you first tell Domo that you’re ready to start sending data by creating an Execution."
      },
      "key": "createStreamExecution",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the Stream.",
          "required": true,
          "key": "streamId",
          "type": "string",
          "default": "",
          "label": "Stream ID"
        }
      ]
    },
    "uploadDataPart": {
      "display": {
        "label": "Upload Data Part",
        "description": "Creates a data part within the Stream execution to upload chunks of rows to the DataSet. The calling client should keep track of parts and order them accordingly in an increasing sequence. If a part upload fails, retry the upload as all parts must be present before committing the stream execution."
      },
      "key": "uploadDataPart",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the Stream of data being imported into a DataSet.",
          "required": true,
          "key": "streamId",
          "type": "string",
          "default": "",
          "label": "Stream ID"
        },
        {
          "comments": "The ID of the Stream execution within the Stream.",
          "required": true,
          "key": "executionId",
          "type": "string",
          "default": "",
          "label": "Execution ID"
        },
        {
          "comments": "The ID of the data part being used to upload a subset of data within the Stream execution.",
          "required": true,
          "key": "partId",
          "type": "string",
          "default": "",
          "label": "Part ID"
        }
      ]
    },
    "commitStreamExecution": {
      "display": {
        "label": "Commit Stream Execution",
        "description": "Commits stream execution to import combined set of data parts that have been successfully uploaded."
      },
      "key": "commitStreamExecution",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the Stream of data being imported into a DataSet.",
          "required": true,
          "key": "streamId",
          "type": "string",
          "default": "",
          "label": "Stream ID"
        },
        {
          "comments": "The ID of the Stream execution within the Stream",
          "required": true,
          "key": "executionId",
          "type": "string",
          "default": "",
          "label": "Execution ID"
        }
      ]
    },
    "abortStreamExecution": {
      "display": {
        "label": "Abort Stream Execution",
        "description": "If needed during an execution, aborts an entire Stream execution."
      },
      "key": "abortStreamExecution",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the Stream of data being imported into a DataSet.",
          "required": true,
          "key": "streamId",
          "type": "string",
          "default": "",
          "label": "Stream ID"
        },
        {
          "comments": "The ID of the Stream execution within the Stream, if no Stream execution ID is provided, the current Stream execution will be aborted.",
          "required": true,
          "key": "executionId",
          "type": "string",
          "default": "",
          "label": "Execution ID"
        }
      ]
    },
    "rawRequest": {
      "display": {
        "label": "Raw Request",
        "description": "Send Raw Request to Domo API."
      },
      "key": "rawRequest",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "URL to call",
          "required": true,
          "comments": "This is the URL to call.",
          "example": "/datasets",
          "key": "url",
          "type": "string",
          "default": "",
          "label": "URL"
        },
        {
          "required": true,
          "model": [
            {
              "label": "DELETE",
              "value": "DELETE"
            },
            {
              "label": "GET",
              "value": "GET"
            },
            {
              "label": "HEAD",
              "value": "HEAD"
            },
            {
              "label": "LINK",
              "value": "LINK"
            },
            {
              "label": "OPTIONS",
              "value": "OPTIONS"
            },
            {
              "label": "PATCH",
              "value": "PATCH"
            },
            {
              "label": "POST",
              "value": "POST"
            },
            {
              "label": "PURGE",
              "value": "PURGE"
            },
            {
              "label": "PUT",
              "value": "PUT"
            },
            {
              "label": "UNLINK",
              "value": "UNLINK"
            }
          ],
          "comments": "The HTTP method to use.",
          "key": "method",
          "type": "string",
          "default": "",
          "label": "Method"
        },
        {
          "placeholder": "Data to send",
          "required": false,
          "comments": "The HTTP body payload to send to the URL.",
          "example": "{\"exampleKey\": \"Example Data\"}",
          "key": "data",
          "type": "string",
          "default": "",
          "label": "Data"
        },
        {
          "placeholder": "Data to send",
          "required": false,
          "comments": "The Form Data to be sent as a multipart form upload.",
          "example": "[{\"key\": \"Example Key\", \"value\": new Buffer(\"Hello World\")}]",
          "key": "formData",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Form Data"
        },
        {
          "placeholder": "Data to send",
          "required": false,
          "comments": "File Data to be sent as a multipart form upload.",
          "example": "[{key: \"example.txt\", value: \"My File Contents\"}]",
          "key": "fileData",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "File Data"
        },
        {
          "placeholder": "The file name to apply to a file",
          "required": false,
          "comments": "File names to apply to the file data inputs. Keys must match the file data keys above.",
          "key": "fileDataFileNames",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "File Data File Names"
        },
        {
          "placeholder": "Query Parameter",
          "required": false,
          "comments": "A list of query parameters to send with the request. This is the portion at the end of the URL similar to ?key1=value1&key2=value2.",
          "key": "queryParams",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Query Parameter"
        },
        {
          "placeholder": "Header",
          "required": false,
          "comments": "A list of headers to send with the request.",
          "example": "User-Agent: curl/7.64.1",
          "key": "headers",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Header"
        },
        {
          "placeholder": "Response Type",
          "required": true,
          "comments": "The type of data you expect in the response. You can request json, text, or binary data.",
          "model": [
            {
              "label": "arraybuffer",
              "value": "arraybuffer"
            },
            {
              "label": "document",
              "value": "document"
            },
            {
              "label": "json",
              "value": "json"
            },
            {
              "label": "text",
              "value": "text"
            }
          ],
          "key": "responseType",
          "type": "string",
          "default": "json",
          "label": "Response Type"
        },
        {
          "required": false,
          "comments": "The maximum time that a client will await a response to its request",
          "example": "2000",
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        },
        {
          "placeholder": "Retry Delay",
          "required": false,
          "comments": "The delay in milliseconds between retries.",
          "key": "retryDelayMS",
          "type": "string",
          "default": "0",
          "label": "Retry Delay (ms)"
        },
        {
          "required": false,
          "comments": "If true, retries on all erroneous responses regardless of type.",
          "key": "retryAllErrors",
          "type": "boolean",
          "default": "false",
          "label": "Retry On All Errors"
        },
        {
          "placeholder": "Max Retries",
          "required": false,
          "comments": "The maximum number of retries to attempt.",
          "key": "maxRetries",
          "type": "string",
          "default": "0",
          "label": "Max Retry Count"
        },
        {
          "required": false,
          "comments": "Specifies whether to use a pre-defined exponential backoff strategy for retries.",
          "key": "useExponentialBackoff",
          "type": "boolean",
          "default": "false",
          "label": "Use Exponential Backoff"
        }
      ]
    }
  },
  "triggers": {},
  "dataSources": {
    "accounts": {
      "display": {
        "label": "Select Account",
        "description": "Select a Domo account."
      },
      "dataSourceType": "picklist",
      "key": "accounts",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "The number of Accounts to return in the list. The default is 50 and the maximum is 500.",
          "key": "limit",
          "type": "string",
          "default": "",
          "label": "Limit"
        },
        {
          "required": false,
          "comments": "The offset of Accounts to begin the list of Accounts within the response.",
          "key": "offset",
          "type": "string",
          "default": "",
          "label": "Offset"
        }
      ]
    },
    "accountTypes": {
      "display": {
        "label": "Select Account Type",
        "description": "Select a Domo account type."
      },
      "dataSourceType": "picklist",
      "key": "accountTypes",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "The number of Account Types to return in the list. The default is 50 and the maximum is 500.",
          "key": "limit",
          "type": "string",
          "default": "",
          "label": "Limit"
        },
        {
          "required": false,
          "comments": "The offset of the Account Types to begin list of Account Types within the response.",
          "key": "offset",
          "type": "string",
          "default": "",
          "label": "Offset"
        }
      ]
    },
    "groups": {
      "display": {
        "label": "Select Group",
        "description": "Select a Domo group."
      },
      "dataSourceType": "picklist",
      "key": "groups",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "The amount of groups to return in the list. The default is 50 and the maximum is 500.",
          "key": "limit",
          "type": "string",
          "default": "",
          "label": "Limit"
        },
        {
          "required": false,
          "comments": "The offset of the group ID to begin list of groups within the response.",
          "key": "offset",
          "type": "string",
          "default": "",
          "label": "Offset"
        }
      ]
    },
    "pages": {
      "display": {
        "label": "Select Page",
        "description": "Select a Domo page."
      },
      "dataSourceType": "picklist",
      "key": "pages",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "The amount of pages to return in the list. The default is 50 and the maximum is 500.",
          "key": "limit",
          "type": "string",
          "default": "",
          "label": "Limit"
        },
        {
          "required": false,
          "comments": "The offset of the page ID to begin list of pages within the response.",
          "key": "offset",
          "type": "string",
          "default": "",
          "label": "Offset"
        }
      ]
    },
    "projects": {
      "display": {
        "label": "Select Project",
        "description": "Select a Domo project."
      },
      "dataSourceType": "picklist",
      "key": "projects",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "projectLists": {
      "display": {
        "label": "Select Project List",
        "description": "Select a Domo project list."
      },
      "dataSourceType": "picklist",
      "key": "projectLists",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the project.",
          "required": true,
          "key": "projectId",
          "type": "string",
          "default": "",
          "label": "Project ID"
        }
      ]
    },
    "streams": {
      "display": {
        "label": "Select Stream",
        "description": "Select a Domo stream."
      },
      "dataSourceType": "picklist",
      "key": "streams",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "The amount of Stream to return in the list. The default is 50 and the maximum is 500.",
          "key": "limit",
          "type": "string",
          "default": "",
          "label": "Limit"
        },
        {
          "required": false,
          "comments": "The offset of the Stream ID to begin list of users within the response.",
          "key": "offset",
          "type": "string",
          "default": "",
          "label": "Offset"
        }
      ]
    }
  },
  "documentation": {
    "description": "[Domo](https://www.domo.com/) provides a large suite of enterprise-grade tools thaat help organizations unlock business value from their data. The Domo platform includes a world class data warehouse, robust data pipeline functionality, and an industry-leading visualization engine — all while ensuring data is well-governed and secure.\n"
  },
  "$version": 1
}
