{
  "key": "dropbox",
  "documentationUrl": "https://prismatic.io/docs/components/dropbox/",
  "public": true,
  "display": {
    "label": "Dropbox",
    "description": "Manage files stored in Dropbox",
    "iconPath": "icon.png",
    "category": "Data Platforms",
    "iconBase64": ""
  },
  "connections": [
    {
      "key": "oauth",
      "label": "OAuth 2.0",
      "oauth2Type": "authorization_code",
      "comments": "OAuth 2.0 Connectivity for Dropbox",
      "inputs": [
        {
          "placeholder": "Authorize URL",
          "required": true,
          "shown": false,
          "comments": "The OAuth 2.0 Authorization URL for Dropbox",
          "key": "authorizeUrl",
          "type": "string",
          "default": "https://www.dropbox.com/oauth2/authorize?token_access_type=offline",
          "label": "Authorize URL"
        },
        {
          "placeholder": "Token URL",
          "required": true,
          "shown": false,
          "comments": "The OAuth 2.0 Token URL for Dropbox",
          "key": "tokenUrl",
          "type": "string",
          "default": "https://api.dropboxapi.com/oauth2/token",
          "label": "Token URL"
        },
        {
          "placeholder": "Scopes",
          "required": false,
          "shown": false,
          "comments": "Dropbox permission scopes are set within Dropbox on the OAuth application",
          "key": "scopes",
          "type": "string",
          "default": "",
          "label": "Scopes"
        },
        {
          "placeholder": "App Key",
          "required": true,
          "shown": true,
          "comments": "Generate at https://www.dropbox.com/developers/apps",
          "key": "clientId",
          "type": "string",
          "default": "",
          "label": "App Key"
        },
        {
          "placeholder": "App Secret",
          "required": true,
          "shown": true,
          "comments": "Generate at https://www.dropbox.com/developers/apps",
          "key": "clientSecret",
          "type": "password",
          "default": "",
          "label": "App Secret"
        }
      ],
      "documentation": {
        "description": "This component uses OAuth 2.0 to connect to Dropbox's API.\nTo create a Dropbox OAuth 2.0 app, log in to Dropbox and open [https://www.dropbox.com/developers/apps](https://www.dropbox.com/developers/apps):\n\n1. Select **Create app**.\n1. Select that you want **Scoped access**.\n1. Choose the type of access you want:\n    1. **App folder** access gives you access to a single folder in the user's `Apps/` directory. A folder will be created with the same name as your OAuth app.\n    1. **Full Dropbox** access gives you access to all files and folders in a user's Dropbox account.\n1. Give your app a name and click **Create app**.\n\nTake note of the **App key** and **App secret** - you'll enter these in a Dropbox connection config variable.\n\nUnder the **OAuth2** section add `https://oauth2.prismatic.io/callback` as a **Redirect URI**.\n\nUnder the **Permissions** tab, choose the permissions your app will need.\nThe actions supported in this component relate to files, so you should grant the `files.metadata.read` and `files.content.read` permissions if you need read-only access, and also include the `files.metadata.write` and `files.content.write` permissions if you need to write files to a user's Dropbox account.\nYou can safely ignore permissions listed under **Collaboration** and **Account Info**.\n"
      }
    }
  ],
  "actions": {
    "copyObject": {
      "display": {
        "label": "Copy Object",
        "description": "Copy a Folder or File from one path to another"
      },
      "examplePayload": {
        "data": {
          "status": 200,
          "headers": {},
          "result": {
            "metadata": {
              ".tag": "file",
              "name": "myCopy",
              "id": "exampleId",
              "client_modified": "Wed, 01 Jan 2020 00:00:00 GMT",
              "server_modified": "Wed, 01 Jan 2020 00:00:00 GMT",
              "size": 2048
            }
          }
        }
      },
      "key": "copyObject",
      "inputs": [
        {
          "required": true,
          "key": "dropboxConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "From Path",
          "required": true,
          "comments": "The location of a source file within a Dropbox share. Include a leading /.",
          "example": "/path/to/source/file.txt",
          "key": "fromPath",
          "type": "string",
          "default": "",
          "label": "From Path"
        },
        {
          "placeholder": "To Path",
          "required": true,
          "comments": "The location of a destination file within a Dropbox share. Include a leading /.",
          "example": "/path/to/destination/file.txt",
          "key": "toPath",
          "type": "string",
          "default": "",
          "label": "To Path"
        }
      ]
    },
    "createFolder": {
      "display": {
        "label": "Create Folder",
        "description": "Create a Folder at the specified path"
      },
      "examplePayload": {
        "data": {
          "status": 200,
          "headers": {},
          "result": {
            "metadata": {
              "id": "exampleId",
              "name": "myFolderName"
            }
          }
        }
      },
      "key": "createFolder",
      "inputs": [
        {
          "required": true,
          "key": "dropboxConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "File Path",
          "required": true,
          "comments": "The location of a file within a Dropbox share. Include a leading /.",
          "example": "/path/to/file.txt",
          "key": "path",
          "type": "string",
          "default": "",
          "label": "Path"
        }
      ]
    },
    "deleteObject": {
      "display": {
        "label": "Delete Object",
        "description": "Delete a Folder or File at the specified path"
      },
      "examplePayload": {
        "data": {
          "status": 200,
          "headers": {},
          "result": {
            "metadata": {
              ".tag": "file",
              "name": "myCopy",
              "id": "exampleId",
              "client_modified": "Wed, 01 Jan 2020 00:00:00 GMT",
              "server_modified": "Wed, 01 Jan 2020 00:00:00 GMT",
              "size": 2048
            }
          }
        }
      },
      "key": "deleteObject",
      "inputs": [
        {
          "required": true,
          "key": "dropboxConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "File Path",
          "required": true,
          "comments": "The location of a file within a Dropbox share. Include a leading /.",
          "example": "/path/to/file.txt",
          "key": "path",
          "type": "string",
          "default": "",
          "label": "Path"
        }
      ]
    },
    "downloadFile": {
      "display": {
        "label": "Download File",
        "description": "Download the file (< 150MB) at the specified path"
      },
      "examplePayload": {
        "data": {
          "type": "Buffer",
          "data": [
            101,
            120,
            97,
            109,
            112,
            108,
            101
          ]
        },
        "contentType": "application/octet"
      },
      "key": "downloadFile",
      "inputs": [
        {
          "required": true,
          "key": "dropboxConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "File Path",
          "required": true,
          "comments": "The location of a file within a Dropbox share. Include a leading /.",
          "example": "/path/to/file.txt",
          "key": "path",
          "type": "string",
          "default": "",
          "label": "Path"
        }
      ]
    },
    "getCurrentAccount": {
      "display": {
        "label": "Get Current Account",
        "description": "Get information about the currently authenticated user"
      },
      "examplePayload": {
        "data": {
          "account_id": "dbid:EXAMPLE",
          "name": {
            "given_name": "John",
            "surname": "Doe",
            "familiar_name": "John",
            "display_name": "John Doe",
            "abbreviated_name": "JD"
          },
          "email": "john.doe@example.com",
          "email_verified": true,
          "profile_photo_url": "",
          "disabled": false,
          "country": "US",
          "locale": "en",
          "referral_link": "",
          "is_paired": true,
          "account_type": {
            ".tag": "basic"
          },
          "root_info": {
            ".tag": "user",
            "root_namespace_id": "123456789",
            "home_namespace_id": "123456789"
          }
        }
      },
      "key": "getCurrentAccount",
      "inputs": [
        {
          "required": true,
          "key": "dropboxConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "listChanges": {
      "display": {
        "label": "List Changes",
        "description": "List changes that have been made to files in this folder since the last time this action was run."
      },
      "examplePayload": {
        "data": {
          "entries": [
            {
              ".tag": "deleted",
              "name": "my-old-image.png",
              "path_lower": "/my-old-image.png",
              "path_display": "/my-old-image.png"
            },
            {
              ".tag": "file",
              "name": "my-new-image.png",
              "path_lower": "/my-new-image.png",
              "path_display": "/my-new-image.png",
              "id": "id:BTY6k_2K8PAAAAAAAAAX9g",
              "client_modified": "2022-12-12T21:39:30Z",
              "server_modified": "2022-12-12T22:40:57Z",
              "rev": "5efa9326918a601c39731",
              "size": 1758021,
              "is_downloadable": true,
              "content_hash": "dc05a61ecd59d294da1e971c4e40a980b9042c633b7bc777367991a046d2b32d"
            }
          ],
          "cursor": "AAFCBKRdVxEXAMPLE",
          "has_more": false
        },
        "instanceState": {
          "step-id": "AAFCBKRdVxEXAMPLE"
        }
      },
      "key": "listChanges",
      "inputs": [
        {
          "required": true,
          "key": "dropboxConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "Directory Path Prefix",
          "required": false,
          "comments": "The path to a directory within a Dropbox share. Include a leading /.",
          "example": "/path/to/my/directory/",
          "key": "directoryPath",
          "type": "string",
          "default": "",
          "label": "Directory Path"
        },
        {
          "comments": "If true, the response will contain contents of all subfolders.",
          "required": true,
          "key": "recursive",
          "type": "boolean",
          "default": "false",
          "label": "Recursive"
        },
        {
          "comments": "If true, the results will include entries for files and folders that used to exist but were deleted.",
          "required": true,
          "key": "includeDeleted",
          "type": "boolean",
          "default": "false",
          "label": "Include Deleted?"
        }
      ],
      "documentation": {
        "description": "The first time this action runs, it takes note of the current `cursor` returned by Dropbox, and returns no changes.\nSubsequent runs of this step use that `cursor` to determine what has changed since the last time this step ran.\n"
      }
    },
    "listFolder": {
      "display": {
        "label": "List Folder",
        "description": "List Folder contents at the specified path"
      },
      "examplePayload": {
        "data": {
          "status": 200,
          "headers": {},
          "result": {
            "entries": [
              {
                ".tag": "folder",
                "id": "exampleId",
                "name": "MyExampleFolder",
                "path_lower": "/myexamplefolder"
              },
              {
                ".tag": "file",
                "id": "exampleId",
                "name": "MyImage.jpg",
                "path_lower": "/myexamplefolder/myimage.jpg",
                "client_modified": "Wed, 01 Jan 2020 00:00:00 GMT",
                "server_modified": "Wed, 01 Jan 2020 00:00:00 GMT",
                "rev": "681a01c39731",
                "size": 213654
              }
            ],
            "cursor": "hgL45HTslKOhj1_GEut-DVuaNs4xrXzpwQZRyJ0-KCW0wWMQ5DZu68__ULJa0zDcBp3ZrMlCj3-ZuOy4kjc9H2o7Ohk9UsId0sxVZrXFX",
            "has_more": true
          }
        }
      },
      "key": "listFolder",
      "inputs": [
        {
          "required": true,
          "key": "dropboxConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "Directory Path Prefix",
          "required": false,
          "comments": "The path to a directory within a Dropbox share. Include a leading /.",
          "example": "/path/to/my/directory/",
          "key": "path",
          "type": "string",
          "default": "",
          "label": "Directory Path"
        },
        {
          "required": false,
          "comments": "Specify the cursor returned by your last call to list_folder or list_folder/continue.",
          "example": "lslTXFcbLQKkb0vP9Kgh5hy0Y0OnC7Z9ZPHPwPmMnxSk3eiDRMkct7D8E",
          "key": "cursor",
          "type": "string",
          "default": "",
          "label": "Cursor"
        },
        {
          "required": false,
          "comments": "The maximum number of results to return per request. Note: This is an approximate number and there can be slightly more entries returned in some cases.",
          "example": "25",
          "key": "limit",
          "type": "string",
          "default": "",
          "label": "Limit"
        },
        {
          "comments": "Recursively list all contents of a directory",
          "key": "recursive",
          "type": "boolean",
          "default": false,
          "label": "Recursive"
        },
        {
          "comments": "The type of user to connect with. Admin or User",
          "required": false,
          "model": [
            {
              "label": "Admin",
              "value": "admin"
            },
            {
              "label": "User",
              "value": "user"
            },
            {
              "label": "",
              "value": ""
            }
          ],
          "key": "userType",
          "type": "string",
          "default": "",
          "label": "Team User Type"
        },
        {
          "comments": "The ID of the team member. Required if Team User Type is set",
          "required": false,
          "key": "teamMemberId",
          "type": "string",
          "default": "",
          "label": "Team Member ID"
        }
      ]
    },
    "moveObject": {
      "display": {
        "label": "Move Object",
        "description": "Move a Folder or File from one path to another"
      },
      "examplePayload": {
        "data": {
          "status": 200,
          "headers": {},
          "result": {
            "metadata": {
              ".tag": "file",
              "name": "myCopy",
              "id": "exampleId",
              "client_modified": "Wed, 01 Jan 2020 00:00:00 GMT",
              "server_modified": "Wed, 01 Jan 2020 00:00:00 GMT",
              "size": 2048
            }
          }
        }
      },
      "key": "moveObject",
      "inputs": [
        {
          "required": true,
          "key": "dropboxConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "From Path",
          "required": true,
          "comments": "The location of a source file within a Dropbox share. Include a leading /.",
          "example": "/path/to/source/file.txt",
          "key": "fromPath",
          "type": "string",
          "default": "",
          "label": "From Path"
        },
        {
          "placeholder": "To Path",
          "required": true,
          "comments": "The location of a destination file within a Dropbox share. Include a leading /.",
          "example": "/path/to/destination/file.txt",
          "key": "toPath",
          "type": "string",
          "default": "",
          "label": "To Path"
        }
      ]
    },
    "uploadFile": {
      "display": {
        "label": "Upload File",
        "description": "Upload a file to the specified path"
      },
      "examplePayload": {
        "data": {
          "status": 200,
          "headers": {},
          "result": {
            "id": "exampleId",
            "client_modified": "Wed, 01 Jan 2020 00:00:00 GMT",
            "server_modified": "Wed, 01 Jan 2020 00:00:00 GMT",
            "size": 2048,
            "name": "myFileName"
          }
        }
      },
      "key": "uploadFile",
      "inputs": [
        {
          "required": true,
          "key": "dropboxConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "File Path",
          "required": true,
          "comments": "The location of a file within a Dropbox share. Include a leading /.",
          "example": "/path/to/file.txt",
          "key": "path",
          "type": "string",
          "default": "",
          "label": "Path"
        },
        {
          "placeholder": "Output data from previous step",
          "required": true,
          "comments": "The contents to write to a file. This can be a string of text, it can be binary data (like an image or PDF) that was generated in a previous step.",
          "example": "My File Contents",
          "key": "fileContents",
          "type": "data",
          "default": "",
          "label": "File Contents"
        }
      ]
    },
    "rawRequest": {
      "display": {
        "label": "Raw Request",
        "description": "Send a raw HTTP request to Dropbox's API"
      },
      "key": "rawRequest",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The type of user to connect with. Admin or User",
          "required": false,
          "model": [
            {
              "label": "Admin",
              "value": "admin"
            },
            {
              "label": "User",
              "value": "user"
            },
            {
              "label": "",
              "value": ""
            }
          ],
          "key": "userType",
          "type": "string",
          "default": "",
          "label": "Team User Type"
        },
        {
          "comments": "The ID of the team member. Required if Team User Type is set",
          "required": false,
          "key": "teamMemberId",
          "type": "string",
          "default": "",
          "label": "Team Member ID"
        },
        {
          "placeholder": "URL to call",
          "required": true,
          "comments": "Input the path only (/file_requests/create), The base URL is already included (https://api.dropboxapi.com/2). For example, to connect to https://api.dropboxapi.com/2/file_requests/create, only /file_requests/create is entered in this field.",
          "example": "/file_requests/create",
          "key": "url",
          "type": "string",
          "default": "",
          "label": "URL"
        },
        {
          "required": true,
          "model": [
            {
              "label": "DELETE",
              "value": "DELETE"
            },
            {
              "label": "GET",
              "value": "GET"
            },
            {
              "label": "HEAD",
              "value": "HEAD"
            },
            {
              "label": "LINK",
              "value": "LINK"
            },
            {
              "label": "OPTIONS",
              "value": "OPTIONS"
            },
            {
              "label": "PATCH",
              "value": "PATCH"
            },
            {
              "label": "POST",
              "value": "POST"
            },
            {
              "label": "PURGE",
              "value": "PURGE"
            },
            {
              "label": "PUT",
              "value": "PUT"
            },
            {
              "label": "UNLINK",
              "value": "UNLINK"
            }
          ],
          "comments": "The HTTP method to use.",
          "key": "method",
          "type": "string",
          "default": "",
          "label": "Method"
        },
        {
          "placeholder": "Data to send",
          "required": false,
          "comments": "The HTTP body payload to send to the URL.",
          "example": "{\"exampleKey\": \"Example Data\"}",
          "key": "data",
          "type": "string",
          "default": "",
          "label": "Data"
        },
        {
          "placeholder": "Data to send",
          "required": false,
          "comments": "The Form Data to be sent as a multipart form upload.",
          "example": "[{\"key\": \"Example Key\", \"value\": new Buffer(\"Hello World\")}]",
          "key": "formData",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Form Data"
        },
        {
          "placeholder": "Data to send",
          "required": false,
          "comments": "File Data to be sent as a multipart form upload.",
          "example": "[{key: \"example.txt\", value: \"My File Contents\"}]",
          "key": "fileData",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "File Data"
        },
        {
          "placeholder": "The file name to apply to a file",
          "required": false,
          "comments": "File names to apply to the file data inputs. Keys must match the file data keys above.",
          "key": "fileDataFileNames",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "File Data File Names"
        },
        {
          "placeholder": "Query Parameter",
          "required": false,
          "comments": "A list of query parameters to send with the request. This is the portion at the end of the URL similar to ?key1=value1&key2=value2.",
          "key": "queryParams",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Query Parameter"
        },
        {
          "placeholder": "Header",
          "required": false,
          "comments": "A list of headers to send with the request.",
          "example": "User-Agent: curl/7.64.1",
          "key": "headers",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Header"
        },
        {
          "placeholder": "Response Type",
          "required": true,
          "comments": "The type of data you expect in the response. You can request json, text, or binary data.",
          "model": [
            {
              "label": "arraybuffer",
              "value": "arraybuffer"
            },
            {
              "label": "document",
              "value": "document"
            },
            {
              "label": "json",
              "value": "json"
            },
            {
              "label": "text",
              "value": "text"
            }
          ],
          "key": "responseType",
          "type": "string",
          "default": "json",
          "label": "Response Type"
        },
        {
          "required": false,
          "comments": "The maximum time that a client will await a response to its request",
          "example": "2000",
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        },
        {
          "placeholder": "Retry Delay",
          "required": false,
          "comments": "The delay in milliseconds between retries.",
          "key": "retryDelayMS",
          "type": "string",
          "default": "0",
          "label": "Retry Delay (ms)"
        },
        {
          "required": false,
          "comments": "If true, retries on all erroneous responses regardless of type.",
          "key": "retryAllErrors",
          "type": "boolean",
          "default": "false",
          "label": "Retry On All Errors"
        },
        {
          "placeholder": "Max Retries",
          "required": false,
          "comments": "The maximum number of retries to attempt.",
          "key": "maxRetries",
          "type": "string",
          "default": "0",
          "label": "Max Retry Count"
        },
        {
          "required": false,
          "comments": "Specifies whether to use a pre-defined exponential backoff strategy for retries.",
          "key": "useExponentialBackoff",
          "type": "boolean",
          "default": "false",
          "label": "Use Exponential Backoff"
        }
      ]
    },
    "listSharingFolder": {
      "display": {
        "label": "List Shared Folders",
        "description": "List Shared Folders contents"
      },
      "examplePayload": {
        "data": {
          "status": 200,
          "headers": {},
          "result": {
            "cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu",
            "entries": [
              {
                "access_inheritance": {
                  ".tag": "inherit"
                },
                "access_type": {
                  ".tag": "owner"
                },
                "is_inside_team_folder": false,
                "is_team_folder": false,
                "link_metadata": {
                  "audience_options": [
                    {
                      ".tag": "public"
                    },
                    {
                      ".tag": "team"
                    },
                    {
                      ".tag": "members"
                    }
                  ],
                  "current_audience": {
                    ".tag": "public"
                  },
                  "link_permissions": [
                    {
                      "action": {
                        ".tag": "change_audience"
                      },
                      "allow": true
                    }
                  ],
                  "password_protected": false,
                  "url": ""
                },
                "name": "dir",
                "path_lower": "/dir",
                "permissions": [],
                "policy": {
                  "acl_update_policy": {
                    ".tag": "owner"
                  },
                  "member_policy": {
                    ".tag": "anyone"
                  },
                  "resolved_member_policy": {
                    ".tag": "team"
                  },
                  "shared_link_policy": {
                    ".tag": "anyone"
                  }
                },
                "preview_url": "https://www.dropbox.com/scl/fo/fir9vjelf",
                "shared_folder_id": "84528192421",
                "time_invited": "2016-01-20T00:00:00Z"
              }
            ]
          }
        }
      },
      "key": "listSharingFolder",
      "inputs": [
        {
          "required": true,
          "key": "dropboxConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "Directory Path Prefix",
          "required": false,
          "comments": "The path to a directory within a Dropbox share. Include a leading /.",
          "example": "/path/to/my/directory/",
          "key": "path",
          "type": "string",
          "default": "",
          "label": "Directory Path"
        },
        {
          "required": false,
          "comments": "Specify the cursor returned by your last call to list_folder or list_folder/continue.",
          "example": "lslTXFcbLQKkb0vP9Kgh5hy0Y0OnC7Z9ZPHPwPmMnxSk3eiDRMkct7D8E",
          "key": "cursor",
          "type": "string",
          "default": "",
          "label": "Cursor"
        },
        {
          "required": false,
          "comments": "The maximum number of results to return per request. Note: This is an approximate number and there can be slightly more entries returned in some cases.",
          "example": "25",
          "key": "limit",
          "type": "string",
          "default": "",
          "label": "Limit"
        },
        {
          "placeholder": "Folder Action",
          "required": false,
          "comments": "A list of `FolderAction`s corresponding to `FolderPermission`s that should appear in the response's SharedFolderMetadata.permissions field describing the actions the authenticated user can perform on the folder. This field is optional.",
          "example": "disable_viewer_info",
          "key": "folderActions",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Folder Actions"
        }
      ]
    },
    "listTeamFolder": {
      "display": {
        "label": "List Team's Folders",
        "description": "List Team's Folder contents"
      },
      "examplePayload": {
        "data": {
          "status": 200,
          "headers": {},
          "result": {
            "cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu",
            "has_more": false,
            "team_folders": [
              {
                "content_sync_settings": [
                  {
                    "id": "id:a4ayc_80_OEAAAAAAAAAXw",
                    "sync_setting": {
                      ".tag": "default"
                    }
                  }
                ],
                "is_team_shared_dropbox": false,
                "name": "Marketing",
                "status": {
                  ".tag": "active"
                },
                "sync_setting": {
                  ".tag": "default"
                },
                "team_folder_id": "123456789"
              }
            ]
          }
        }
      },
      "key": "listTeamFolder",
      "inputs": [
        {
          "required": true,
          "key": "dropboxConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "Directory Path Prefix",
          "required": false,
          "comments": "The path to a directory within a Dropbox share. Include a leading /.",
          "example": "/path/to/my/directory/",
          "key": "path",
          "type": "string",
          "default": "",
          "label": "Directory Path"
        },
        {
          "required": false,
          "comments": "Specify the cursor returned by your last call to list_folder or list_folder/continue.",
          "example": "lslTXFcbLQKkb0vP9Kgh5hy0Y0OnC7Z9ZPHPwPmMnxSk3eiDRMkct7D8E",
          "key": "cursor",
          "type": "string",
          "default": "",
          "label": "Cursor"
        },
        {
          "required": false,
          "comments": "The maximum number of results to return per request. Note: This is an approximate number and there can be slightly more entries returned in some cases.",
          "example": "25",
          "key": "limit",
          "type": "string",
          "default": "",
          "label": "Limit"
        }
      ]
    },
    "lockFile": {
      "display": {
        "label": "Lock File",
        "description": "Lock the files at the given paths"
      },
      "key": "lockFile",
      "inputs": [
        {
          "required": true,
          "key": "dropboxConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The type of user to connect with. Admin or User",
          "required": false,
          "model": [
            {
              "label": "Admin",
              "value": "admin"
            },
            {
              "label": "User",
              "value": "user"
            },
            {
              "label": "",
              "value": ""
            }
          ],
          "key": "userType",
          "type": "string",
          "default": "",
          "label": "Team User Type"
        },
        {
          "comments": "The ID of the team member. Required if Team User Type is set",
          "required": false,
          "key": "teamMemberId",
          "type": "string",
          "default": "",
          "label": "Team Member ID"
        },
        {
          "placeholder": "File Path",
          "comments": "This represents the source files's path. Include a leading /",
          "example": "/path/to/source/file.txt",
          "required": false,
          "key": "filePaths",
          "type": "string",
          "default": "",
          "collection": "valuelist",
          "label": "File Path"
        },
        {
          "required": false,
          "comments": "An optional list of paths",
          "example": "[\"/path/to/file\", \"/path/to/another/file\"]",
          "key": "dynamicPaths",
          "type": "data",
          "default": "",
          "label": "Dynamic Paths"
        }
      ]
    },
    "unlockFile": {
      "display": {
        "label": "Unlock File",
        "description": "Unlock the files at the given paths"
      },
      "key": "unlockFile",
      "inputs": [
        {
          "required": true,
          "key": "dropboxConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The type of user to connect with. Admin or User",
          "required": false,
          "model": [
            {
              "label": "Admin",
              "value": "admin"
            },
            {
              "label": "User",
              "value": "user"
            },
            {
              "label": "",
              "value": ""
            }
          ],
          "key": "userType",
          "type": "string",
          "default": "",
          "label": "Team User Type"
        },
        {
          "comments": "The ID of the team member. Required if Team User Type is set",
          "required": false,
          "key": "teamMemberId",
          "type": "string",
          "default": "",
          "label": "Team Member ID"
        },
        {
          "placeholder": "File Path",
          "comments": "This represents the source files's path. Include a leading /",
          "example": "/path/to/source/file.txt",
          "required": false,
          "key": "filePaths",
          "type": "string",
          "default": "",
          "collection": "valuelist",
          "label": "File Path"
        },
        {
          "required": false,
          "comments": "An optional list of paths",
          "example": "[\"/path/to/file\", \"/path/to/another/file\"]",
          "key": "dynamicPaths",
          "type": "data",
          "default": "",
          "label": "Dynamic Paths"
        }
      ]
    },
    "getFileLock": {
      "display": {
        "label": "Get File Lock",
        "description": "Return the lock metadata for the given list of paths"
      },
      "key": "getFileLock",
      "inputs": [
        {
          "required": true,
          "key": "dropboxConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the team member. Required if Team User Type is set",
          "required": false,
          "key": "teamMemberId",
          "type": "string",
          "default": "",
          "label": "Team Member ID"
        },
        {
          "comments": "The type of user to connect with. Admin or User",
          "required": false,
          "model": [
            {
              "label": "Admin",
              "value": "admin"
            },
            {
              "label": "User",
              "value": "user"
            },
            {
              "label": "",
              "value": ""
            }
          ],
          "key": "userType",
          "type": "string",
          "default": "",
          "label": "Team User Type"
        },
        {
          "placeholder": "File Path",
          "comments": "This represents the source files's path. Include a leading /",
          "example": "/path/to/source/file.txt",
          "required": false,
          "key": "filePaths",
          "type": "string",
          "default": "",
          "collection": "valuelist",
          "label": "File Path"
        },
        {
          "required": false,
          "comments": "An optional list of paths",
          "example": "[\"/path/to/file\", \"/path/to/another/file\"]",
          "key": "dynamicPaths",
          "type": "data",
          "default": "",
          "label": "Dynamic Paths"
        }
      ]
    },
    "getTeamMembers": {
      "display": {
        "label": "Get Team Members",
        "description": "Get Team Members by Member ID, External ID, or Email"
      },
      "key": "getTeamMembers",
      "inputs": [
        {
          "required": true,
          "key": "dropboxConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "model": [
            {
              "label": "Email",
              "value": "email"
            },
            {
              "label": "Team Member Id",
              "value": "team_member_id"
            },
            {
              "label": "External ID",
              "value": "external_id"
            }
          ],
          "key": "lookupKey",
          "type": "string",
          "default": "",
          "label": "Lookup By"
        },
        {
          "required": true,
          "key": "lookupValue",
          "type": "string",
          "default": "",
          "label": "Value"
        }
      ]
    }
  },
  "triggers": {
    "dropboxWebhook": {
      "display": {
        "label": "Dropbox Webhook Trigger",
        "description": "Trigger for handling webhooks from Dropbox's change API"
      },
      "allowsBranching": true,
      "staticBranchNames": [
        "Notification",
        "Verification Request"
      ],
      "synchronousResponseSupport": "invalid",
      "scheduleSupport": "invalid",
      "key": "dropboxWebhook",
      "inputs": [
        {
          "required": true,
          "comments": "The 'App Secret' of your Dropbox app",
          "key": "signingSecret",
          "type": "password",
          "default": "",
          "label": "Signing Secret"
        }
      ],
      "documentation": {
        "description": "Many other SaaS apps allow you to configure webhook URLs on a per-customer basis.\nThey allow you to say \"when data is updated for Acme Corp, notify Acme Corp's instance webhook URL\".\n\nDropbox does not have customer-specific webhooks.\nInstead, they allow your OAuth application to designate a single webhook URL to be notified when updates occur.\nWhenever any of your users update data in Dropbox, your single webhook URL receives a request with an array of Dropbox account IDs that have changes.\n\nIn Prismatic the best way to handle these Dropbox requests is to create a \"Router Integration\" that routes Dropbox webhook requests to the correct customer instance(s).\n\n- When an instance of your Dropbox integration is created, it notifies the \"Router Integration\" of a new mapping between the authenticated user's Dropbox Account ID and the instance's flow's webhook URL.\n- When a webhook request comes from Dropbox with a list of Dropbox Account IDs with changes, the \"Router Integration\" loops over the account IDs, looks up the mapping of account ID to webhook URL, and makes a request to the webhook URL of the appropriate instance, causing it to run a flow that queries for changes.\n\nAn example \"Router Integration\" and a Dropbox integration that register itself with the router integration is available in [GitHub](https://github.com/prismatic-io/examples/tree/main/integrations/dropbox).\nYou can [import](integrations.mdx/#importing-an-integration) and extend the integrations how you see fit.\n"
      }
    }
  },
  "dataSources": {
    "listFolders": {
      "display": {
        "label": "List Folders",
        "description": "Fetch an array of folders"
      },
      "dataSourceType": "picklist",
      "examplePayload": {
        "result": [
          {
            "label": "/myexamplefolder - MyExampleFolder",
            "key": "0"
          },
          {
            "label": "/myexamplefolder/myimage.jpg - MyImage.jpg",
            "key": "1"
          }
        ]
      },
      "key": "listFolders",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "Directory Path Prefix",
          "required": false,
          "comments": "The path to a directory within a Dropbox share. Include a leading /.",
          "example": "/path/to/my/directory/",
          "key": "path",
          "type": "string",
          "default": "",
          "label": "Directory Path"
        },
        {
          "required": false,
          "comments": "Specify the cursor returned by your last call to list_folder or list_folder/continue.",
          "example": "lslTXFcbLQKkb0vP9Kgh5hy0Y0OnC7Z9ZPHPwPmMnxSk3eiDRMkct7D8E",
          "key": "cursor",
          "type": "string",
          "default": "",
          "label": "Cursor"
        },
        {
          "required": false,
          "comments": "The maximum number of results to return per request. Note: This is an approximate number and there can be slightly more entries returned in some cases.",
          "example": "25",
          "key": "limit",
          "type": "string",
          "default": "",
          "label": "Limit"
        },
        {
          "comments": "Recursively list all contents of a directory",
          "key": "recursive",
          "type": "boolean",
          "default": false,
          "label": "Recursive"
        },
        {
          "comments": "The type of user to connect with. Admin or User",
          "required": false,
          "model": [
            {
              "label": "Admin",
              "value": "admin"
            },
            {
              "label": "User",
              "value": "user"
            },
            {
              "label": "",
              "value": ""
            }
          ],
          "key": "userType",
          "type": "string",
          "default": "",
          "label": "Team User Type"
        },
        {
          "comments": "The ID of the team member. Required if Team User Type is set",
          "required": false,
          "key": "teamMemberId",
          "type": "string",
          "default": "",
          "label": "Team Member ID"
        }
      ]
    },
    "listSharedFolders": {
      "display": {
        "label": "List Shared Folders",
        "description": "Fetch an array of shared folders"
      },
      "dataSourceType": "picklist",
      "examplePayload": {
        "result": [
          {
            "label": "/myexamplefolder - MyExampleFolder",
            "key": "0"
          },
          {
            "label": "/myexamplefolder/myimage.jpg - MyImage.jpg",
            "key": "1"
          }
        ]
      },
      "key": "listSharedFolders",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "Directory Path Prefix",
          "required": false,
          "comments": "The path to a directory within a Dropbox share. Include a leading /.",
          "example": "/path/to/my/directory/",
          "key": "path",
          "type": "string",
          "default": "",
          "label": "Directory Path"
        },
        {
          "required": false,
          "comments": "Specify the cursor returned by your last call to list_folder or list_folder/continue.",
          "example": "lslTXFcbLQKkb0vP9Kgh5hy0Y0OnC7Z9ZPHPwPmMnxSk3eiDRMkct7D8E",
          "key": "cursor",
          "type": "string",
          "default": "",
          "label": "Cursor"
        },
        {
          "required": false,
          "comments": "The maximum number of results to return per request. Note: This is an approximate number and there can be slightly more entries returned in some cases.",
          "example": "25",
          "key": "limit",
          "type": "string",
          "default": "",
          "label": "Limit"
        },
        {
          "placeholder": "Folder Action",
          "required": false,
          "comments": "A list of `FolderAction`s corresponding to `FolderPermission`s that should appear in the response's SharedFolderMetadata.permissions field describing the actions the authenticated user can perform on the folder. This field is optional.",
          "example": "disable_viewer_info",
          "key": "folderActions",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Folder Actions"
        }
      ]
    },
    "listTeamFolders": {
      "display": {
        "label": "List Team Folders",
        "description": "Fetch an array of team's folders"
      },
      "dataSourceType": "picklist",
      "examplePayload": {
        "result": [
          {
            "label": "MyExampleFolder",
            "key": "0"
          }
        ]
      },
      "key": "listTeamFolders",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "Directory Path Prefix",
          "required": false,
          "comments": "The path to a directory within a Dropbox share. Include a leading /.",
          "example": "/path/to/my/directory/",
          "key": "path",
          "type": "string",
          "default": "",
          "label": "Directory Path"
        },
        {
          "required": false,
          "comments": "Specify the cursor returned by your last call to list_folder or list_folder/continue.",
          "example": "lslTXFcbLQKkb0vP9Kgh5hy0Y0OnC7Z9ZPHPwPmMnxSk3eiDRMkct7D8E",
          "key": "cursor",
          "type": "string",
          "default": "",
          "label": "Cursor"
        },
        {
          "required": false,
          "comments": "The maximum number of results to return per request. Note: This is an approximate number and there can be slightly more entries returned in some cases.",
          "example": "25",
          "key": "limit",
          "type": "string",
          "default": "",
          "label": "Limit"
        }
      ]
    }
  },
  "documentation": {
    "description": "[Dropbox](https://www.dropbox.com/) is a file sharing platform that allows teams to collaborate and share files with one another.\nThe Dropbox component allows you to interact with the Dropbox API.\nYou can upload, download, list, and move files within a Dropbox account.\n",
    "dev": "A common integration pattern involves listing files in a file store, and performing a series of actions on the array of files that are returned.\nSee our [looping over files](quickstarts/looping-over-files.mdx) quickstart for information about how to create a loop over an array of files.\n\n### Detecting changes in Dropbox\n\nThe [List Changes](#list-changes) action allows you to detect changes in your user's Dropbox folders.\nCreate a flow that runs [on a schedule](components/schedule-triggers.mdx) and begin your flow with a **List Changes** action.\nThat action will return a list of changes that have occurred since the flow was last run.\n"
  },
  "$version": 1
}
