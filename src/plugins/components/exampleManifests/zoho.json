{
  "key": "zoho",
  "public": true,
  "documentationUrl": "https://prismatic.io/docs/components/zoho/",
  "display": {
    "category": "Application Connectors",
    "label": "Zoho",
    "description": "Manage records, users, and more in your Zoho CRM and Books apps",
    "iconPath": "icon.png",
    "iconBase64": ""
  },
  "connections": [
    {
      "key": "oauth2",
      "label": "Zoho OAuth 2.0",
      "comments": "Zoho OAuth 2.0 Connection",
      "oauth2Type": "authorization_code",
      "inputs": [
        {
          "placeholder": "Authorize URL",
          "required": true,
          "shown": true,
          "model": [
            {
              "label": "United States (https://accounts.zoho.com/oauth/v2/auth)",
              "value": "https://accounts.zoho.com/oauth/v2/auth?access_type=offline"
            },
            {
              "label": "Europe (https://accounts.zoho.eu/oauth/v2/auth)",
              "value": "https://accounts.zoho.eu/oauth/v2/auth?access_type=offline"
            },
            {
              "label": "India (https://accounts.zoho.in/oauth/v2/auth)",
              "value": "https://accounts.zoho.in/oauth/v2/auth?access_type=offline"
            },
            {
              "label": "Australia (https://accounts.zoho.com.au/oauth/v2/auth)",
              "value": "https://accounts.zoho.com.au/oauth/v2/auth?access_type=offline"
            },
            {
              "label": "Japan (https://accounts.zoho.jp/oauth/v2/auth)",
              "value": "https://accounts.zoho.jp/oauth/v2/auth?access_type=offline"
            }
          ],
          "key": "authorizeUrl",
          "type": "string",
          "default": "",
          "label": "Authorize URL"
        },
        {
          "placeholder": "Token URL",
          "required": true,
          "shown": true,
          "model": [
            {
              "label": "United States (https://accounts.zoho.com/oauth/v2/token)",
              "value": "https://accounts.zoho.com/oauth/v2/token"
            },
            {
              "label": "Europe (https://accounts.zoho.eu/oauth/v2/token)",
              "value": "https://accounts.zoho.eu/oauth/v2/token"
            },
            {
              "label": "India (https://accounts.zoho.in/oauth/v2/token)",
              "value": "https://accounts.zoho.in/oauth/v2/token"
            },
            {
              "label": "Australia (https://accounts.zoho.com.au/oauth/v2/token)",
              "value": "https://accounts.zoho.com.au/oauth/v2/token"
            },
            {
              "label": "Japan (https://accounts.zoho.jp/oauth/v2/token)",
              "value": "https://accounts.zoho.jp/oauth/v2/token"
            }
          ],
          "comments": "Choose the region where your Zoho data center is located. Your authorize URL, token URL and revoke URL regions should all match.",
          "key": "tokenUrl",
          "type": "string",
          "default": "",
          "label": "Token URL"
        },
        {
          "placeholder": "Scopes",
          "required": true,
          "shown": true,
          "comments": "Space separated OAuth 2.0 permission scopes for the Zoho API. Can combine Zoho CRM and Zoho Books scopes.",
          "key": "scopes",
          "type": "string",
          "default": "ZohoCRM.coql.READ ZohoCRM.notifications.ALL ZohoCRM.users.ALL ZohoCRM.org.ALL ZohoCRM.settings.ALL ZohoCRM.modules.ALL ZohoCRM.bulk.ALL ZohoBooks.fullaccess.all",
          "label": "Scopes"
        },
        {
          "placeholder": "Revoke URL",
          "required": false,
          "shown": true,
          "model": [
            {
              "label": "United States (https://accounts.zoho.com/oauth/v2/token/revoke)",
              "value": "https://accounts.zoho.com/oauth/v2/token/revoke"
            },
            {
              "label": "Europe (https://accounts.zoho.eu/oauth/v2/token/revoke)",
              "value": "https://accounts.zoho.eu/oauth/v2/token/revoke"
            },
            {
              "label": "India (https://accounts.zoho.in/oauth/v2/token/revoke)",
              "value": "https://accounts.zoho.in/oauth/v2/token/revoke"
            },
            {
              "label": "Australia (https://accounts.zoho.com.au/oauth/v2/token/revoke)",
              "value": "https://accounts.zoho.com.au/oauth/v2/token/revoke"
            },
            {
              "label": "Japan (https://accounts.zoho.jp/oauth/v2/token/revoke)",
              "value": "https://accounts.zoho.jp/oauth/v2/token/revoke"
            }
          ],
          "key": "revokeUrl",
          "type": "string",
          "default": "",
          "label": "Refresh Token Revoke URL"
        },
        {
          "placeholder": "Client ID",
          "required": true,
          "shown": true,
          "comments": "Client Identifier of your app for the Zoho API",
          "key": "clientId",
          "type": "string",
          "default": "",
          "label": "Client ID"
        },
        {
          "placeholder": "Client Secret",
          "required": true,
          "shown": true,
          "comments": "Client Secret of your app for the Zoho API",
          "key": "clientSecret",
          "type": "password",
          "default": "",
          "label": "Client Secret"
        }
      ],
      "documentation": {
        "description": "To make API requests of Zoho CRM or Zoho Books on behalf of your customers you need to create a Client using the [Zoho Developer Console](https://api-console.zoho.com/).\n\n- Log in to the [Zoho Developer Console](https://api-console.zoho.com/)\n- Click **ADD CLIENT**\n- Choose `Server-based Applications` as the type of client\n- Fill out the Client Name and Homepage URL fields with the relevant details\n- Add `https://oauth2.prismatic.io/callback` under **Authorized Redirect URIs**\n- Note the Client ID and Client Secret values, as these will be important when using the Zoho Connection as part of your Integration\n\nFor more information please see the [Zoho documentation](https://www.zoho.com/crm/developer/docs/api/v3/register-client.html) for creating a new Client.\n\n### Zoho in Multiple Regions\n\nZoho has data centers in the United States, Europe, India, Australia and Japan.\nIf you develop an integration for users in a single region, you can set your authorize and token URLs to their specific region.\nIf you plan to deploy your integration to users in multiple regions, be sure that your app is set up to support multiple data centers.\nThen, configure your connection's **Authorize URL**, **Token URL** and and **Refresh Token Revoke URL** to be visible to customer deployers, so they can update those values to the region they use.\n\n<Screenshot\n  filename=\"components/zoho/visible-customer-deployer.png\"\n  maxWidth=\"500px\"\n/>\n"
      }
    }
  ],
  "actions": {
    "crmRawRequest": {
      "display": {
        "label": "CRM - Raw Request",
        "description": "Send Raw Request to Zoho CRM"
      },
      "key": "crmRawRequest",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "URL to call",
          "required": true,
          "comments": "This is the URL to call.",
          "example": "/Leads/1234567890/actions/convert",
          "key": "url",
          "type": "string",
          "default": "",
          "label": "URL"
        },
        {
          "required": true,
          "model": [
            {
              "label": "DELETE",
              "value": "DELETE"
            },
            {
              "label": "GET",
              "value": "GET"
            },
            {
              "label": "HEAD",
              "value": "HEAD"
            },
            {
              "label": "LINK",
              "value": "LINK"
            },
            {
              "label": "OPTIONS",
              "value": "OPTIONS"
            },
            {
              "label": "PATCH",
              "value": "PATCH"
            },
            {
              "label": "POST",
              "value": "POST"
            },
            {
              "label": "PURGE",
              "value": "PURGE"
            },
            {
              "label": "PUT",
              "value": "PUT"
            },
            {
              "label": "UNLINK",
              "value": "UNLINK"
            }
          ],
          "comments": "The HTTP method to use.",
          "key": "method",
          "type": "string",
          "default": "",
          "label": "Method"
        },
        {
          "placeholder": "Data to send",
          "required": false,
          "comments": "The HTTP body payload to send to the URL.",
          "example": "{\"exampleKey\": \"Example Data\"}",
          "key": "data",
          "type": "string",
          "default": "",
          "label": "Data"
        },
        {
          "placeholder": "Data to send",
          "required": false,
          "comments": "The Form Data to be sent as a multipart form upload.",
          "example": "[{\"key\": \"Example Key\", \"value\": new Buffer(\"Hello World\")}]",
          "key": "formData",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Form Data"
        },
        {
          "placeholder": "Data to send",
          "required": false,
          "comments": "File Data to be sent as a multipart form upload.",
          "example": "[{key: \"example.txt\", value: \"My File Contents\"}]",
          "key": "fileData",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "File Data"
        },
        {
          "placeholder": "Query Parameter",
          "required": false,
          "comments": "A list of query parameters to send with the request. This is the portion at the end of the URL similar to ?key1=value1&key2=value2.",
          "key": "queryParams",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Query Parameter"
        },
        {
          "placeholder": "Header",
          "required": false,
          "comments": "A list of headers to send with the request.",
          "example": "User-Agent: curl/7.64.1",
          "key": "headers",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Header"
        },
        {
          "placeholder": "Response Type",
          "required": true,
          "comments": "The type of data you expect in the response. You can request json, text, or binary data.",
          "model": [
            {
              "label": "arraybuffer",
              "value": "arraybuffer"
            },
            {
              "label": "document",
              "value": "document"
            },
            {
              "label": "json",
              "value": "json"
            },
            {
              "label": "text",
              "value": "text"
            }
          ],
          "key": "responseType",
          "type": "string",
          "default": "json",
          "label": "Response Type"
        },
        {
          "required": false,
          "comments": "The maximum time that a client will await a response to its request",
          "example": "2000",
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        },
        {
          "placeholder": "Retry Delay",
          "required": false,
          "comments": "The delay in milliseconds between retries.",
          "key": "retryDelayMS",
          "type": "string",
          "default": "0",
          "label": "Retry Delay (ms)"
        },
        {
          "required": false,
          "comments": "If true, retries on all erroneous responses regardless of type.",
          "key": "retryAllErrors",
          "type": "boolean",
          "default": "false",
          "label": "Retry On All Errors"
        },
        {
          "placeholder": "Max Retries",
          "required": false,
          "comments": "The maximum number of retries to attempt.",
          "key": "maxRetries",
          "type": "string",
          "default": "0",
          "label": "Max Retry Count"
        },
        {
          "required": false,
          "comments": "Specifies whether to use a pre-defined exponential backoff strategy for retries.",
          "key": "useExponentialBackoff",
          "type": "boolean",
          "default": "false",
          "label": "Use Exponential Backoff"
        }
      ]
    },
    "booksRawRequest": {
      "display": {
        "label": "Books - Raw Request",
        "description": "Send Raw Request to Zoho Books"
      },
      "key": "booksRawRequest",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "URL to call",
          "required": true,
          "comments": "This is the URL to call.",
          "example": "/sobjects/Account",
          "key": "url",
          "type": "string",
          "default": "",
          "label": "URL"
        },
        {
          "required": true,
          "model": [
            {
              "label": "DELETE",
              "value": "DELETE"
            },
            {
              "label": "GET",
              "value": "GET"
            },
            {
              "label": "HEAD",
              "value": "HEAD"
            },
            {
              "label": "LINK",
              "value": "LINK"
            },
            {
              "label": "OPTIONS",
              "value": "OPTIONS"
            },
            {
              "label": "PATCH",
              "value": "PATCH"
            },
            {
              "label": "POST",
              "value": "POST"
            },
            {
              "label": "PURGE",
              "value": "PURGE"
            },
            {
              "label": "PUT",
              "value": "PUT"
            },
            {
              "label": "UNLINK",
              "value": "UNLINK"
            }
          ],
          "comments": "The HTTP method to use.",
          "key": "method",
          "type": "string",
          "default": "",
          "label": "Method"
        },
        {
          "placeholder": "Data to send",
          "required": false,
          "comments": "The HTTP body payload to send to the URL.",
          "example": "{\"exampleKey\": \"Example Data\"}",
          "key": "data",
          "type": "string",
          "default": "",
          "label": "Data"
        },
        {
          "placeholder": "Data to send",
          "required": false,
          "comments": "The Form Data to be sent as a multipart form upload.",
          "example": "[{\"key\": \"Example Key\", \"value\": new Buffer(\"Hello World\")}]",
          "key": "formData",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Form Data"
        },
        {
          "placeholder": "Data to send",
          "required": false,
          "comments": "File Data to be sent as a multipart form upload.",
          "example": "[{key: \"example.txt\", value: \"My File Contents\"}]",
          "key": "fileData",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "File Data"
        },
        {
          "placeholder": "Query Parameter",
          "required": false,
          "comments": "A list of query parameters to send with the request. This is the portion at the end of the URL similar to ?key1=value1&key2=value2.",
          "key": "queryParams",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Query Parameter"
        },
        {
          "placeholder": "Header",
          "required": false,
          "comments": "A list of headers to send with the request.",
          "example": "User-Agent: curl/7.64.1",
          "key": "headers",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Header"
        },
        {
          "placeholder": "Response Type",
          "required": true,
          "comments": "The type of data you expect in the response. You can request json, text, or binary data.",
          "model": [
            {
              "label": "arraybuffer",
              "value": "arraybuffer"
            },
            {
              "label": "document",
              "value": "document"
            },
            {
              "label": "json",
              "value": "json"
            },
            {
              "label": "text",
              "value": "text"
            }
          ],
          "key": "responseType",
          "type": "string",
          "default": "json",
          "label": "Response Type"
        },
        {
          "required": false,
          "comments": "The maximum time that a client will await a response to its request",
          "example": "2000",
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        },
        {
          "placeholder": "Retry Delay",
          "required": false,
          "comments": "The delay in milliseconds between retries.",
          "key": "retryDelayMS",
          "type": "string",
          "default": "0",
          "label": "Retry Delay (ms)"
        },
        {
          "required": false,
          "comments": "If true, retries on all erroneous responses regardless of type.",
          "key": "retryAllErrors",
          "type": "boolean",
          "default": "false",
          "label": "Retry On All Errors"
        },
        {
          "placeholder": "Max Retries",
          "required": false,
          "comments": "The maximum number of retries to attempt.",
          "key": "maxRetries",
          "type": "string",
          "default": "0",
          "label": "Max Retry Count"
        },
        {
          "required": false,
          "comments": "Specifies whether to use a pre-defined exponential backoff strategy for retries.",
          "key": "useExponentialBackoff",
          "type": "boolean",
          "default": "false",
          "label": "Use Exponential Backoff"
        }
      ]
    },
    "crmGetRecord": {
      "display": {
        "label": "CRM - Get Record",
        "description": "Get a single Zoho CRM Record"
      },
      "key": "crmGetRecord",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "Record Type",
          "model": [
            {
              "label": "Accounts",
              "value": "Accounts"
            },
            {
              "label": "Calls",
              "value": "Calls"
            },
            {
              "label": "Campaigns",
              "value": "Campaigns"
            },
            {
              "label": "Cases",
              "value": "Cases"
            },
            {
              "label": "Contacts",
              "value": "Contacts"
            },
            {
              "label": "Deals",
              "value": "Deals"
            },
            {
              "label": "Events",
              "value": "Events"
            },
            {
              "label": "Invoices",
              "value": "Invoices"
            },
            {
              "label": "Leads",
              "value": "Leads"
            },
            {
              "label": "Price Books",
              "value": "Price_Books"
            },
            {
              "label": "Products",
              "value": "Products"
            },
            {
              "label": "Purchase Orders",
              "value": "Purchase_Orders"
            },
            {
              "label": "Quotes",
              "value": "Quotes"
            },
            {
              "label": "Sales Orders",
              "value": "Sales_Orders"
            },
            {
              "label": "Solutions",
              "value": "Solutions"
            },
            {
              "label": "Tasks",
              "value": "Tasks"
            },
            {
              "label": "Vendors",
              "value": "Vendors"
            }
          ],
          "required": true,
          "comments": "The type of record to operate on",
          "key": "recordType",
          "type": "string",
          "default": "",
          "label": "Record Type"
        },
        {
          "placeholder": "Record ID",
          "required": true,
          "comments": "ID that identifies a specific record",
          "example": "5394166000000379001",
          "key": "recordId",
          "type": "string",
          "default": "",
          "label": "Record ID"
        },
        {
          "placeholder": "Fields",
          "required": false,
          "comments": "The names of the fields to retrieve",
          "key": "fields",
          "type": "string",
          "default": "",
          "collection": "valuelist",
          "label": "Fields"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "crmGetRecords": {
      "display": {
        "label": "CRM - Get Records",
        "description": "Get a collection of Zoho CRM Records"
      },
      "key": "crmGetRecords",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "Record Type",
          "model": [
            {
              "label": "Accounts",
              "value": "Accounts"
            },
            {
              "label": "Calls",
              "value": "Calls"
            },
            {
              "label": "Campaigns",
              "value": "Campaigns"
            },
            {
              "label": "Cases",
              "value": "Cases"
            },
            {
              "label": "Contacts",
              "value": "Contacts"
            },
            {
              "label": "Deals",
              "value": "Deals"
            },
            {
              "label": "Events",
              "value": "Events"
            },
            {
              "label": "Invoices",
              "value": "Invoices"
            },
            {
              "label": "Leads",
              "value": "Leads"
            },
            {
              "label": "Price Books",
              "value": "Price_Books"
            },
            {
              "label": "Products",
              "value": "Products"
            },
            {
              "label": "Purchase Orders",
              "value": "Purchase_Orders"
            },
            {
              "label": "Quotes",
              "value": "Quotes"
            },
            {
              "label": "Sales Orders",
              "value": "Sales_Orders"
            },
            {
              "label": "Solutions",
              "value": "Solutions"
            },
            {
              "label": "Tasks",
              "value": "Tasks"
            },
            {
              "label": "Vendors",
              "value": "Vendors"
            }
          ],
          "required": true,
          "comments": "The type of record to operate on",
          "key": "recordType",
          "type": "string",
          "default": "",
          "label": "Record Type"
        },
        {
          "placeholder": "Fields",
          "required": true,
          "comments": "The names of the fields to retrieve",
          "key": "fields",
          "type": "string",
          "default": "",
          "collection": "valuelist",
          "label": "Fields"
        },
        {
          "placeholder": "Page",
          "required": false,
          "comments": "The page number to start at",
          "example": "1",
          "key": "page",
          "type": "string",
          "default": "",
          "label": "Page"
        },
        {
          "placeholder": "200",
          "required": false,
          "comments": "The records to fetch per page",
          "example": "10",
          "key": "per_page",
          "type": "string",
          "default": "200",
          "label": "Per Page"
        },
        {
          "placeholder": "Page Token",
          "required": false,
          "comments": "Token used for pagination",
          "example": "187d2xxxxxxc50119e",
          "key": "page_token",
          "type": "string",
          "default": "",
          "label": "Page Token"
        },
        {
          "placeholder": "Sort Order",
          "required": false,
          "model": [
            {
              "label": "Ascending",
              "value": "asc"
            },
            {
              "label": "Descending",
              "value": "desc"
            }
          ],
          "comments": "The order in which to sort the results",
          "key": "sort_order",
          "type": "string",
          "default": "",
          "label": "Sort Order"
        },
        {
          "placeholder": "Sort By",
          "required": false,
          "model": [
            {
              "label": "Id",
              "value": "id"
            },
            {
              "label": "Created Time",
              "value": "Created_Time"
            },
            {
              "label": "Modified Time",
              "value": "Modified_Time"
            }
          ],
          "comments": "The field to sort by",
          "key": "sort_by",
          "type": "string",
          "default": "",
          "label": "Sort By"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "crmRemoveRecord": {
      "display": {
        "label": "CRM - Remove Record",
        "description": "Remove a Zoho CRM Record"
      },
      "key": "crmRemoveRecord",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "Record Type",
          "model": [
            {
              "label": "Accounts",
              "value": "Accounts"
            },
            {
              "label": "Calls",
              "value": "Calls"
            },
            {
              "label": "Campaigns",
              "value": "Campaigns"
            },
            {
              "label": "Cases",
              "value": "Cases"
            },
            {
              "label": "Contacts",
              "value": "Contacts"
            },
            {
              "label": "Deals",
              "value": "Deals"
            },
            {
              "label": "Events",
              "value": "Events"
            },
            {
              "label": "Invoices",
              "value": "Invoices"
            },
            {
              "label": "Leads",
              "value": "Leads"
            },
            {
              "label": "Price Books",
              "value": "Price_Books"
            },
            {
              "label": "Products",
              "value": "Products"
            },
            {
              "label": "Purchase Orders",
              "value": "Purchase_Orders"
            },
            {
              "label": "Quotes",
              "value": "Quotes"
            },
            {
              "label": "Sales Orders",
              "value": "Sales_Orders"
            },
            {
              "label": "Solutions",
              "value": "Solutions"
            },
            {
              "label": "Tasks",
              "value": "Tasks"
            },
            {
              "label": "Vendors",
              "value": "Vendors"
            }
          ],
          "required": true,
          "comments": "The type of record to operate on",
          "key": "recordType",
          "type": "string",
          "default": "",
          "label": "Record Type"
        },
        {
          "placeholder": "Record ID",
          "required": true,
          "comments": "ID that identifies a specific record",
          "example": "5394166000000379001",
          "key": "recordId",
          "type": "string",
          "default": "",
          "label": "Record ID"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "crmCreateRecord": {
      "display": {
        "label": "CRM - Create Record",
        "description": "Create a Zoho CRM Record"
      },
      "key": "crmCreateRecord",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "Record Type",
          "model": [
            {
              "label": "Accounts",
              "value": "Accounts"
            },
            {
              "label": "Calls",
              "value": "Calls"
            },
            {
              "label": "Campaigns",
              "value": "Campaigns"
            },
            {
              "label": "Cases",
              "value": "Cases"
            },
            {
              "label": "Contacts",
              "value": "Contacts"
            },
            {
              "label": "Deals",
              "value": "Deals"
            },
            {
              "label": "Events",
              "value": "Events"
            },
            {
              "label": "Invoices",
              "value": "Invoices"
            },
            {
              "label": "Leads",
              "value": "Leads"
            },
            {
              "label": "Price Books",
              "value": "Price_Books"
            },
            {
              "label": "Products",
              "value": "Products"
            },
            {
              "label": "Purchase Orders",
              "value": "Purchase_Orders"
            },
            {
              "label": "Quotes",
              "value": "Quotes"
            },
            {
              "label": "Sales Orders",
              "value": "Sales_Orders"
            },
            {
              "label": "Solutions",
              "value": "Solutions"
            },
            {
              "label": "Tasks",
              "value": "Tasks"
            },
            {
              "label": "Vendors",
              "value": "Vendors"
            }
          ],
          "required": true,
          "comments": "The type of record to operate on",
          "key": "recordType",
          "type": "string",
          "default": "",
          "label": "Record Type"
        },
        {
          "required": false,
          "comments": "A field for dynamic inputs that can be configured at deploy time with the use of a key/value config variable.",
          "key": "dynamicValues",
          "type": "data",
          "default": "",
          "label": "Dynamic Fields"
        },
        {
          "placeholder": "Values",
          "required": false,
          "comments": "The names of the fields and their values to use when creating/updating a record",
          "key": "fieldValues",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Values"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "crmUpdateRecord": {
      "display": {
        "label": "CRM - Update Record",
        "description": "Update a Zoho CRM Record"
      },
      "key": "crmUpdateRecord",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "Record Type",
          "model": [
            {
              "label": "Accounts",
              "value": "Accounts"
            },
            {
              "label": "Calls",
              "value": "Calls"
            },
            {
              "label": "Campaigns",
              "value": "Campaigns"
            },
            {
              "label": "Cases",
              "value": "Cases"
            },
            {
              "label": "Contacts",
              "value": "Contacts"
            },
            {
              "label": "Deals",
              "value": "Deals"
            },
            {
              "label": "Events",
              "value": "Events"
            },
            {
              "label": "Invoices",
              "value": "Invoices"
            },
            {
              "label": "Leads",
              "value": "Leads"
            },
            {
              "label": "Price Books",
              "value": "Price_Books"
            },
            {
              "label": "Products",
              "value": "Products"
            },
            {
              "label": "Purchase Orders",
              "value": "Purchase_Orders"
            },
            {
              "label": "Quotes",
              "value": "Quotes"
            },
            {
              "label": "Sales Orders",
              "value": "Sales_Orders"
            },
            {
              "label": "Solutions",
              "value": "Solutions"
            },
            {
              "label": "Tasks",
              "value": "Tasks"
            },
            {
              "label": "Vendors",
              "value": "Vendors"
            }
          ],
          "required": true,
          "comments": "The type of record to operate on",
          "key": "recordType",
          "type": "string",
          "default": "",
          "label": "Record Type"
        },
        {
          "placeholder": "Record ID",
          "required": true,
          "comments": "ID that identifies a specific record",
          "example": "5394166000000379001",
          "key": "recordId",
          "type": "string",
          "default": "",
          "label": "Record ID"
        },
        {
          "required": false,
          "comments": "A field for dynamic inputs that can be configured at deploy time with the use of a key/value config variable.",
          "key": "dynamicValues",
          "type": "data",
          "default": "",
          "label": "Dynamic Fields"
        },
        {
          "placeholder": "Values",
          "required": false,
          "comments": "The names of the fields and their values to use when creating/updating a record",
          "key": "fieldValues",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Values"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "crmRunQuery": {
      "display": {
        "label": "CRM - COQL Query",
        "description": "Run a COQL Query for Zoho CRM"
      },
      "key": "crmRunQuery",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "Query",
          "required": true,
          "comments": "COQL Query to execute",
          "example": "select Last_Name from Contacts where Last_Name is not null",
          "key": "query",
          "type": "text",
          "default": "",
          "label": "Query"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "crmAddAttachment": {
      "display": {
        "label": "CRM - Add attachment",
        "description": "Add an attachment to a Zoho CRM record (Lead, etc)."
      },
      "key": "crmAddAttachment",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "Type of record to attach a file to",
          "model": [
            {
              "label": "Accounts",
              "value": "Accounts"
            },
            {
              "label": "Campaigns",
              "value": "Campaigns"
            },
            {
              "label": "Cases",
              "value": "Cases"
            },
            {
              "label": "Contacts",
              "value": "Contacts"
            },
            {
              "label": "Custom",
              "value": "Custom"
            },
            {
              "label": "Deals",
              "value": "Deals"
            },
            {
              "label": "Events",
              "value": "Events"
            },
            {
              "label": "Invoices",
              "value": "Invoices"
            },
            {
              "label": "Leads",
              "value": "Leads"
            },
            {
              "label": "Notes",
              "value": "Notes"
            },
            {
              "label": "Price Books",
              "value": "Price Books"
            },
            {
              "label": "Products",
              "value": "Products"
            },
            {
              "label": "Purchase Orders",
              "value": "Purchase Orders"
            },
            {
              "label": "Quotes",
              "value": "Quotes"
            },
            {
              "label": "Sales Orders",
              "value": "Sales Orders"
            },
            {
              "label": "Solutions",
              "value": "Solutions"
            },
            {
              "label": "Tasks",
              "value": "Tasks"
            },
            {
              "label": "Vendors",
              "value": "Vendors"
            }
          ],
          "key": "recordType",
          "type": "string",
          "default": "Leads",
          "label": "Record Type"
        },
        {
          "placeholder": "Record ID",
          "required": true,
          "comments": "ID that identifies a specific record",
          "example": "5394166000000379001",
          "key": "recordId",
          "type": "string",
          "default": "",
          "label": "Record ID"
        },
        {
          "required": true,
          "comments": "The file to upload - either string contents or a binary file",
          "key": "file",
          "type": "data",
          "default": "",
          "label": "File"
        },
        {
          "required": true,
          "comments": "The name of the file to upload",
          "key": "fileName",
          "type": "string",
          "default": "",
          "label": "File Name"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "booksGetRecord": {
      "display": {
        "label": "Books - Get Record",
        "description": "Get a single Zoho Books Record"
      },
      "key": "booksGetRecord",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "Record Type",
          "model": [
            {
              "label": "Bank Accounts",
              "value": "bankaccounts"
            },
            {
              "label": "Bank Transactions",
              "value": "banktransactions"
            },
            {
              "label": "Bank Rules",
              "value": "bankaccounts/rules"
            },
            {
              "label": "Base Currency Adjustments",
              "value": "basecurrencyadjustment"
            },
            {
              "label": "Bills",
              "value": "bills"
            },
            {
              "label": "Chart Of Accounts",
              "value": "chartofaccounts"
            },
            {
              "label": "Contacts",
              "value": "contacts"
            },
            {
              "label": "Contact Persons",
              "value": "contactpersons"
            },
            {
              "label": "Credit Notes",
              "value": "creditnotes"
            },
            {
              "label": "Currency",
              "value": "settings/currencies"
            },
            {
              "label": "Customer Payments",
              "value": "customerpayments"
            },
            {
              "label": "Employees",
              "value": "employees"
            },
            {
              "label": "Estimates",
              "value": "estimates"
            },
            {
              "label": "Expenses",
              "value": "expenses"
            },
            {
              "label": "Invoices",
              "value": "invoices"
            },
            {
              "label": "Items",
              "value": "items"
            },
            {
              "label": "Journals",
              "value": "journals"
            },
            {
              "label": "Opening Balances",
              "value": "settings/openingbalances"
            },
            {
              "label": "Projects",
              "value": "projects"
            },
            {
              "label": "Purchase Orders",
              "value": "purchaseorders"
            },
            {
              "label": "Recurring Bills",
              "value": "recurringbills"
            },
            {
              "label": "Recurring Expenses",
              "value": "recurringexpenses"
            },
            {
              "label": "Recurring Invoices",
              "value": "recurringinvoices"
            },
            {
              "label": "Retainer Invoices",
              "value": "retainerinvoices"
            },
            {
              "label": "Sales Orders",
              "value": "salesorders"
            },
            {
              "label": "Tasks",
              "value": "tasks"
            },
            {
              "label": "Taxes",
              "value": "settings/taxes"
            },
            {
              "label": "Time Entries",
              "value": "projects/timeentries"
            },
            {
              "label": "Users",
              "value": "users"
            },
            {
              "label": "Vendor Credits",
              "value": "vendorcredits"
            },
            {
              "label": "Vendor Payments",
              "value": "vendorpayments"
            }
          ],
          "required": true,
          "comments": "The type of record to operate on",
          "key": "recordType",
          "type": "string",
          "default": "",
          "label": "Record Type"
        },
        {
          "placeholder": "Record ID",
          "required": true,
          "comments": "ID that identifies a specific record",
          "example": "5394166000000379001",
          "key": "recordId",
          "type": "string",
          "default": "",
          "label": "Record ID"
        },
        {
          "placeholder": "Parent Record Type",
          "model": [
            {
              "label": "Bank Accounts",
              "value": "bankaccounts"
            },
            {
              "label": "Bank Transactions",
              "value": "banktransactions"
            },
            {
              "label": "Bank Rules",
              "value": "bankaccounts/rules"
            },
            {
              "label": "Base Currency Adjustments",
              "value": "basecurrencyadjustment"
            },
            {
              "label": "Bills",
              "value": "bills"
            },
            {
              "label": "Chart Of Accounts",
              "value": "chartofaccounts"
            },
            {
              "label": "Contacts",
              "value": "contacts"
            },
            {
              "label": "Contact Persons",
              "value": "contactpersons"
            },
            {
              "label": "Credit Notes",
              "value": "creditnotes"
            },
            {
              "label": "Currency",
              "value": "settings/currencies"
            },
            {
              "label": "Customer Payments",
              "value": "customerpayments"
            },
            {
              "label": "Employees",
              "value": "employees"
            },
            {
              "label": "Estimates",
              "value": "estimates"
            },
            {
              "label": "Expenses",
              "value": "expenses"
            },
            {
              "label": "Invoices",
              "value": "invoices"
            },
            {
              "label": "Items",
              "value": "items"
            },
            {
              "label": "Journals",
              "value": "journals"
            },
            {
              "label": "Opening Balances",
              "value": "settings/openingbalances"
            },
            {
              "label": "Projects",
              "value": "projects"
            },
            {
              "label": "Purchase Orders",
              "value": "purchaseorders"
            },
            {
              "label": "Recurring Bills",
              "value": "recurringbills"
            },
            {
              "label": "Recurring Expenses",
              "value": "recurringexpenses"
            },
            {
              "label": "Recurring Invoices",
              "value": "recurringinvoices"
            },
            {
              "label": "Retainer Invoices",
              "value": "retainerinvoices"
            },
            {
              "label": "Sales Orders",
              "value": "salesorders"
            },
            {
              "label": "Tasks",
              "value": "tasks"
            },
            {
              "label": "Taxes",
              "value": "settings/taxes"
            },
            {
              "label": "Time Entries",
              "value": "projects/timeentries"
            },
            {
              "label": "Users",
              "value": "users"
            },
            {
              "label": "Vendor Credits",
              "value": "vendorcredits"
            },
            {
              "label": "Vendor Payments",
              "value": "vendorpayments"
            }
          ],
          "required": false,
          "comments": "The type of record to operate on",
          "key": "parentRecordType",
          "type": "string",
          "default": "",
          "label": "Parent Record Type"
        },
        {
          "placeholder": "Parent Record Id",
          "required": false,
          "comments": "Id that identifies a specific parent record under which other records are grouped",
          "example": "5394166000000379001",
          "key": "parentRecordId",
          "type": "string",
          "default": "",
          "label": "Parent Record Id"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "booksGetRecords": {
      "display": {
        "label": "Books - Get Records",
        "description": "Get a collection of Zoho Books Records"
      },
      "key": "booksGetRecords",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "Record Type",
          "model": [
            {
              "label": "Bank Accounts",
              "value": "bankaccounts"
            },
            {
              "label": "Bank Transactions",
              "value": "banktransactions"
            },
            {
              "label": "Bank Rules",
              "value": "bankaccounts/rules"
            },
            {
              "label": "Base Currency Adjustments",
              "value": "basecurrencyadjustment"
            },
            {
              "label": "Bills",
              "value": "bills"
            },
            {
              "label": "Chart Of Accounts",
              "value": "chartofaccounts"
            },
            {
              "label": "Contacts",
              "value": "contacts"
            },
            {
              "label": "Contact Persons",
              "value": "contactpersons"
            },
            {
              "label": "Credit Notes",
              "value": "creditnotes"
            },
            {
              "label": "Currency",
              "value": "settings/currencies"
            },
            {
              "label": "Customer Payments",
              "value": "customerpayments"
            },
            {
              "label": "Employees",
              "value": "employees"
            },
            {
              "label": "Estimates",
              "value": "estimates"
            },
            {
              "label": "Expenses",
              "value": "expenses"
            },
            {
              "label": "Invoices",
              "value": "invoices"
            },
            {
              "label": "Items",
              "value": "items"
            },
            {
              "label": "Journals",
              "value": "journals"
            },
            {
              "label": "Opening Balances",
              "value": "settings/openingbalances"
            },
            {
              "label": "Projects",
              "value": "projects"
            },
            {
              "label": "Purchase Orders",
              "value": "purchaseorders"
            },
            {
              "label": "Recurring Bills",
              "value": "recurringbills"
            },
            {
              "label": "Recurring Expenses",
              "value": "recurringexpenses"
            },
            {
              "label": "Recurring Invoices",
              "value": "recurringinvoices"
            },
            {
              "label": "Retainer Invoices",
              "value": "retainerinvoices"
            },
            {
              "label": "Sales Orders",
              "value": "salesorders"
            },
            {
              "label": "Tasks",
              "value": "tasks"
            },
            {
              "label": "Taxes",
              "value": "settings/taxes"
            },
            {
              "label": "Time Entries",
              "value": "projects/timeentries"
            },
            {
              "label": "Users",
              "value": "users"
            },
            {
              "label": "Vendor Credits",
              "value": "vendorcredits"
            },
            {
              "label": "Vendor Payments",
              "value": "vendorpayments"
            }
          ],
          "required": true,
          "comments": "The type of record to operate on",
          "key": "recordType",
          "type": "string",
          "default": "",
          "label": "Record Type"
        },
        {
          "placeholder": "Parent Record Type",
          "model": [
            {
              "label": "Bank Accounts",
              "value": "bankaccounts"
            },
            {
              "label": "Bank Transactions",
              "value": "banktransactions"
            },
            {
              "label": "Bank Rules",
              "value": "bankaccounts/rules"
            },
            {
              "label": "Base Currency Adjustments",
              "value": "basecurrencyadjustment"
            },
            {
              "label": "Bills",
              "value": "bills"
            },
            {
              "label": "Chart Of Accounts",
              "value": "chartofaccounts"
            },
            {
              "label": "Contacts",
              "value": "contacts"
            },
            {
              "label": "Contact Persons",
              "value": "contactpersons"
            },
            {
              "label": "Credit Notes",
              "value": "creditnotes"
            },
            {
              "label": "Currency",
              "value": "settings/currencies"
            },
            {
              "label": "Customer Payments",
              "value": "customerpayments"
            },
            {
              "label": "Employees",
              "value": "employees"
            },
            {
              "label": "Estimates",
              "value": "estimates"
            },
            {
              "label": "Expenses",
              "value": "expenses"
            },
            {
              "label": "Invoices",
              "value": "invoices"
            },
            {
              "label": "Items",
              "value": "items"
            },
            {
              "label": "Journals",
              "value": "journals"
            },
            {
              "label": "Opening Balances",
              "value": "settings/openingbalances"
            },
            {
              "label": "Projects",
              "value": "projects"
            },
            {
              "label": "Purchase Orders",
              "value": "purchaseorders"
            },
            {
              "label": "Recurring Bills",
              "value": "recurringbills"
            },
            {
              "label": "Recurring Expenses",
              "value": "recurringexpenses"
            },
            {
              "label": "Recurring Invoices",
              "value": "recurringinvoices"
            },
            {
              "label": "Retainer Invoices",
              "value": "retainerinvoices"
            },
            {
              "label": "Sales Orders",
              "value": "salesorders"
            },
            {
              "label": "Tasks",
              "value": "tasks"
            },
            {
              "label": "Taxes",
              "value": "settings/taxes"
            },
            {
              "label": "Time Entries",
              "value": "projects/timeentries"
            },
            {
              "label": "Users",
              "value": "users"
            },
            {
              "label": "Vendor Credits",
              "value": "vendorcredits"
            },
            {
              "label": "Vendor Payments",
              "value": "vendorpayments"
            }
          ],
          "required": false,
          "comments": "The type of record to operate on",
          "key": "parentRecordType",
          "type": "string",
          "default": "",
          "label": "Parent Record Type"
        },
        {
          "placeholder": "Parent Record Id",
          "required": false,
          "comments": "Id that identifies a specific parent record under which other records are grouped",
          "example": "5394166000000379001",
          "key": "parentRecordId",
          "type": "string",
          "default": "",
          "label": "Parent Record Id"
        },
        {
          "placeholder": "Search Fields",
          "required": false,
          "comments": "The names and values of the fields to use for searching",
          "key": "searchFields",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Search Fields"
        },
        {
          "placeholder": "Page",
          "required": false,
          "comments": "The page number to start at",
          "example": "1",
          "key": "page",
          "type": "string",
          "default": "",
          "label": "Page"
        },
        {
          "placeholder": "200",
          "required": false,
          "comments": "The records to fetch per page",
          "example": "10",
          "key": "per_page",
          "type": "string",
          "default": "200",
          "label": "Per Page"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "booksRemoveRecord": {
      "display": {
        "label": "Books - Remove Record",
        "description": "Remove a Zoho Books Record"
      },
      "key": "booksRemoveRecord",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "Record Type",
          "model": [
            {
              "label": "Bank Accounts",
              "value": "bankaccounts"
            },
            {
              "label": "Bank Transactions",
              "value": "banktransactions"
            },
            {
              "label": "Bank Rules",
              "value": "bankaccounts/rules"
            },
            {
              "label": "Base Currency Adjustments",
              "value": "basecurrencyadjustment"
            },
            {
              "label": "Bills",
              "value": "bills"
            },
            {
              "label": "Chart Of Accounts",
              "value": "chartofaccounts"
            },
            {
              "label": "Contacts",
              "value": "contacts"
            },
            {
              "label": "Contact Persons",
              "value": "contactpersons"
            },
            {
              "label": "Credit Notes",
              "value": "creditnotes"
            },
            {
              "label": "Currency",
              "value": "settings/currencies"
            },
            {
              "label": "Customer Payments",
              "value": "customerpayments"
            },
            {
              "label": "Employees",
              "value": "employees"
            },
            {
              "label": "Estimates",
              "value": "estimates"
            },
            {
              "label": "Expenses",
              "value": "expenses"
            },
            {
              "label": "Invoices",
              "value": "invoices"
            },
            {
              "label": "Items",
              "value": "items"
            },
            {
              "label": "Journals",
              "value": "journals"
            },
            {
              "label": "Opening Balances",
              "value": "settings/openingbalances"
            },
            {
              "label": "Projects",
              "value": "projects"
            },
            {
              "label": "Purchase Orders",
              "value": "purchaseorders"
            },
            {
              "label": "Recurring Bills",
              "value": "recurringbills"
            },
            {
              "label": "Recurring Expenses",
              "value": "recurringexpenses"
            },
            {
              "label": "Recurring Invoices",
              "value": "recurringinvoices"
            },
            {
              "label": "Retainer Invoices",
              "value": "retainerinvoices"
            },
            {
              "label": "Sales Orders",
              "value": "salesorders"
            },
            {
              "label": "Tasks",
              "value": "tasks"
            },
            {
              "label": "Taxes",
              "value": "settings/taxes"
            },
            {
              "label": "Time Entries",
              "value": "projects/timeentries"
            },
            {
              "label": "Users",
              "value": "users"
            },
            {
              "label": "Vendor Credits",
              "value": "vendorcredits"
            },
            {
              "label": "Vendor Payments",
              "value": "vendorpayments"
            }
          ],
          "required": true,
          "comments": "The type of record to operate on",
          "key": "recordType",
          "type": "string",
          "default": "",
          "label": "Record Type"
        },
        {
          "placeholder": "Record ID",
          "required": true,
          "comments": "ID that identifies a specific record",
          "example": "5394166000000379001",
          "key": "recordId",
          "type": "string",
          "default": "",
          "label": "Record ID"
        },
        {
          "placeholder": "Parent Record Type",
          "model": [
            {
              "label": "Bank Accounts",
              "value": "bankaccounts"
            },
            {
              "label": "Bank Transactions",
              "value": "banktransactions"
            },
            {
              "label": "Bank Rules",
              "value": "bankaccounts/rules"
            },
            {
              "label": "Base Currency Adjustments",
              "value": "basecurrencyadjustment"
            },
            {
              "label": "Bills",
              "value": "bills"
            },
            {
              "label": "Chart Of Accounts",
              "value": "chartofaccounts"
            },
            {
              "label": "Contacts",
              "value": "contacts"
            },
            {
              "label": "Contact Persons",
              "value": "contactpersons"
            },
            {
              "label": "Credit Notes",
              "value": "creditnotes"
            },
            {
              "label": "Currency",
              "value": "settings/currencies"
            },
            {
              "label": "Customer Payments",
              "value": "customerpayments"
            },
            {
              "label": "Employees",
              "value": "employees"
            },
            {
              "label": "Estimates",
              "value": "estimates"
            },
            {
              "label": "Expenses",
              "value": "expenses"
            },
            {
              "label": "Invoices",
              "value": "invoices"
            },
            {
              "label": "Items",
              "value": "items"
            },
            {
              "label": "Journals",
              "value": "journals"
            },
            {
              "label": "Opening Balances",
              "value": "settings/openingbalances"
            },
            {
              "label": "Projects",
              "value": "projects"
            },
            {
              "label": "Purchase Orders",
              "value": "purchaseorders"
            },
            {
              "label": "Recurring Bills",
              "value": "recurringbills"
            },
            {
              "label": "Recurring Expenses",
              "value": "recurringexpenses"
            },
            {
              "label": "Recurring Invoices",
              "value": "recurringinvoices"
            },
            {
              "label": "Retainer Invoices",
              "value": "retainerinvoices"
            },
            {
              "label": "Sales Orders",
              "value": "salesorders"
            },
            {
              "label": "Tasks",
              "value": "tasks"
            },
            {
              "label": "Taxes",
              "value": "settings/taxes"
            },
            {
              "label": "Time Entries",
              "value": "projects/timeentries"
            },
            {
              "label": "Users",
              "value": "users"
            },
            {
              "label": "Vendor Credits",
              "value": "vendorcredits"
            },
            {
              "label": "Vendor Payments",
              "value": "vendorpayments"
            }
          ],
          "required": false,
          "comments": "The type of record to operate on",
          "key": "parentRecordType",
          "type": "string",
          "default": "",
          "label": "Parent Record Type"
        },
        {
          "placeholder": "Parent Record Id",
          "required": false,
          "comments": "Id that identifies a specific parent record under which other records are grouped",
          "example": "5394166000000379001",
          "key": "parentRecordId",
          "type": "string",
          "default": "",
          "label": "Parent Record Id"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "booksCreateRecord": {
      "display": {
        "label": "Books - Create Record",
        "description": "Create a Zoho Books Record"
      },
      "key": "booksCreateRecord",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "Record Type",
          "model": [
            {
              "label": "Bank Accounts",
              "value": "bankaccounts"
            },
            {
              "label": "Bank Transactions",
              "value": "banktransactions"
            },
            {
              "label": "Bank Rules",
              "value": "bankaccounts/rules"
            },
            {
              "label": "Base Currency Adjustments",
              "value": "basecurrencyadjustment"
            },
            {
              "label": "Bills",
              "value": "bills"
            },
            {
              "label": "Chart Of Accounts",
              "value": "chartofaccounts"
            },
            {
              "label": "Contacts",
              "value": "contacts"
            },
            {
              "label": "Contact Persons",
              "value": "contactpersons"
            },
            {
              "label": "Credit Notes",
              "value": "creditnotes"
            },
            {
              "label": "Currency",
              "value": "settings/currencies"
            },
            {
              "label": "Customer Payments",
              "value": "customerpayments"
            },
            {
              "label": "Employees",
              "value": "employees"
            },
            {
              "label": "Estimates",
              "value": "estimates"
            },
            {
              "label": "Expenses",
              "value": "expenses"
            },
            {
              "label": "Invoices",
              "value": "invoices"
            },
            {
              "label": "Items",
              "value": "items"
            },
            {
              "label": "Journals",
              "value": "journals"
            },
            {
              "label": "Opening Balances",
              "value": "settings/openingbalances"
            },
            {
              "label": "Projects",
              "value": "projects"
            },
            {
              "label": "Purchase Orders",
              "value": "purchaseorders"
            },
            {
              "label": "Recurring Bills",
              "value": "recurringbills"
            },
            {
              "label": "Recurring Expenses",
              "value": "recurringexpenses"
            },
            {
              "label": "Recurring Invoices",
              "value": "recurringinvoices"
            },
            {
              "label": "Retainer Invoices",
              "value": "retainerinvoices"
            },
            {
              "label": "Sales Orders",
              "value": "salesorders"
            },
            {
              "label": "Tasks",
              "value": "tasks"
            },
            {
              "label": "Taxes",
              "value": "settings/taxes"
            },
            {
              "label": "Time Entries",
              "value": "projects/timeentries"
            },
            {
              "label": "Users",
              "value": "users"
            },
            {
              "label": "Vendor Credits",
              "value": "vendorcredits"
            },
            {
              "label": "Vendor Payments",
              "value": "vendorpayments"
            }
          ],
          "required": true,
          "comments": "The type of record to operate on",
          "key": "recordType",
          "type": "string",
          "default": "",
          "label": "Record Type"
        },
        {
          "placeholder": "Parent Record Type",
          "model": [
            {
              "label": "Bank Accounts",
              "value": "bankaccounts"
            },
            {
              "label": "Bank Transactions",
              "value": "banktransactions"
            },
            {
              "label": "Bank Rules",
              "value": "bankaccounts/rules"
            },
            {
              "label": "Base Currency Adjustments",
              "value": "basecurrencyadjustment"
            },
            {
              "label": "Bills",
              "value": "bills"
            },
            {
              "label": "Chart Of Accounts",
              "value": "chartofaccounts"
            },
            {
              "label": "Contacts",
              "value": "contacts"
            },
            {
              "label": "Contact Persons",
              "value": "contactpersons"
            },
            {
              "label": "Credit Notes",
              "value": "creditnotes"
            },
            {
              "label": "Currency",
              "value": "settings/currencies"
            },
            {
              "label": "Customer Payments",
              "value": "customerpayments"
            },
            {
              "label": "Employees",
              "value": "employees"
            },
            {
              "label": "Estimates",
              "value": "estimates"
            },
            {
              "label": "Expenses",
              "value": "expenses"
            },
            {
              "label": "Invoices",
              "value": "invoices"
            },
            {
              "label": "Items",
              "value": "items"
            },
            {
              "label": "Journals",
              "value": "journals"
            },
            {
              "label": "Opening Balances",
              "value": "settings/openingbalances"
            },
            {
              "label": "Projects",
              "value": "projects"
            },
            {
              "label": "Purchase Orders",
              "value": "purchaseorders"
            },
            {
              "label": "Recurring Bills",
              "value": "recurringbills"
            },
            {
              "label": "Recurring Expenses",
              "value": "recurringexpenses"
            },
            {
              "label": "Recurring Invoices",
              "value": "recurringinvoices"
            },
            {
              "label": "Retainer Invoices",
              "value": "retainerinvoices"
            },
            {
              "label": "Sales Orders",
              "value": "salesorders"
            },
            {
              "label": "Tasks",
              "value": "tasks"
            },
            {
              "label": "Taxes",
              "value": "settings/taxes"
            },
            {
              "label": "Time Entries",
              "value": "projects/timeentries"
            },
            {
              "label": "Users",
              "value": "users"
            },
            {
              "label": "Vendor Credits",
              "value": "vendorcredits"
            },
            {
              "label": "Vendor Payments",
              "value": "vendorpayments"
            }
          ],
          "required": false,
          "comments": "The type of record to operate on",
          "key": "parentRecordType",
          "type": "string",
          "default": "",
          "label": "Parent Record Type"
        },
        {
          "placeholder": "Parent Record Id",
          "required": false,
          "comments": "Id that identifies a specific parent record under which other records are grouped",
          "example": "5394166000000379001",
          "key": "parentRecordId",
          "type": "string",
          "default": "",
          "label": "Parent Record Id"
        },
        {
          "required": false,
          "comments": "A field for dynamic inputs that can be configured at deploy time with the use of a key/value config variable.",
          "key": "dynamicValues",
          "type": "data",
          "default": "",
          "label": "Dynamic Fields"
        },
        {
          "placeholder": "Values",
          "required": false,
          "comments": "The names of the fields and their values to use when creating/updating a record",
          "key": "fieldValues",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Values"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "booksUpdateRecord": {
      "display": {
        "label": "Books - Update Record",
        "description": "Update a Zoho Books Record"
      },
      "key": "booksUpdateRecord",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "Record Type",
          "model": [
            {
              "label": "Bank Accounts",
              "value": "bankaccounts"
            },
            {
              "label": "Bank Transactions",
              "value": "banktransactions"
            },
            {
              "label": "Bank Rules",
              "value": "bankaccounts/rules"
            },
            {
              "label": "Base Currency Adjustments",
              "value": "basecurrencyadjustment"
            },
            {
              "label": "Bills",
              "value": "bills"
            },
            {
              "label": "Chart Of Accounts",
              "value": "chartofaccounts"
            },
            {
              "label": "Contacts",
              "value": "contacts"
            },
            {
              "label": "Contact Persons",
              "value": "contactpersons"
            },
            {
              "label": "Credit Notes",
              "value": "creditnotes"
            },
            {
              "label": "Currency",
              "value": "settings/currencies"
            },
            {
              "label": "Customer Payments",
              "value": "customerpayments"
            },
            {
              "label": "Employees",
              "value": "employees"
            },
            {
              "label": "Estimates",
              "value": "estimates"
            },
            {
              "label": "Expenses",
              "value": "expenses"
            },
            {
              "label": "Invoices",
              "value": "invoices"
            },
            {
              "label": "Items",
              "value": "items"
            },
            {
              "label": "Journals",
              "value": "journals"
            },
            {
              "label": "Opening Balances",
              "value": "settings/openingbalances"
            },
            {
              "label": "Projects",
              "value": "projects"
            },
            {
              "label": "Purchase Orders",
              "value": "purchaseorders"
            },
            {
              "label": "Recurring Bills",
              "value": "recurringbills"
            },
            {
              "label": "Recurring Expenses",
              "value": "recurringexpenses"
            },
            {
              "label": "Recurring Invoices",
              "value": "recurringinvoices"
            },
            {
              "label": "Retainer Invoices",
              "value": "retainerinvoices"
            },
            {
              "label": "Sales Orders",
              "value": "salesorders"
            },
            {
              "label": "Tasks",
              "value": "tasks"
            },
            {
              "label": "Taxes",
              "value": "settings/taxes"
            },
            {
              "label": "Time Entries",
              "value": "projects/timeentries"
            },
            {
              "label": "Users",
              "value": "users"
            },
            {
              "label": "Vendor Credits",
              "value": "vendorcredits"
            },
            {
              "label": "Vendor Payments",
              "value": "vendorpayments"
            }
          ],
          "required": true,
          "comments": "The type of record to operate on",
          "key": "recordType",
          "type": "string",
          "default": "",
          "label": "Record Type"
        },
        {
          "placeholder": "Record ID",
          "required": true,
          "comments": "ID that identifies a specific record",
          "example": "5394166000000379001",
          "key": "recordId",
          "type": "string",
          "default": "",
          "label": "Record ID"
        },
        {
          "placeholder": "Parent Record Type",
          "model": [
            {
              "label": "Bank Accounts",
              "value": "bankaccounts"
            },
            {
              "label": "Bank Transactions",
              "value": "banktransactions"
            },
            {
              "label": "Bank Rules",
              "value": "bankaccounts/rules"
            },
            {
              "label": "Base Currency Adjustments",
              "value": "basecurrencyadjustment"
            },
            {
              "label": "Bills",
              "value": "bills"
            },
            {
              "label": "Chart Of Accounts",
              "value": "chartofaccounts"
            },
            {
              "label": "Contacts",
              "value": "contacts"
            },
            {
              "label": "Contact Persons",
              "value": "contactpersons"
            },
            {
              "label": "Credit Notes",
              "value": "creditnotes"
            },
            {
              "label": "Currency",
              "value": "settings/currencies"
            },
            {
              "label": "Customer Payments",
              "value": "customerpayments"
            },
            {
              "label": "Employees",
              "value": "employees"
            },
            {
              "label": "Estimates",
              "value": "estimates"
            },
            {
              "label": "Expenses",
              "value": "expenses"
            },
            {
              "label": "Invoices",
              "value": "invoices"
            },
            {
              "label": "Items",
              "value": "items"
            },
            {
              "label": "Journals",
              "value": "journals"
            },
            {
              "label": "Opening Balances",
              "value": "settings/openingbalances"
            },
            {
              "label": "Projects",
              "value": "projects"
            },
            {
              "label": "Purchase Orders",
              "value": "purchaseorders"
            },
            {
              "label": "Recurring Bills",
              "value": "recurringbills"
            },
            {
              "label": "Recurring Expenses",
              "value": "recurringexpenses"
            },
            {
              "label": "Recurring Invoices",
              "value": "recurringinvoices"
            },
            {
              "label": "Retainer Invoices",
              "value": "retainerinvoices"
            },
            {
              "label": "Sales Orders",
              "value": "salesorders"
            },
            {
              "label": "Tasks",
              "value": "tasks"
            },
            {
              "label": "Taxes",
              "value": "settings/taxes"
            },
            {
              "label": "Time Entries",
              "value": "projects/timeentries"
            },
            {
              "label": "Users",
              "value": "users"
            },
            {
              "label": "Vendor Credits",
              "value": "vendorcredits"
            },
            {
              "label": "Vendor Payments",
              "value": "vendorpayments"
            }
          ],
          "required": false,
          "comments": "The type of record to operate on",
          "key": "parentRecordType",
          "type": "string",
          "default": "",
          "label": "Parent Record Type"
        },
        {
          "placeholder": "Parent Record Id",
          "required": false,
          "comments": "Id that identifies a specific parent record under which other records are grouped",
          "example": "5394166000000379001",
          "key": "parentRecordId",
          "type": "string",
          "default": "",
          "label": "Parent Record Id"
        },
        {
          "required": false,
          "comments": "A field for dynamic inputs that can be configured at deploy time with the use of a key/value config variable.",
          "key": "dynamicValues",
          "type": "data",
          "default": "",
          "label": "Dynamic Fields"
        },
        {
          "placeholder": "Values",
          "required": false,
          "comments": "The names of the fields and their values to use when creating/updating a record",
          "key": "fieldValues",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Values"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    }
  },
  "triggers": {},
  "dataSources": {},
  "documentation": {
    "description": "[Zoho CRM](https://www.zoho.com/crm/) acts as a single repository to bring your sales, marketing, and customer support activities together, and streamline your process, policy, and people in one platform.\n[Zoho Books](https://www.zoho.com/books/) is your one-stop platform for managing your accounting tasks and organizing your transactions. It's a single secure location to keep up with your company's bills and invoices, reconcile your bank statements, control your spending, oversee projects, and eliminate sales tax compliance worries.\n"
  },
  "$version": 1
}
