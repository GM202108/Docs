{
  "documentationUrl": "https://prismatic.io/docs/components/marketo/",
  "key": "marketo",
  "public": true,
  "display": {
    "category": "Application Connectors",
    "label": "Adobe Marketo Engage",
    "description": "Manage Marketo records",
    "iconPath": "icon.png",
    "iconBase64": "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"
  },
  "connections": [
    {
      "key": "oauth2",
      "label": "Marketo OAuth 2.0",
      "comments": "Marketo OAuth 2.0 Connection",
      "oauth2Type": "client_credentials",
      "inputs": [
        {
          "placeholder": "Token URL",
          "required": true,
          "shown": true,
          "comments": "The OAuth 2.0 Token URL for the Marketo API. Replace <ACCOUNT_ID> with your Account Id.",
          "key": "tokenUrl",
          "type": "string",
          "default": "https://<ACCOUNT_ID>.mktorest.com/identity/oauth/token",
          "label": "Token URL"
        },
        {
          "placeholder": "Scopes",
          "required": false,
          "shown": false,
          "comments": "Scopes for the Marketo API. The value is supplied by the API based on the authenticated client.",
          "key": "scopes",
          "type": "string",
          "default": "",
          "label": "Scopes"
        },
        {
          "placeholder": "Client ID",
          "required": true,
          "shown": true,
          "comments": "Client Identifier of your app for the Marketo API",
          "key": "clientId",
          "type": "string",
          "default": "",
          "label": "Client ID"
        },
        {
          "placeholder": "Client Secret",
          "required": true,
          "shown": true,
          "comments": "Client Secret of your app for the Marketo API",
          "key": "clientSecret",
          "type": "password",
          "default": "",
          "label": "Client Secret"
        }
      ],
      "documentation": {
        "description": "To make API requests of Marketo on behalf of your customers you need to create a Custom Service using the Marketo Admin Portal.\nFollow the steps outlined in the [Marketo Documentation](https://developers.marketo.com/rest-api/authentication/).\nBe sure to note the Client ID and Client Secret values, as these will be important when using the Marketo Connection as part of your Integration.\n"
      }
    }
  ],
  "actions": {
    "rawRequest": {
      "display": {
        "label": "Raw Request",
        "description": "Send Raw Request to Marketo"
      },
      "key": "rawRequest",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "URL to call",
          "required": true,
          "comments": "This is the URL to call.",
          "example": "/v1/leads.json",
          "key": "url",
          "type": "string",
          "default": "",
          "label": "URL"
        },
        {
          "required": true,
          "model": [
            {
              "label": "DELETE",
              "value": "DELETE"
            },
            {
              "label": "GET",
              "value": "GET"
            },
            {
              "label": "HEAD",
              "value": "HEAD"
            },
            {
              "label": "LINK",
              "value": "LINK"
            },
            {
              "label": "OPTIONS",
              "value": "OPTIONS"
            },
            {
              "label": "PATCH",
              "value": "PATCH"
            },
            {
              "label": "POST",
              "value": "POST"
            },
            {
              "label": "PURGE",
              "value": "PURGE"
            },
            {
              "label": "PUT",
              "value": "PUT"
            },
            {
              "label": "UNLINK",
              "value": "UNLINK"
            }
          ],
          "comments": "The HTTP method to use.",
          "key": "method",
          "type": "string",
          "default": "",
          "label": "Method"
        },
        {
          "placeholder": "Data to send",
          "required": false,
          "comments": "The HTTP body payload to send to the URL.",
          "example": "{\"exampleKey\": \"Example Data\"}",
          "key": "data",
          "type": "string",
          "default": "",
          "label": "Data"
        },
        {
          "placeholder": "Data to send",
          "required": false,
          "comments": "The Form Data to be sent as a multipart form upload.",
          "example": "[{\"key\": \"Example Key\", \"value\": new Buffer(\"Hello World\")}]",
          "key": "formData",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Form Data"
        },
        {
          "placeholder": "Data to send",
          "required": false,
          "comments": "File Data to be sent as a multipart form upload.",
          "example": "[{key: \"example.txt\", value: \"My File Contents\"}]",
          "key": "fileData",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "File Data"
        },
        {
          "placeholder": "Query Parameter",
          "required": false,
          "comments": "A list of query parameters to send with the request. This is the portion at the end of the URL similar to ?key1=value1&key2=value2.",
          "key": "queryParams",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Query Parameter"
        },
        {
          "placeholder": "Header",
          "required": false,
          "comments": "A list of headers to send with the request.",
          "example": "User-Agent: curl/7.64.1",
          "key": "headers",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Header"
        },
        {
          "placeholder": "Response Type",
          "required": true,
          "comments": "The type of data you expect in the response. You can request json, text, or binary data.",
          "model": [
            {
              "label": "arraybuffer",
              "value": "arraybuffer"
            },
            {
              "label": "document",
              "value": "document"
            },
            {
              "label": "json",
              "value": "json"
            },
            {
              "label": "text",
              "value": "text"
            }
          ],
          "key": "responseType",
          "type": "string",
          "default": "json",
          "label": "Response Type"
        },
        {
          "required": false,
          "comments": "The maximum time that a client will await a response to its request",
          "example": "2000",
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        },
        {
          "placeholder": "Retry Delay",
          "required": false,
          "comments": "The delay in milliseconds between retries.",
          "key": "retryDelayMS",
          "type": "string",
          "default": "0",
          "label": "Retry Delay (ms)"
        },
        {
          "required": false,
          "comments": "If true, retries on all erroneous responses regardless of type.",
          "key": "retryAllErrors",
          "type": "boolean",
          "default": "false",
          "label": "Retry On All Errors"
        },
        {
          "placeholder": "Max Retries",
          "required": false,
          "comments": "The maximum number of retries to attempt.",
          "key": "maxRetries",
          "type": "string",
          "default": "0",
          "label": "Max Retry Count"
        },
        {
          "required": false,
          "comments": "Specifies whether to use a pre-defined exponential backoff strategy for retries.",
          "key": "useExponentialBackoff",
          "type": "boolean",
          "default": "false",
          "label": "Use Exponential Backoff"
        }
      ]
    },
    "describeCompany": {
      "display": {
        "label": "Describe Company",
        "description": "Returns metadata about companies and the fields available for interaction via the API."
      },
      "examplePayload": {
        "data": {
          "success": true,
          "requestId": "5847#14d44113ad7",
          "result": [
            {
              "name": "Company",
              "description": "Company object",
              "createdAt": "2015-05-11T17:11:32Z",
              "updatedAt": "2015-05-11T17:11:32Z",
              "idField": "id",
              "dedupeFields": [
                "externalCompanyId"
              ],
              "searchableFields": [
                [
                  "externalCompanyId"
                ],
                [
                  "id"
                ],
                [
                  "company"
                ]
              ],
              "fields": [
                {
                  "name": "createdAt",
                  "displayName": "Created At",
                  "dataType": "datetime",
                  "updateable": false
                },
                {
                  "name": "externalCompanyId",
                  "displayName": "External Company Id",
                  "dataType": "string",
                  "length": 100,
                  "updateable": false
                },
                {
                  "name": "id",
                  "displayName": "Id",
                  "dataType": "integer",
                  "updateable": false
                },
                {
                  "name": "updatedAt",
                  "displayName": "Updated At",
                  "dataType": "datetime",
                  "updateable": false
                },
                {
                  "name": "annualRevenue",
                  "displayName": "Annual Revenue",
                  "dataType": "currency",
                  "updateable": true
                },
                {
                  "name": "company",
                  "displayName": "Company Name",
                  "dataType": "string",
                  "length": 255,
                  "updateable": true
                }
              ]
            }
          ]
        }
      },
      "key": "describeCompany",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "getCompaniesByFilter": {
      "display": {
        "label": "Get Companies By Filter",
        "description": "Retrieves company records from the destination instance based on the submitted filter."
      },
      "examplePayload": {
        "data": {
          "requestId": "e42b#14272d07d78",
          "success": true,
          "result": [
            {
              "seq": 0,
              "id": 3433,
              "externalCompanyId": "19UYA31581L000000",
              "company": "Google"
            },
            {
              "seq": 1,
              "id": 5345,
              "externalCompanyId": "29UYA31581L000000",
              "company": "Yahoo"
            }
          ]
        }
      },
      "key": "getCompaniesByFilter",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "The field to filter on",
          "key": "filterType",
          "type": "string",
          "default": "",
          "label": "Filter Type"
        },
        {
          "required": true,
          "comments": "A list of values to filter on for the specified field",
          "key": "filterValues",
          "type": "string",
          "default": "",
          "collection": "valuelist",
          "label": "Filter Values"
        },
        {
          "required": false,
          "comments": "List of field names to include",
          "key": "fields",
          "type": "string",
          "default": "",
          "collection": "valuelist",
          "label": "Fields"
        },
        {
          "required": false,
          "comments": "The batch size to return",
          "key": "batchSize",
          "type": "string",
          "default": "",
          "label": "Batch Size"
        },
        {
          "required": false,
          "comments": "A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter",
          "key": "nextPageToken",
          "type": "string",
          "default": "",
          "label": "Next Page Token"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "syncCompanies": {
      "display": {
        "label": "Sync Companies (Create, Update, Upsert)",
        "description": "Allows inserting, updating, or upserting of company records into Marketo."
      },
      "examplePayload": {
        "data": {
          "requestId": "e42b#14272d07d78",
          "success": true,
          "result": [
            {
              "seq": 0,
              "status": "updated",
              "id": 1232
            },
            {
              "seq": 1,
              "status": "created",
              "id": 1323
            }
          ]
        }
      },
      "key": "syncCompanies",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "Action",
          "required": true,
          "model": [
            {
              "label": "Create or Update",
              "value": "createOrUpdate"
            },
            {
              "label": "Create Only",
              "value": "createOnly"
            },
            {
              "label": "Update Only",
              "value": "updateOnly"
            }
          ],
          "comments": "Type of sync operation to perform",
          "key": "action",
          "type": "string",
          "default": "createOrUpdate",
          "label": "Action"
        },
        {
          "required": true,
          "comments": "An array of Company objects to use as input for synchronization.",
          "key": "companies",
          "type": "data",
          "default": "",
          "label": "Companies"
        },
        {
          "required": false,
          "comments": "Field to deduplicate on. If the value in the field for a given record is not unique, an error will be returned for the individual record.",
          "key": "dedupeBy",
          "type": "string",
          "default": "dedupeFields",
          "label": "Dedupe Field"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "deleteCompanies": {
      "display": {
        "label": "Delete Companies",
        "description": "Delete one or more Companies."
      },
      "examplePayload": {
        "data": {
          "requestId": "e42b#14272d07d78",
          "success": true,
          "result": [
            {
              "seq": 0,
              "id": 1234,
              "status": "deleted"
            },
            {
              "seq": 1,
              "id": 56456,
              "status": "deleted"
            },
            {
              "seq": 2,
              "status": "skipped",
              "reasons": [
                {
                  "code": "1013",
                  "message": "Record not found"
                }
              ]
            }
          ]
        }
      },
      "key": "deleteCompanies",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "Delete By",
          "required": true,
          "model": [
            {
              "label": "Dedupe Fields",
              "value": "dedupeFields"
            },
            {
              "label": "idField",
              "value": "idField"
            }
          ],
          "comments": "The type of deletion method",
          "key": "deleteBy",
          "type": "string",
          "default": "dedupeFields",
          "label": "Delete By"
        },
        {
          "required": true,
          "comments": "An array of objects that specify the id->value mapping for objects to delete.",
          "key": "ids",
          "type": "data",
          "default": "",
          "label": "Ids"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "listCustomObjects": {
      "display": {
        "label": "List Custom Objects",
        "description": "Returns a list of Custom Object types available in the target instance, along with id and deduplication information for each type."
      },
      "examplePayload": {
        "data": {
          "requestId": "185d6#14b51985ff0",
          "success": true,
          "result": [
            {
              "name": "Car",
              "displayName": "Car",
              "description": "Car owner",
              "createdAt": "2015-02-03T22:36:23Z",
              "updatedAt": "2015-02-03T22:36:24Z",
              "idField": "marketoGUID",
              "dedupeFields": [
                "vin"
              ],
              "searchableFields": [
                [
                  "vin"
                ],
                [
                  "marketoGUID"
                ],
                [
                  "siebelId"
                ]
              ],
              "relationships": [
                {
                  "field": "siebelId",
                  "type": "parent",
                  "relatedTo": {
                    "name": "Lead",
                    "field": "siebelId"
                  }
                }
              ]
            }
          ]
        }
      },
      "key": "listCustomObjects",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "describeCustomObject": {
      "display": {
        "label": "Describe Custom Object",
        "description": "Returns metadata regarding a given custom object."
      },
      "examplePayload": {
        "data": {
          "requestId": "185d6#14b51985ff0",
          "success": true,
          "result": [
            {
              "name": "Car",
              "displayName": "Car",
              "description": "Car owner",
              "createdAt": "2015-02-03T22:36:23Z",
              "updatedAt": "2015-02-03T22:36:24Z",
              "idField": "marketoGUID",
              "dedupeFields": [
                "vin"
              ],
              "searchableFields": [
                [
                  "vin"
                ],
                [
                  "marketoGUID"
                ],
                [
                  "siebelId"
                ]
              ],
              "relationships": [
                {
                  "field": "siebelId",
                  "type": "parent",
                  "object": {
                    "name": "Lead",
                    "field": "siebelId"
                  }
                }
              ],
              "fields": [
                {
                  "name": "marketoGUID",
                  "displayName": "Marketo GUID",
                  "dataType": "string",
                  "length": 36,
                  "updateable": false
                },
                {
                  "name": "createdAt",
                  "displayName": "Created At",
                  "dataType": "datetime",
                  "updateable": false
                },
                {
                  "name": "updatedAt",
                  "displayName": "Updated At",
                  "dataType": "datetime",
                  "updateable": false
                },
                {
                  "name": "vin",
                  "displayName": "VIN",
                  "description": "Vehicle Identification Number",
                  "dataType": "string",
                  "length": 36,
                  "updateable": false
                },
                {
                  "name": "siebelId",
                  "displayName": "External Id",
                  "description": "External Id",
                  "dataType": "string",
                  "length": 36,
                  "updateable": true
                },
                {
                  "name": "make",
                  "displayName": "Make",
                  "dataType": "string",
                  "length": 36,
                  "updateable": true
                },
                {
                  "name": "model",
                  "displayName": "Model",
                  "description": "Vehicle Model",
                  "dataType": "string",
                  "length": 255,
                  "updateable": true
                },
                {
                  "name": "year",
                  "displayName": "Year",
                  "dataType": "integer",
                  "updateable": true
                },
                {
                  "name": "color",
                  "displayName": "Color",
                  "description": "Vehicle color",
                  "dataType": "String",
                  "length": 255,
                  "updateable": true
                }
              ]
            }
          ]
        }
      },
      "key": "describeCustomObject",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "The name of the Custom Object",
          "key": "customObjectName",
          "type": "string",
          "default": "",
          "label": "Custom Object Name"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "getCustomObjectsByFilter": {
      "display": {
        "label": "Get Custom Objects By Filter",
        "description": "Retrieves a list of custom objects records based on filter and set of values."
      },
      "examplePayload": {
        "data": {
          "requestId": "12951#15699db5c97",
          "result": [
            {
              "id": 318581,
              "updatedAt": "2016-05-17T22:11:45Z",
              "lastName": "Lincoln",
              "email": "abe@usa.gov",
              "createdAt": "2015-03-17T00:18:40Z",
              "firstName": "Abraham"
            },
            {
              "id": 318592,
              "updatedAt": "2016-05-17T22:20:51Z",
              "lastName": "Washington",
              "email": "george@usa.gov",
              "createdAt": "2015-04-06T16:29:21Z",
              "firstName": "George"
            }
          ],
          "success": true
        }
      },
      "key": "getCustomObjectsByFilter",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "The name of the Custom Object",
          "key": "customObjectName",
          "type": "string",
          "default": "",
          "label": "Custom Object Name"
        },
        {
          "required": true,
          "comments": "The field to filter on",
          "key": "filterType",
          "type": "string",
          "default": "",
          "label": "Filter Type"
        },
        {
          "required": true,
          "comments": "A list of values to filter on for the specified field",
          "key": "filterValues",
          "type": "string",
          "default": "",
          "collection": "valuelist",
          "label": "Filter Values"
        },
        {
          "required": false,
          "comments": "List of field names to include",
          "key": "fields",
          "type": "string",
          "default": "",
          "collection": "valuelist",
          "label": "Fields"
        },
        {
          "required": false,
          "comments": "The batch size to return",
          "key": "batchSize",
          "type": "string",
          "default": "",
          "label": "Batch Size"
        },
        {
          "required": false,
          "comments": "A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter",
          "key": "nextPageToken",
          "type": "string",
          "default": "",
          "label": "Next Page Token"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "syncCustomObjects": {
      "display": {
        "label": "Sync Custom Objects (Create, Update, Upsert)",
        "description": "Inserts, updates, or upserts custom object records to the target instance."
      },
      "examplePayload": {
        "data": {
          "requestId": "e42b#14272d07d78",
          "success": true,
          "result": [
            {
              "seq": 0,
              "status": "updated",
              "marketoGUID": "dff23271-f996-47d7-984f-f2676861b5fb"
            },
            {
              "seq": 1,
              "status": "created",
              "marketoGUID": "cff23271-f996-47d7-984f-f2676861b5fb"
            },
            {
              "seq": 2,
              "status": "skipped",
              "reasons": [
                {
                  "code": "1004",
                  "message": "Lead not found"
                }
              ]
            }
          ]
        }
      },
      "key": "syncCustomObjects",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "The name of the Custom Object",
          "key": "customObjectName",
          "type": "string",
          "default": "",
          "label": "Custom Object Name"
        },
        {
          "placeholder": "Action",
          "required": true,
          "model": [
            {
              "label": "Create or Update",
              "value": "createOrUpdate"
            },
            {
              "label": "Create Only",
              "value": "createOnly"
            },
            {
              "label": "Update Only",
              "value": "updateOnly"
            }
          ],
          "comments": "Type of sync operation to perform",
          "key": "action",
          "type": "string",
          "default": "createOrUpdate",
          "label": "Action"
        },
        {
          "required": true,
          "comments": "An array of Custom Objects to use as input for synchronization.",
          "key": "customObjects",
          "type": "data",
          "default": "",
          "label": "Custom Objects"
        },
        {
          "required": false,
          "comments": "Field to deduplicate on. If the value in the field for a given record is not unique, an error will be returned for the individual record.",
          "key": "dedupeBy",
          "type": "string",
          "default": "dedupeFields",
          "label": "Dedupe Field"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "deleteCustomObjects": {
      "display": {
        "label": "Delete Custom Objects",
        "description": "Delete one or more Custom Objects."
      },
      "examplePayload": {
        "data": {
          "requestId": "e42b#14272d07d78",
          "success": true,
          "result": [
            {
              "seq": 0,
              "marketoGUID": "dff23271-f996-47d7-984f-f2676861b5fb",
              "status": "deleted"
            },
            {
              "seq": 1,
              "marketoGUID": "da42707c-4dc4-4fc1-9fef-f30a3017240a",
              "status": "deleted"
            },
            {
              "seq": 2,
              "status": "skipped",
              "reasons": [
                {
                  "code": "1013",
                  "message": "Object not found"
                }
              ]
            }
          ]
        }
      },
      "key": "deleteCustomObjects",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "The name of the Custom Object",
          "key": "customObjectName",
          "type": "string",
          "default": "",
          "label": "Custom Object Name"
        },
        {
          "placeholder": "Delete By",
          "required": true,
          "model": [
            {
              "label": "Dedupe Fields",
              "value": "dedupeFields"
            },
            {
              "label": "idField",
              "value": "idField"
            }
          ],
          "comments": "The type of deletion method",
          "key": "deleteBy",
          "type": "string",
          "default": "dedupeFields",
          "label": "Delete By"
        },
        {
          "required": true,
          "comments": "An array of objects that specify the id->value mapping for objects to delete.",
          "key": "ids",
          "type": "data",
          "default": "",
          "label": "Ids"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "describeLead": {
      "display": {
        "label": "Describe Lead",
        "description": "Returns metadata about lead objects in the target instance, including a list of all fields available for interaction via the APIs."
      },
      "examplePayload": {
        "data": {
          "requestId": "37ca#1475b74e276",
          "success": true,
          "result": [
            {
              "id": 2,
              "displayName": "Company Name",
              "dataType": "string",
              "length": 255,
              "rest": {
                "name": "company",
                "readOnly": false
              },
              "soap": {
                "name": "Company",
                "readOnly": false
              }
            }
          ]
        }
      },
      "key": "describeLead",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "getSearchableLeadFields": {
      "display": {
        "label": "Get Searchable Lead Fields",
        "description": "Returns list of searchable fields on lead objects in the target instance."
      },
      "examplePayload": {
        "data": {
          "requestId": "string",
          "result": [
            {
              "name": "string",
              "searchableFields": [
                [
                  "string"
                ]
              ],
              "fields": [
                {
                  "name": "string",
                  "displayName": "string",
                  "dataType": "string",
                  "length": 0,
                  "updateable": true,
                  "crmManaged": true
                }
              ]
            }
          ]
        }
      },
      "key": "getSearchableLeadFields",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "getLeadById": {
      "display": {
        "label": "Get Lead By Id",
        "description": "Retrieves a single lead record through its Marketo id."
      },
      "examplePayload": {
        "data": {
          "requestId": "10226#14d3049e51b",
          "success": true,
          "result": [
            {
              "id": 318581,
              "updatedAt": "2015-05-07T11:47:30-08:00",
              "lastName": "Doe",
              "email": "jdoe@marketo.com",
              "createdAt": "2015-05-01T16:47:30-08:00",
              "firstName": "John"
            }
          ]
        }
      },
      "key": "getLeadById",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "The Marketo lead id",
          "key": "leadId",
          "type": "string",
          "default": "",
          "label": "Lead Id"
        },
        {
          "required": false,
          "comments": "List of field names to include",
          "key": "fields",
          "type": "string",
          "default": "",
          "collection": "valuelist",
          "label": "Fields"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "getLeadsByFilter": {
      "display": {
        "label": "Get Leads By Filter",
        "description": "Returns a list of up to 300 leads based on a list of values in a particular field."
      },
      "examplePayload": {
        "data": {
          "requestId": "12951#15699db5c97",
          "result": [
            {
              "id": 318581,
              "updatedAt": "2016-05-17T22:11:45Z",
              "lastName": "Lincoln",
              "email": "abe@usa.gov",
              "createdAt": "2015-03-17T00:18:40Z",
              "firstName": "Abraham"
            },
            {
              "id": 318592,
              "updatedAt": "2016-05-17T22:20:51Z",
              "lastName": "Washington",
              "email": "george@usa.gov",
              "createdAt": "2015-04-06T16:29:21Z",
              "firstName": "George"
            }
          ],
          "success": true
        }
      },
      "key": "getLeadsByFilter",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "The field to filter on",
          "key": "filterType",
          "type": "string",
          "default": "",
          "label": "Filter Type"
        },
        {
          "required": true,
          "comments": "A list of values to filter on for the specified field",
          "key": "filterValues",
          "type": "string",
          "default": "",
          "collection": "valuelist",
          "label": "Filter Values"
        },
        {
          "required": false,
          "comments": "List of field names to include",
          "key": "fields",
          "type": "string",
          "default": "",
          "collection": "valuelist",
          "label": "Fields"
        },
        {
          "required": false,
          "comments": "The batch size to return",
          "key": "batchSize",
          "type": "string",
          "default": "",
          "label": "Batch Size"
        },
        {
          "required": false,
          "comments": "A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter",
          "key": "nextPageToken",
          "type": "string",
          "default": "",
          "label": "Next Page Token"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "syncLeads": {
      "display": {
        "label": "Sync Leads (Create, Update, Upsert)",
        "description": "Syncs a list of leads to the target instance."
      },
      "examplePayload": {
        "data": {
          "requestId": "e42b#14272d07d78",
          "success": true,
          "result": [
            {
              "id": 50,
              "status": "created"
            },
            {
              "id": 51,
              "status": "created"
            },
            {
              "id": 52,
              "status": "created"
            }
          ]
        }
      },
      "key": "syncLeads",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "Action",
          "required": true,
          "model": [
            {
              "label": "Create or Update",
              "value": "createOrUpdate"
            },
            {
              "label": "Create Only",
              "value": "createOnly"
            },
            {
              "label": "Update Only",
              "value": "updateOnly"
            },
            {
              "label": "Create Duplicates",
              "value": "createDuplicate"
            }
          ],
          "comments": "Type of sync operation to perform",
          "key": "action",
          "type": "string",
          "default": "createOrUpdate",
          "label": "Action"
        },
        {
          "required": false,
          "comments": "If set to true, the call will return immediately",
          "key": "asyncProcessing",
          "type": "boolean",
          "default": "false",
          "label": "Async Processing"
        },
        {
          "required": true,
          "comments": "An array of Lead objects to use as input for synchronization.",
          "key": "leads",
          "type": "data",
          "default": "",
          "label": "Leads"
        },
        {
          "required": false,
          "comments": "Field to deduplicate on. The field must be present in each lead record of the input. Defaults to email if unset.",
          "key": "lookupField",
          "type": "string",
          "default": "email",
          "label": "Lookup Field"
        },
        {
          "required": false,
          "comments": "Name of the partition to operate on, if applicable. Should be set whenever possible, when interacting with an instance where partitions are enabled.",
          "key": "partitionName",
          "type": "string",
          "default": "",
          "label": "Partition Name"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "deleteLeads": {
      "display": {
        "label": "Delete Leads",
        "description": "Delete one or more Leads by their Marketo id."
      },
      "examplePayload": {
        "data": {
          "requestId": "3608#16664333670",
          "result": [
            {
              "id": 235,
              "status": "deleted"
            },
            {
              "id": 766,
              "status": "deleted"
            }
          ],
          "success": true
        }
      },
      "key": "deleteLeads",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "The Marketo id(s) of the record(s) to delete.",
          "key": "ids",
          "type": "string",
          "default": "",
          "collection": "valuelist",
          "label": "Ids"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "describeNamedAccount": {
      "display": {
        "label": "Describe Named Account",
        "description": "Returns metadata about Named Accounts and the fields available for interaction via the API."
      },
      "examplePayload": {
        "data": {
          "requestId": "d65e#156c27ac57d",
          "result": [
            {
              "name": "Named Account",
              "description": "Marketo standard account attribute map",
              "createdAt": "2016-08-18T20:16:41Z",
              "updatedAt": "2016-08-18T20:16:41Z",
              "idField": "marketoGUID",
              "dedupeFields": [
                "name"
              ],
              "searchableFields": [
                [
                  "marketoGUID"
                ],
                [
                  "annualRevenue"
                ],
                [
                  "city"
                ],
                [
                  "country"
                ],
                [
                  "domainName"
                ],
                [
                  "industry"
                ],
                [
                  "logoUrl"
                ],
                [
                  "membershipCount"
                ],
                [
                  "name"
                ],
                [
                  "numberOfEmployees"
                ],
                [
                  "opptyAmount"
                ],
                [
                  "opptyCount"
                ],
                [
                  "score1"
                ],
                [
                  "score2"
                ],
                [
                  "score3"
                ],
                [
                  "score4"
                ],
                [
                  "score5"
                ],
                [
                  "sicCode"
                ],
                [
                  "state"
                ]
              ],
              "fields": [
                {
                  "name": "marketoGUID",
                  "displayName": "Marketo GUID",
                  "dataType": "string",
                  "length": 36,
                  "updateable": false
                },
                {
                  "name": "annualRevenue",
                  "displayName": "annualRevenue",
                  "dataType": "currency",
                  "updateable": true
                },
                {
                  "name": "city",
                  "displayName": "city",
                  "dataType": "string",
                  "length": 255,
                  "updateable": true
                },
                {
                  "name": "country",
                  "displayName": "country",
                  "dataType": "string",
                  "length": 255,
                  "updateable": true
                }
              ]
            }
          ],
          "success": true
        }
      },
      "key": "describeNamedAccount",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "getNamedAccountsByFilter": {
      "display": {
        "label": "Get Named Accounts By Filter",
        "description": "Retrieves Named Account records from the destination instance based on the submitted filter."
      },
      "examplePayload": {
        "data": {
          "requestId": "6dac#157d4ddc9d7",
          "result": [
            {
              "seq": 0,
              "marketoGUID": "16efafdd-0148-4ea7-8782-f451d7c6345d",
              "createdAt": "2016-10-17T22:49:04Z",
              "name": "Google",
              "updatedAt": "2016-10-17T22:49:04Z"
            },
            {
              "seq": 1,
              "marketoGUID": "44d62353-7f9d-4d43-b9cc-7ef0f7a09137",
              "createdAt": "2016-10-17T22:49:04Z",
              "name": "Yahoo",
              "updatedAt": "2016-10-17T22:49:04Z"
            }
          ],
          "success": true
        }
      },
      "key": "getNamedAccountsByFilter",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "The field to filter on",
          "key": "filterType",
          "type": "string",
          "default": "",
          "label": "Filter Type"
        },
        {
          "required": true,
          "comments": "A list of values to filter on for the specified field",
          "key": "filterValues",
          "type": "string",
          "default": "",
          "collection": "valuelist",
          "label": "Filter Values"
        },
        {
          "required": false,
          "comments": "List of field names to include",
          "key": "fields",
          "type": "string",
          "default": "",
          "collection": "valuelist",
          "label": "Fields"
        },
        {
          "required": false,
          "comments": "The batch size to return",
          "key": "batchSize",
          "type": "string",
          "default": "",
          "label": "Batch Size"
        },
        {
          "required": false,
          "comments": "A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter",
          "key": "nextPageToken",
          "type": "string",
          "default": "",
          "label": "Next Page Token"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "syncNamedAccounts": {
      "display": {
        "label": "Sync Named Accounts (Create, Update, Upsert)",
        "description": "Allows inserts, updates, or upserts of Named Accounts to the target instance."
      },
      "examplePayload": {
        "data": {
          "requestId": "e42b#14272d07d78",
          "success": true,
          "result": [
            {
              "seq": 0,
              "status": "updated",
              "marketoGUID": "dff23271-f996-47d7-984f-f2676861b5fb"
            },
            {
              "seq": 1,
              "status": "created",
              "marketoGUID": "dff23271-f996-47d7-984f-f2676861b5fc"
            }
          ]
        }
      },
      "key": "syncNamedAccounts",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "Action",
          "required": true,
          "model": [
            {
              "label": "Create or Update",
              "value": "createOrUpdate"
            },
            {
              "label": "Create Only",
              "value": "createOnly"
            },
            {
              "label": "Update Only",
              "value": "updateOnly"
            }
          ],
          "comments": "Type of sync operation to perform",
          "key": "action",
          "type": "string",
          "default": "createOrUpdate",
          "label": "Action"
        },
        {
          "required": true,
          "comments": "An array of Named Account objects to use as input for synchronization.",
          "key": "namedAccounts",
          "type": "data",
          "default": "",
          "label": "Named Accounts"
        },
        {
          "required": false,
          "comments": "Field to deduplicate on. If the value in the field for a given record is not unique, an error will be returned for the individual record.",
          "key": "dedupeBy",
          "type": "string",
          "default": "dedupeFields",
          "label": "Dedupe Field"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "deleteNamedAccounts": {
      "display": {
        "label": "Delete Named Accounts",
        "description": "Delete one or more Named Accounts."
      },
      "examplePayload": {
        "data": {
          "requestId": "e42b#14272d07d78",
          "success": true,
          "result": [
            {
              "seq": 0,
              "marketoGUID": "dff23271-f996-47d7-984f-f2676861b5fb",
              "status": "deleted"
            },
            {
              "seq": 1,
              "id": "dff23271-f996-47d7-984f-f2676861b5fc",
              "status": "deleted"
            },
            {
              "seq": 2,
              "status": "skipped",
              "reasons": [
                {
                  "code": "1013",
                  "message": "Record not found"
                }
              ]
            }
          ]
        }
      },
      "key": "deleteNamedAccounts",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "Delete By",
          "required": true,
          "model": [
            {
              "label": "Dedupe Fields",
              "value": "dedupeFields"
            },
            {
              "label": "idField",
              "value": "idField"
            }
          ],
          "comments": "The type of deletion method",
          "key": "deleteBy",
          "type": "string",
          "default": "dedupeFields",
          "label": "Delete By"
        },
        {
          "required": true,
          "comments": "An array of objects that specify the id->value mapping for objects to delete.",
          "key": "ids",
          "type": "data",
          "default": "",
          "label": "Ids"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "describeOpportunities": {
      "display": {
        "label": "Describe Opportunities",
        "description": "Returns metadata about Opportunities and the fields available for interaction via the API."
      },
      "examplePayload": {
        "data": {
          "requestId": "185d6#14b51985ff0",
          "success": true,
          "result": [
            {
              "name": "opportunity",
              "displayName": "Opportunity",
              "createdAt": "2015-02-03T22:36:23Z",
              "updatedAt": "2015-02-03T22:36:24Z",
              "idField": "marketoGUID",
              "dedupeFields": [
                "externalOpportunityId"
              ],
              "searchableFields": [
                [
                  "externalOpportunityId"
                ],
                [
                  "marketoGUID"
                ]
              ],
              "fields": [
                {
                  "name": "marketoGUID",
                  "displayName": "Marketo GUID",
                  "dataType": "string",
                  "length": 36,
                  "updateable": false
                },
                {
                  "name": "createdAt",
                  "displayName": "Created At",
                  "dataType": "datetime",
                  "updateable": false
                },
                {
                  "name": "updatedAt",
                  "displayName": "Updated At",
                  "dataType": "datetime",
                  "updateable": false
                },
                {
                  "name": "externalOpportunityId",
                  "displayName": "External Opportunity Id",
                  "dataType": "string",
                  "length": 50,
                  "updateable": false
                }
              ]
            }
          ]
        }
      },
      "key": "describeOpportunities",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "getOpportunitiesByFilter": {
      "display": {
        "label": "Get Opportunities By Filter",
        "description": "Retrieves Opportunity records from the destination instance based on the submitted filter."
      },
      "examplePayload": {
        "data": {
          "requestId": "e42b#14272d07d78",
          "success": true,
          "result": [
            {
              "seq": 0,
              "marketoGUID": "dff23271-f996-47d7-984f-f2676861b5fa ",
              "externalOpportunityId": "19UYA31581L000000",
              "name": "Chairs",
              "description": "Chairs",
              "amount": "1604.47",
              "source": "Inbound Sales Call/Email"
            },
            {
              "seq": 1,
              "marketoGUID": "dff23271-f996-47d7-984f-f2676861b5fc ",
              "externalOpportunityId": "29UYA31581L000000",
              "name": "Big Dog Day Care-Phase12",
              "description": "Big Dog Day Care-Phase12",
              "amount": "1604.47",
              "source": "Email"
            }
          ]
        }
      },
      "key": "getOpportunitiesByFilter",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "The field to filter on",
          "key": "filterType",
          "type": "string",
          "default": "",
          "label": "Filter Type"
        },
        {
          "required": true,
          "comments": "A list of values to filter on for the specified field",
          "key": "filterValues",
          "type": "string",
          "default": "",
          "collection": "valuelist",
          "label": "Filter Values"
        },
        {
          "required": false,
          "comments": "List of field names to include",
          "key": "fields",
          "type": "string",
          "default": "",
          "collection": "valuelist",
          "label": "Fields"
        },
        {
          "required": false,
          "comments": "The batch size to return",
          "key": "batchSize",
          "type": "string",
          "default": "",
          "label": "Batch Size"
        },
        {
          "required": false,
          "comments": "A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter",
          "key": "nextPageToken",
          "type": "string",
          "default": "",
          "label": "Next Page Token"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "syncOpportunities": {
      "display": {
        "label": "Sync Opportunities (Create, Update, Upsert)",
        "description": "Allows inserts, updates, or upserts of Opportunities to the target instance."
      },
      "examplePayload": {
        "data": {
          "requestId": "e42b#14272d07d78",
          "success": true,
          "result": [
            {
              "seq": 0,
              "status": "updated",
              "marketoGUID": "dff23271-f996-47d7-984f-f2676861b5fb"
            },
            {
              "seq": 1,
              "status": "created",
              "marketoGUID": "cff23271-f996-47d7-984f-f2676861b5fb"
            }
          ]
        }
      },
      "key": "syncOpportunities",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "Action",
          "required": true,
          "model": [
            {
              "label": "Create or Update",
              "value": "createOrUpdate"
            },
            {
              "label": "Create Only",
              "value": "createOnly"
            },
            {
              "label": "Update Only",
              "value": "updateOnly"
            }
          ],
          "comments": "Type of sync operation to perform",
          "key": "action",
          "type": "string",
          "default": "createOrUpdate",
          "label": "Action"
        },
        {
          "required": true,
          "comments": "An array of Opportunities objects to use as input for synchronization.",
          "key": "opportunities",
          "type": "data",
          "default": "",
          "label": "Opportunities"
        },
        {
          "required": false,
          "comments": "Field to deduplicate on. If the value in the field for a given record is not unique, an error will be returned for the individual record.",
          "key": "dedupeBy",
          "type": "string",
          "default": "dedupeFields",
          "label": "Dedupe Field"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "deleteOpportunities": {
      "display": {
        "label": "Delete Opportunities",
        "description": "Delete one or more Opportunities."
      },
      "examplePayload": {
        "data": {
          "requestId": "e42b#14272d07d78",
          "success": true,
          "result": [
            {
              "seq": 0,
              "marketoGUID": "dff23271-f996-47d7-984f-f2676861b5fb",
              "status": "deleted"
            },
            {
              "seq": 1,
              "marketoGUID": "cff23271-f996-47d7-984f-f2676861b5fb",
              "status": "deleted"
            }
          ]
        }
      },
      "key": "deleteOpportunities",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "Delete By",
          "required": true,
          "model": [
            {
              "label": "Dedupe Fields",
              "value": "dedupeFields"
            },
            {
              "label": "idField",
              "value": "idField"
            }
          ],
          "comments": "The type of deletion method",
          "key": "deleteBy",
          "type": "string",
          "default": "dedupeFields",
          "label": "Delete By"
        },
        {
          "required": true,
          "comments": "An array of objects that specify the id->value mapping for objects to delete.",
          "key": "ids",
          "type": "data",
          "default": "",
          "label": "Ids"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "describeSalesPerson": {
      "display": {
        "label": "Describe Sales Person",
        "description": "Returns metadata about Sales Persons and the fields available for interaction via the API."
      },
      "examplePayload": {
        "data": {
          "requestId": "185d6#14b51985ff0",
          "success": true,
          "result": [
            {
              "name": "SalesPerson",
              "createdAt": "2015-02-03T22:36:23Z",
              "updatedAt": "2015-02-03T22:36:24Z",
              "idField": "id",
              "dedupeFields": [
                "externalSalesPersonId"
              ],
              "searchableFields": [
                [
                  "email"
                ],
                [
                  "id"
                ],
                [
                  "externalSalesPersonId"
                ]
              ],
              "fields": [
                {
                  "name": "id",
                  "displayName": "Marketo Id",
                  "dataType": "integer",
                  "updateable": false
                },
                {
                  "name": "createdAt",
                  "displayName": "Created At",
                  "dataType": "datetime",
                  "updateable": false
                },
                {
                  "name": "updatedAt",
                  "displayName": "Updated At",
                  "dataType": "datetime",
                  "updateable": false
                },
                {
                  "name": "email",
                  "displayName": "Email",
                  "dataType": "string",
                  "length": 255,
                  "updateable": false
                },
                {
                  "name": "externalSalesPersonId",
                  "displayName": "External Sales Person Id",
                  "dataType": "string",
                  "length": 255,
                  "updateable": false
                }
              ]
            }
          ]
        }
      },
      "key": "describeSalesPerson",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "getSalesPersonsByFilter": {
      "display": {
        "label": "Get Sales Persons By Filter",
        "description": "Retrieves Sales Person records from the destination instance based on the submitted filter."
      },
      "examplePayload": {
        "data": {
          "requestId": "e42b#14272d07d78",
          "success": true,
          "result": [
            {
              "seq": 0,
              "id": 53453,
              "externalSalesPersonId": "sam@test.com",
              "createdAt": "2015-02-03T22:36:23Z",
              "updatedAt": "2015-02-03T22:36:23Z"
            },
            {
              "seq": 1,
              "id": 53454,
              "externalSalesPersonId": "david@test.com",
              "createdAt": "2015-02-03T22:36:23Z",
              "updatedAt": "2015-02-03T22:36:23Z"
            }
          ]
        }
      },
      "key": "getSalesPersonsByFilter",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "The field to filter on",
          "key": "filterType",
          "type": "string",
          "default": "",
          "label": "Filter Type"
        },
        {
          "required": true,
          "comments": "A list of values to filter on for the specified field",
          "key": "filterValues",
          "type": "string",
          "default": "",
          "collection": "valuelist",
          "label": "Filter Values"
        },
        {
          "required": false,
          "comments": "List of field names to include",
          "key": "fields",
          "type": "string",
          "default": "",
          "collection": "valuelist",
          "label": "Fields"
        },
        {
          "required": false,
          "comments": "The batch size to return",
          "key": "batchSize",
          "type": "string",
          "default": "",
          "label": "Batch Size"
        },
        {
          "required": false,
          "comments": "A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter",
          "key": "nextPageToken",
          "type": "string",
          "default": "",
          "label": "Next Page Token"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "syncSalesPersons": {
      "display": {
        "label": "Sync Sales Persons (Create, Update, Upsert)",
        "description": "Allows inserts, updates, or upserts of Sales Persons to the target instance."
      },
      "examplePayload": {
        "data": {
          "requestId": "e42b#14272d07d78",
          "success": true,
          "result": [
            {
              "seq": 0,
              "status": "updated",
              "id": 45232
            },
            {
              "seq": 1,
              "status": "created",
              "id": 45236
            }
          ]
        }
      },
      "key": "syncSalesPersons",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "Action",
          "required": true,
          "model": [
            {
              "label": "Create or Update",
              "value": "createOrUpdate"
            },
            {
              "label": "Create Only",
              "value": "createOnly"
            },
            {
              "label": "Update Only",
              "value": "updateOnly"
            }
          ],
          "comments": "Type of sync operation to perform",
          "key": "action",
          "type": "string",
          "default": "createOrUpdate",
          "label": "Action"
        },
        {
          "required": true,
          "comments": "An array of Sales Person objects to use as input for synchronization.",
          "key": "salesPersons",
          "type": "data",
          "default": "",
          "label": "Sales Persons"
        },
        {
          "required": false,
          "comments": "Field to deduplicate on. If the value in the field for a given record is not unique, an error will be returned for the individual record.",
          "key": "dedupeBy",
          "type": "string",
          "default": "dedupeFields",
          "label": "Dedupe Field"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    },
    "deleteSalesPersons": {
      "display": {
        "label": "Delete Sales Persons",
        "description": "Delete one or more Sales Persons."
      },
      "examplePayload": {
        "data": {
          "requestId": "e42b#14272d07d78",
          "success": true,
          "result": [
            {
              "seq": 0,
              "id": 56343,
              "status": "deleted"
            },
            {
              "seq": 1,
              "id": 53453,
              "status": "deleted"
            },
            {
              "seq": 2,
              "status": "skipped",
              "reasons": [
                {
                  "code": "1013",
                  "message": "Record not found"
                }
              ]
            }
          ]
        }
      },
      "key": "deleteSalesPersons",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "Delete By",
          "required": true,
          "model": [
            {
              "label": "Dedupe Fields",
              "value": "dedupeFields"
            },
            {
              "label": "idField",
              "value": "idField"
            }
          ],
          "comments": "The type of deletion method",
          "key": "deleteBy",
          "type": "string",
          "default": "dedupeFields",
          "label": "Delete By"
        },
        {
          "required": true,
          "comments": "An array of objects that specify the id->value mapping for objects to delete.",
          "key": "ids",
          "type": "data",
          "default": "",
          "label": "Ids"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        }
      ]
    }
  },
  "triggers": {},
  "dataSources": {},
  "documentation": {
    "description": "[Adobe Marketo](https://www.marketo.com/) allows you to leverage rich behavioral data, built-in intelligence, and sophisticated journey flows to identify, engage, and accelerate your best opportunities to orchestrate your buyer's journeys.\n",
    "dev": "The Marketo API does have fairly restrictive rate limits, so care must be taken to stay under those limits. Please see the [Best Practices Documentation](https://developers.marketo.com/rest-api/marketo-integration-best-practices/) for more information on rate limits.\n"
  },
  "$version": 1
}
