{
  "key": "stripe",
  "public": true,
  "documentationUrl": "https://prismatic.io/docs/components/stripe/",
  "display": {
    "label": "Stripe",
    "description": "Manage objects connected to your Stripe platform",
    "iconPath": "icon.png",
    "category": "Application Connectors",
    "iconBase64": ""
  },
  "connections": [
    {
      "key": "apiKey",
      "label": "Stripe Connection",
      "comments": "Authenticate requests to Stripe using an API Key",
      "inputs": [
        {
          "placeholder": "API Key",
          "required": true,
          "shown": true,
          "comments": "Provide a string value for the API Key.",
          "key": "apiKey",
          "type": "string",
          "default": "",
          "label": "API Key"
        }
      ],
      "documentation": {
        "description": "The **Stripe** component uses API keys to authenticate requests. You can view and manage your API keys in the Stripe Dashboard. For information on obtaining an API key from Stripe, refer to the [docs](https://stripe.com/docs/api/authentication)\n"
      }
    }
  ],
  "actions": {
    "listAccounts": {
      "display": {
        "label": "List Accounts",
        "description": "Returns a list of accounts connected to your platform "
      },
      "key": "listAccounts",
      "inputs": [
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "comments": "Provide an integer value for the maximum amount of results that will be returned.",
          "required": false,
          "example": "100",
          "key": "limit",
          "type": "string",
          "default": "",
          "label": "Limit"
        },
        {
          "comments": "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required": false,
          "example": "obj903234",
          "key": "startingAfter",
          "type": "string",
          "default": "",
          "label": "Starting After"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "deleteCustomer": {
      "display": {
        "label": "Delete Customer",
        "description": "Permanently deletes a customer, Also immediately cancels any active subscriptions on the customer."
      },
      "examplePayload": {
        "data": {
          "id": "94304",
          "object": "customer",
          "deleted": true
        }
      },
      "key": "deleteCustomer",
      "inputs": [
        {
          "comments": "Provide a string value for unique identifier of the customer.",
          "required": false,
          "key": "customerId",
          "type": "string",
          "default": "",
          "label": "Customer Id"
        },
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "getCustomer": {
      "display": {
        "label": "Get Customer",
        "description": "Retrieve the information and metadata of a customer by Id"
      },
      "examplePayload": {
        "data": {
          "id": "94304",
          "object": "customer",
          "deleted": true
        }
      },
      "key": "getCustomer",
      "inputs": [
        {
          "comments": "Provide a string value for unique identifier of the customer.",
          "required": false,
          "key": "customerId",
          "type": "string",
          "default": "",
          "label": "Customer Id"
        },
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "listCustomers": {
      "display": {
        "label": "List Customers",
        "description": "Returns a list of customers"
      },
      "key": "listCustomers",
      "inputs": [
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "comments": "Provide an integer value for the maximum amount of results that will be returned.",
          "required": false,
          "example": "100",
          "key": "limit",
          "type": "string",
          "default": "",
          "label": "Limit"
        },
        {
          "comments": "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required": false,
          "example": "obj903234",
          "key": "startingAfter",
          "type": "string",
          "default": "",
          "label": "Starting After"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "createCustomer": {
      "display": {
        "label": "Create Customer",
        "description": "Create a new customer object"
      },
      "key": "createCustomer",
      "inputs": [
        {
          "comments": "provide a string value for the name of the customer.",
          "example": "John Doe",
          "required": false,
          "key": "customerName",
          "type": "string",
          "default": "",
          "label": "Name"
        },
        {
          "comments": "The maximum time a client will await a response.",
          "example": "18005554545",
          "required": false,
          "key": "customerPhone",
          "type": "string",
          "default": "",
          "label": "Phone"
        },
        {
          "comments": "Provide a string value for street address of the customer.",
          "example": "4, Privet Drive",
          "required": false,
          "key": "customerAddress1",
          "type": "string",
          "default": "",
          "label": "Address Line 1"
        },
        {
          "comments": "Provide a string value for street address of the customer.",
          "example": "suite 3",
          "required": false,
          "key": "customerAddress2",
          "type": "string",
          "default": "",
          "label": "Address Line 2"
        },
        {
          "comments": "Provide a string value for city of the customer.",
          "example": "Buffalo",
          "required": false,
          "key": "customerCity",
          "type": "string",
          "default": "",
          "label": "City"
        },
        {
          "comments": "Provide a string value for country of the customer.",
          "example": "United States",
          "required": false,
          "key": "customerCountry",
          "type": "string",
          "default": "",
          "label": "Country"
        },
        {
          "comments": "Provide a string value for postal code of the customer.",
          "example": "90410",
          "required": false,
          "key": "customerPostal",
          "type": "string",
          "default": "",
          "label": "Postal Code"
        },
        {
          "comments": "Provide a string value for state of the customer.",
          "example": "New York",
          "required": false,
          "key": "customerState",
          "type": "string",
          "default": "",
          "label": "State"
        },
        {
          "comments": "Provide a number value for balance of the customer.",
          "example": "5000",
          "required": false,
          "key": "customerBalance",
          "type": "string",
          "default": "",
          "label": "Balance"
        },
        {
          "comments": "Provide the unique identifier of the customer's default payment method.",
          "example": "pm_1JaiTbDtJQgcyrdS08EmyHHe",
          "required": false,
          "key": "customerPaymentId",
          "type": "string",
          "default": "",
          "label": "Default Payment Method Id"
        },
        {
          "example": "This is an example description.",
          "comments": "Provide a string value for description of the customer.",
          "required": false,
          "key": "customerDescription",
          "type": "string",
          "default": "",
          "label": "Description"
        },
        {
          "comments": "Provide a string value for email of the customer.",
          "example": "someone@example.com",
          "required": false,
          "key": "customerEmail",
          "type": "string",
          "default": "",
          "label": "Email"
        },
        {
          "comments": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "required": false,
          "key": "customerMetadata",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Metadata"
        },
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "updateCustomer": {
      "display": {
        "label": "Update Customer",
        "description": "Create a new customer object"
      },
      "key": "updateCustomer",
      "inputs": [
        {
          "comments": "Provide a string value for unique identifier of the customer.",
          "required": false,
          "key": "customerId",
          "type": "string",
          "default": "",
          "label": "Customer Id"
        },
        {
          "comments": "provide a string value for the name of the customer.",
          "example": "John Doe",
          "required": false,
          "key": "customerName",
          "type": "string",
          "default": "",
          "label": "Name"
        },
        {
          "comments": "The maximum time a client will await a response.",
          "example": "18005554545",
          "required": false,
          "key": "customerPhone",
          "type": "string",
          "default": "",
          "label": "Phone"
        },
        {
          "comments": "Provide a string value for street address of the customer.",
          "example": "4, Privet Drive",
          "required": false,
          "key": "customerAddress1",
          "type": "string",
          "default": "",
          "label": "Address Line 1"
        },
        {
          "comments": "Provide a string value for street address of the customer.",
          "example": "suite 3",
          "required": false,
          "key": "customerAddress2",
          "type": "string",
          "default": "",
          "label": "Address Line 2"
        },
        {
          "comments": "Provide a string value for city of the customer.",
          "example": "Buffalo",
          "required": false,
          "key": "customerCity",
          "type": "string",
          "default": "",
          "label": "City"
        },
        {
          "comments": "Provide a string value for country of the customer.",
          "example": "United States",
          "required": false,
          "key": "customerCountry",
          "type": "string",
          "default": "",
          "label": "Country"
        },
        {
          "comments": "Provide a string value for postal code of the customer.",
          "example": "90410",
          "required": false,
          "key": "customerPostal",
          "type": "string",
          "default": "",
          "label": "Postal Code"
        },
        {
          "comments": "Provide a string value for state of the customer.",
          "example": "New York",
          "required": false,
          "key": "customerState",
          "type": "string",
          "default": "",
          "label": "State"
        },
        {
          "comments": "Provide a number value for balance of the customer.",
          "example": "5000",
          "required": false,
          "key": "customerBalance",
          "type": "string",
          "default": "",
          "label": "Balance"
        },
        {
          "example": "This is an example description.",
          "comments": "Provide a string value for description of the customer.",
          "required": false,
          "key": "customerDescription",
          "type": "string",
          "default": "",
          "label": "Description"
        },
        {
          "comments": "Provide a string value for email of the customer.",
          "example": "someone@example.com",
          "required": false,
          "key": "customerEmail",
          "type": "string",
          "default": "",
          "label": "Email"
        },
        {
          "placeholder": "Values",
          "required": false,
          "comments": "The names of optional fields and their values to use when creating/updating a record. For example, if you have a custom configured field that is not represented as an input, here you are able to specify its key and assign it a value.",
          "key": "fieldValues",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Values"
        },
        {
          "comments": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "required": false,
          "key": "customerMetadata",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Metadata"
        },
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "getSubscription": {
      "display": {
        "label": "Get Subscriptions",
        "description": "Get the information and metadata of a subscription by Id"
      },
      "key": "getSubscription",
      "inputs": [
        {
          "comments": "Provide a string value for unique identifier of the subscription.",
          "required": false,
          "key": "subscriptionId",
          "type": "string",
          "default": "",
          "label": "Subscription Id"
        },
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "listSubscriptions": {
      "display": {
        "label": "List Subscriptions",
        "description": "Returns a list of subscriptions"
      },
      "key": "listSubscriptions",
      "inputs": [
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "comments": "Provide an integer value for the maximum amount of results that will be returned.",
          "required": false,
          "example": "100",
          "key": "limit",
          "type": "string",
          "default": "",
          "label": "Limit"
        },
        {
          "comments": "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required": false,
          "example": "obj903234",
          "key": "startingAfter",
          "type": "string",
          "default": "",
          "label": "Starting After"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "deleteSubscription": {
      "display": {
        "label": "Delete Subscription",
        "description": "Delete a subscription by Id"
      },
      "key": "deleteSubscription",
      "inputs": [
        {
          "comments": "Provide a string value for unique identifier of the subscription.",
          "required": false,
          "key": "subscriptionId",
          "type": "string",
          "default": "",
          "label": "Subscription Id"
        },
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "createSubscription": {
      "display": {
        "label": "Create Subscription",
        "description": "Create a new subscription"
      },
      "key": "createSubscription",
      "inputs": [
        {
          "comments": "Provide a string value for unique identifier of the customer.",
          "required": false,
          "key": "customerId",
          "type": "string",
          "default": "",
          "label": "Customer Id"
        },
        {
          "comments": "Provide a value for the unique identifier of the price.",
          "example": "price_1JaOXaDtJQgcyrdSRnsI9KW5",
          "required": true,
          "key": "priceId",
          "type": "string",
          "default": "",
          "label": "Price Id"
        },
        {
          "comments": "Provide a value for the collection method of the invoice.",
          "model": [
            {
              "label": "Charge Automatically",
              "value": "charge_automatically"
            },
            {
              "label": "Send Invoice",
              "value": "send_invoice"
            }
          ],
          "required": false,
          "key": "collectionMethod",
          "type": "string",
          "default": "",
          "label": "Collection Method"
        },
        {
          "comments": "Provide a string value for quantity of the items in the subscription.",
          "example": "30",
          "required": false,
          "key": "quantity",
          "type": "string",
          "default": "",
          "label": "Quantity"
        },
        {
          "comments": "Provide a value for the unique identifier of the payment.",
          "required": false,
          "example": "pm_003494",
          "key": "paymentId",
          "type": "string",
          "default": "",
          "label": "Payment Method Id"
        },
        {
          "comments": "A timestamp at which the subscription should cancel. If set to a date before the current period ends, this will cause a proration if prorations have been enabled using proration_behavior. If set during a future period, this will always cause a proration for that period.",
          "example": "0208302",
          "required": false,
          "key": "cancelAt",
          "type": "string",
          "default": "",
          "label": "Cancel At"
        },
        {
          "comments": "Provide a value for the days until the payment is due",
          "example": "23",
          "required": false,
          "key": "daysUntilDue",
          "type": "string",
          "default": "",
          "label": "Days Until Due"
        },
        {
          "comments": "Provide a value for the unique identifier of the coupon for the invoice.",
          "required": false,
          "example": "Z4OV52SU",
          "key": "coupon",
          "type": "string",
          "default": "",
          "label": "Coupon"
        },
        {
          "placeholder": "Values",
          "required": false,
          "comments": "The names of optional fields and their values to use when creating/updating a record. For example, if you have a custom configured field that is not represented as an input, here you are able to specify its key and assign it a value.",
          "key": "fieldValues",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Values"
        },
        {
          "comments": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them.",
          "required": false,
          "key": "metadata",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Metadata"
        },
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "listCards": {
      "display": {
        "label": "List Cards",
        "description": "Returns a list of cards connected to your platform"
      },
      "key": "listCards",
      "inputs": [
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "comments": "Provide a string value for unique identifier of the customer.",
          "required": false,
          "key": "customerId",
          "type": "string",
          "default": "",
          "label": "Customer Id"
        },
        {
          "comments": "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required": false,
          "example": "obj903234",
          "key": "startingAfter",
          "type": "string",
          "default": "",
          "label": "Starting After"
        },
        {
          "comments": "Provide an integer value for the maximum amount of results that will be returned.",
          "required": false,
          "example": "100",
          "key": "limit",
          "type": "string",
          "default": "",
          "label": "Limit"
        },
        {
          "comments": "A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.",
          "required": false,
          "example": "obj903234",
          "key": "endingBefore",
          "type": "string",
          "default": "",
          "label": "Ending Before"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "listPrices": {
      "display": {
        "label": "List Prices",
        "description": "Returns a list of all available prices"
      },
      "key": "listPrices",
      "inputs": [
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "comments": "Provide an integer value for the maximum amount of results that will be returned.",
          "required": false,
          "example": "100",
          "key": "limit",
          "type": "string",
          "default": "",
          "label": "Limit"
        },
        {
          "comments": "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required": false,
          "example": "obj903234",
          "key": "startingAfter",
          "type": "string",
          "default": "",
          "label": "Starting After"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "getPrice": {
      "display": {
        "label": "Get Price",
        "description": "Get the information and metadata of a price by Id"
      },
      "key": "getPrice",
      "inputs": [
        {
          "comments": "Provide a value for the unique identifier of the price.",
          "example": "price_1JaOXaDtJQgcyrdSRnsI9KW5",
          "required": true,
          "key": "priceId",
          "type": "string",
          "default": "",
          "label": "Price Id"
        },
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "createPrice": {
      "display": {
        "label": "Create Price",
        "description": "Create a new price"
      },
      "key": "createPrice",
      "inputs": [
        {
          "comments": "Provide a string value for the unique identifier of the product",
          "example": "prod_KEomQOHnUBtMNr",
          "required": true,
          "key": "productId",
          "type": "string",
          "default": "",
          "label": "Product Id"
        },
        {
          "comments": "Three-letter ISO currency code, in lowercase. Must be a supported currency.",
          "example": "usd",
          "required": false,
          "key": "currency",
          "type": "string",
          "default": "",
          "label": "Currency"
        },
        {
          "comments": "Provide a value for the price per unit.",
          "required": false,
          "key": "unitPrice",
          "type": "string",
          "default": "",
          "label": "Unit Price"
        },
        {
          "comments": "This flag will specify if the object is currently active in your platform.",
          "required": true,
          "key": "active",
          "type": "boolean",
          "default": "false",
          "label": "Active"
        },
        {
          "comments": "A brief description of the price, hidden from customers.",
          "required": false,
          "key": "nickname",
          "type": "string",
          "default": "",
          "label": "Nickname"
        },
        {
          "comments": "Provide a value that specifies billing frequency.",
          "model": [
            {
              "label": "Day",
              "value": "day"
            },
            {
              "label": "Week",
              "value": "week"
            },
            {
              "label": "Month",
              "value": "month"
            },
            {
              "label": "Year",
              "value": "year"
            }
          ],
          "required": false,
          "key": "recurringInterval",
          "type": "string",
          "default": "",
          "label": "RecurringInterval"
        },
        {
          "placeholder": "Values",
          "required": false,
          "comments": "The names of optional fields and their values to use when creating/updating a record. For example, if you have a custom configured field that is not represented as an input, here you are able to specify its key and assign it a value.",
          "key": "fieldValues",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Values"
        },
        {
          "comments": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them.",
          "required": false,
          "key": "metadata",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Metadata"
        },
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "listInvoices": {
      "display": {
        "label": "List Invoices",
        "description": "Returns a list of invoices connected to your platform"
      },
      "key": "listInvoices",
      "inputs": [
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "comments": "Provide an integer value for the maximum amount of results that will be returned.",
          "required": false,
          "example": "100",
          "key": "limit",
          "type": "string",
          "default": "",
          "label": "Limit"
        },
        {
          "comments": "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required": false,
          "example": "obj903234",
          "key": "startingAfter",
          "type": "string",
          "default": "",
          "label": "Starting After"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "deleteInvoice": {
      "display": {
        "label": "Delete Invoice",
        "description": "Delete an existing invoice"
      },
      "key": "deleteInvoice",
      "inputs": [
        {
          "comments": "Provide a value for the unique identifier of the invoice.",
          "example": "849305",
          "required": true,
          "key": "invoiceId",
          "type": "string",
          "default": "",
          "label": "invoiceId"
        },
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "getInvoice": {
      "display": {
        "label": "Get Invoice",
        "description": "Get the information and metadata of an invoice by Id"
      },
      "key": "getInvoice",
      "inputs": [
        {
          "comments": "Provide a value for the unique identifier of the invoice.",
          "example": "849305",
          "required": true,
          "key": "invoiceId",
          "type": "string",
          "default": "",
          "label": "invoiceId"
        },
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "createInvoice": {
      "display": {
        "label": "Create Invoice",
        "description": "Create a new invoice"
      },
      "key": "createInvoice",
      "inputs": [
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "comments": "Provide a string value for unique identifier of the customer.",
          "required": false,
          "key": "customerId",
          "type": "string",
          "default": "",
          "label": "Customer Id"
        },
        {
          "comments": "Provide a value for the collection method of the invoice.",
          "model": [
            {
              "label": "Charge Automatically",
              "value": "charge_automatically"
            },
            {
              "label": "Send Invoice",
              "value": "send_invoice"
            }
          ],
          "required": false,
          "key": "collectionMethod",
          "type": "string",
          "default": "",
          "label": "Collection Method"
        },
        {
          "comments": "Provide a value for the unique identifier of the payment.",
          "required": false,
          "example": "pm_003494",
          "key": "paymentId",
          "type": "string",
          "default": "",
          "label": "Payment Method Id"
        },
        {
          "comments": "Controls whether Stripe will perform automatic collection of the invoice.",
          "required": false,
          "key": "autoAdvance",
          "type": "boolean",
          "default": "false",
          "label": "Auto Advance"
        },
        {
          "placeholder": "Values",
          "required": false,
          "comments": "The names of optional fields and their values to use when creating/updating a record. For example, if you have a custom configured field that is not represented as an input, here you are able to specify its key and assign it a value.",
          "key": "fieldValues",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Values"
        },
        {
          "comments": "Provide a string value for unique identifier of the subscription.",
          "required": false,
          "key": "subscriptionId",
          "type": "string",
          "default": "",
          "label": "Subscription Id"
        },
        {
          "comments": "Provide a value for the description of the invoice.",
          "required": false,
          "example": "This is an example description.",
          "key": "description",
          "type": "string",
          "default": "",
          "label": "Description"
        },
        {
          "comments": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them.",
          "required": false,
          "key": "metadata",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Metadata"
        },
        {
          "comments": "Provide a unix timestamp value for the due date of the invoice.",
          "required": false,
          "example": "1631824986",
          "key": "dueDate",
          "type": "string",
          "default": "",
          "label": "Due Date"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "createProduct": {
      "display": {
        "label": "Create Product",
        "description": "Create a new product"
      },
      "key": "createProduct",
      "inputs": [
        {
          "comments": "Provide a string value for the name of the product",
          "example": "myProduct",
          "required": true,
          "key": "productName",
          "type": "string",
          "default": "",
          "label": "Product Name"
        },
        {
          "comments": "Provide a string value for the type of the product",
          "example": "Service",
          "model": [
            {
              "label": "Service",
              "value": "service"
            },
            {
              "label": "Good",
              "value": "good"
            }
          ],
          "required": false,
          "key": "productType",
          "type": "string",
          "default": "",
          "label": "Product Type"
        },
        {
          "comments": "A URL of a publicly-accessible webpage for this product. May only be set if type=good.",
          "required": false,
          "key": "productUrl",
          "type": "string",
          "default": "",
          "label": "Product URL"
        },
        {
          "comments": "Whether this product is able to be shipped (i.e., physical goods).",
          "required": false,
          "key": "shippable",
          "type": "boolean",
          "default": "false",
          "label": "Shippable"
        },
        {
          "comments": "A short one-line description of the product, meant to be displayable to the customer. May only be set if type=good.",
          "required": false,
          "example": "This is an example caption.",
          "key": "productCaption",
          "type": "string",
          "default": "",
          "label": "Product Caption"
        },
        {
          "comments": "This flag will specify if the object is currently active in your platform.",
          "required": true,
          "key": "active",
          "type": "boolean",
          "default": "false",
          "label": "Active"
        },
        {
          "comments": "Provide a value for the description of the invoice.",
          "required": false,
          "example": "This is an example description.",
          "key": "description",
          "type": "string",
          "default": "",
          "label": "Description"
        },
        {
          "comments": "For each list item, provide a URL for the image of the product",
          "example": "www.exampleImageURL.com/product1",
          "required": false,
          "key": "productImages",
          "type": "string",
          "default": "",
          "collection": "valuelist",
          "label": "Product Images"
        },
        {
          "comments": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them.",
          "required": false,
          "key": "metadata",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Metadata"
        },
        {
          "placeholder": "Values",
          "required": false,
          "comments": "The names of optional fields and their values to use when creating/updating a record. For example, if you have a custom configured field that is not represented as an input, here you are able to specify its key and assign it a value.",
          "key": "fieldValues",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Values"
        },
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "getProduct": {
      "display": {
        "label": "Get Product",
        "description": "Get the information and metadata of a product by Id"
      },
      "key": "getProduct",
      "inputs": [
        {
          "comments": "Provide a string value for the unique identifier of the product",
          "example": "prod_KEomQOHnUBtMNr",
          "required": true,
          "key": "productId",
          "type": "string",
          "default": "",
          "label": "Product Id"
        },
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "listProducts": {
      "display": {
        "label": "List Products",
        "description": "Returns a list of products connected to your platform"
      },
      "key": "listProducts",
      "inputs": [
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "comments": "Provide an integer value for the maximum amount of results that will be returned.",
          "required": false,
          "example": "100",
          "key": "limit",
          "type": "string",
          "default": "",
          "label": "Limit"
        },
        {
          "comments": "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required": false,
          "example": "obj903234",
          "key": "startingAfter",
          "type": "string",
          "default": "",
          "label": "Starting After"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "deleteProduct": {
      "display": {
        "label": "Delete Product",
        "description": "Delete an existing product by Id"
      },
      "key": "deleteProduct",
      "inputs": [
        {
          "comments": "Provide a string value for the unique identifier of the product",
          "example": "prod_KEomQOHnUBtMNr",
          "required": true,
          "key": "productId",
          "type": "string",
          "default": "",
          "label": "Product Id"
        },
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "updateProduct": {
      "display": {
        "label": "Update Product",
        "description": "Update an existing product"
      },
      "key": "updateProduct",
      "inputs": [
        {
          "comments": "Provide a string value for the unique identifier of the product",
          "example": "prod_KEomQOHnUBtMNr",
          "required": true,
          "key": "productId",
          "type": "string",
          "default": "",
          "label": "Product Id"
        },
        {
          "comments": "Provide a string value for the name of the product",
          "example": "myProduct",
          "required": false,
          "key": "updateProductName",
          "type": "string",
          "default": "",
          "label": "Product Name"
        },
        {
          "comments": "A URL of a publicly-accessible webpage for this product. May only be set if type=good.",
          "required": false,
          "key": "productUrl",
          "type": "string",
          "default": "",
          "label": "Product URL"
        },
        {
          "comments": "Whether this product is able to be shipped (i.e., physical goods).",
          "required": false,
          "key": "shippable",
          "type": "boolean",
          "default": "false",
          "label": "Shippable"
        },
        {
          "comments": "A short one-line description of the product, meant to be displayable to the customer. May only be set if type=good.",
          "required": false,
          "example": "This is an example caption.",
          "key": "productCaption",
          "type": "string",
          "default": "",
          "label": "Product Caption"
        },
        {
          "comments": "This flag will specify if the object is currently active in your platform.",
          "required": true,
          "key": "active",
          "type": "boolean",
          "default": "false",
          "label": "Active"
        },
        {
          "comments": "Provide a value for the description of the invoice.",
          "required": false,
          "example": "This is an example description.",
          "key": "description",
          "type": "string",
          "default": "",
          "label": "Description"
        },
        {
          "comments": "For each list item, provide a URL for the image of the product",
          "example": "www.exampleImageURL.com/product1",
          "required": false,
          "key": "productImages",
          "type": "string",
          "default": "",
          "collection": "valuelist",
          "label": "Product Images"
        },
        {
          "comments": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them.",
          "required": false,
          "key": "metadata",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Metadata"
        },
        {
          "placeholder": "Values",
          "required": false,
          "comments": "The names of optional fields and their values to use when creating/updating a record. For example, if you have a custom configured field that is not represented as an input, here you are able to specify its key and assign it a value.",
          "key": "fieldValues",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Values"
        },
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "updatePrice": {
      "display": {
        "label": "Update Price",
        "description": "Update an existing price by Id"
      },
      "key": "updatePrice",
      "inputs": [
        {
          "comments": "Provide a value for the unique identifier of the price.",
          "example": "price_1JaOXaDtJQgcyrdSRnsI9KW5",
          "required": true,
          "key": "priceId",
          "type": "string",
          "default": "",
          "label": "Price Id"
        },
        {
          "comments": "This flag will specify if the object is currently active in your platform.",
          "required": true,
          "key": "active",
          "type": "boolean",
          "default": "false",
          "label": "Active"
        },
        {
          "comments": "A brief description of the price, hidden from customers.",
          "required": false,
          "key": "nickname",
          "type": "string",
          "default": "",
          "label": "Nickname"
        },
        {
          "placeholder": "Values",
          "required": false,
          "comments": "The names of optional fields and their values to use when creating/updating a record. For example, if you have a custom configured field that is not represented as an input, here you are able to specify its key and assign it a value.",
          "key": "fieldValues",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Values"
        },
        {
          "comments": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them.",
          "required": false,
          "key": "metadata",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Metadata"
        },
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "updateSubscription": {
      "display": {
        "label": "Update Subscription",
        "description": "Update an existing subscription"
      },
      "key": "updateSubscription",
      "inputs": [
        {
          "comments": "Provide a string value for unique identifier of the subscription.",
          "required": false,
          "key": "subscriptionId",
          "type": "string",
          "default": "",
          "label": "Subscription Id"
        },
        {
          "comments": "Provide a value for the unique identifier of the price.",
          "example": "price_1JaOXaDtJQgcyrdSRnsI9KW5",
          "required": false,
          "key": "subscriptionPriceId",
          "type": "string",
          "default": "",
          "label": "Price Id"
        },
        {
          "comments": "Provide a string value for quantity of the items in the subscription.",
          "example": "30",
          "required": false,
          "key": "quantity",
          "type": "string",
          "default": "",
          "label": "Quantity"
        },
        {
          "comments": "Provide a value for the collection method of the invoice.",
          "model": [
            {
              "label": "Charge Automatically",
              "value": "charge_automatically"
            },
            {
              "label": "Send Invoice",
              "value": "send_invoice"
            }
          ],
          "required": false,
          "key": "collectionMethod",
          "type": "string",
          "default": "",
          "label": "Collection Method"
        },
        {
          "comments": "A timestamp at which the subscription should cancel. If set to a date before the current period ends, this will cause a proration if prorations have been enabled using proration_behavior. If set during a future period, this will always cause a proration for that period.",
          "example": "0208302",
          "required": false,
          "key": "cancelAt",
          "type": "string",
          "default": "",
          "label": "Cancel At"
        },
        {
          "comments": "Provide a value for the unique identifier of the coupon for the invoice.",
          "required": false,
          "example": "Z4OV52SU",
          "key": "coupon",
          "type": "string",
          "default": "",
          "label": "Coupon"
        },
        {
          "placeholder": "Values",
          "required": false,
          "comments": "The names of optional fields and their values to use when creating/updating a record. For example, if you have a custom configured field that is not represented as an input, here you are able to specify its key and assign it a value.",
          "key": "fieldValues",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Values"
        },
        {
          "comments": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them.",
          "required": false,
          "key": "metadata",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Metadata"
        },
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "getCard": {
      "display": {
        "label": "Get Card",
        "description": "Get the information and metadata of a card by Id"
      },
      "key": "getCard",
      "inputs": [
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "comments": "Provide a value for the unique identifier of the payment.",
          "required": false,
          "example": "pm_003494",
          "key": "paymentId",
          "type": "string",
          "default": "",
          "label": "Payment Method Id"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "attachCard": {
      "display": {
        "label": "Attach Card",
        "description": "Attach a card to a customer"
      },
      "key": "attachCard",
      "inputs": [
        {
          "comments": "Provide a value for the unique identifier of the payment.",
          "required": false,
          "example": "pm_003494",
          "key": "paymentId",
          "type": "string",
          "default": "",
          "label": "Payment Method Id"
        },
        {
          "comments": "Provide a string value for unique identifier of the customer.",
          "required": false,
          "key": "customerId",
          "type": "string",
          "default": "",
          "label": "Customer Id"
        },
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "detachCard": {
      "display": {
        "label": "Detach Card",
        "description": "Detach a card from a customer"
      },
      "key": "detachCard",
      "inputs": [
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "comments": "Provide a value for the unique identifier of the payment.",
          "required": false,
          "example": "pm_003494",
          "key": "paymentId",
          "type": "string",
          "default": "",
          "label": "Payment Method Id"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "updateCard": {
      "display": {
        "label": "Update Card",
        "description": "Create a new card by Id"
      },
      "key": "updateCard",
      "inputs": [
        {
          "comments": "Provide a string value for unique identifier of the customer.",
          "required": false,
          "key": "customerId",
          "type": "string",
          "default": "",
          "label": "Customer Id"
        },
        {
          "comments": "Provide a value for the number of the card.",
          "example": "48594932905594544",
          "required": true,
          "key": "cardNumber",
          "type": "string",
          "default": "",
          "label": "Card Number"
        },
        {
          "comments": "Provide a value for the expiration month of the card.",
          "example": "09",
          "required": true,
          "key": "expMonth",
          "type": "string",
          "default": "",
          "label": "Expiration Month"
        },
        {
          "comments": "Provide a value for the expiration year of the card.",
          "example": "2021",
          "required": true,
          "key": "expYear",
          "type": "string",
          "default": "",
          "label": "Expiration Year"
        },
        {
          "comments": "Provide a value for the CVC on the back of the card.",
          "example": "937",
          "required": true,
          "key": "cvc",
          "type": "string",
          "default": "",
          "label": "CVC"
        },
        {
          "comments": "Provide a value for the street address of the billing information",
          "example": "4 privet drive",
          "required": false,
          "key": "billingAddress1",
          "type": "string",
          "default": "",
          "label": "Billing Street Address"
        },
        {
          "comments": "Provide a value for the optional second address field of the billing information",
          "example": "suite 3",
          "required": false,
          "key": "billingAddress2",
          "type": "string",
          "default": "",
          "label": "Billing Address 2"
        },
        {
          "comments": "Provide a value for the city of the billing information",
          "example": "Los Angeles",
          "required": false,
          "key": "billingCity",
          "type": "string",
          "default": "",
          "label": "Billing City"
        },
        {
          "comments": "Provide a value for the country of the billing information",
          "example": "United States",
          "required": false,
          "key": "billingCountry",
          "type": "string",
          "default": "",
          "label": "Billing Country"
        },
        {
          "comments": "Provide a value for the postal code of the billing information",
          "example": "90432",
          "required": false,
          "key": "postalCode",
          "type": "string",
          "default": "",
          "label": "Billing Postal Code"
        },
        {
          "comments": "Provide a value for the state of the billing information",
          "example": "California",
          "required": false,
          "key": "state",
          "type": "string",
          "default": "",
          "label": "Billing State"
        },
        {
          "comments": "Provide a value for the email of the billing information",
          "example": "someone@example.com",
          "required": false,
          "key": "billingEmail",
          "type": "string",
          "default": "",
          "label": "Billing State"
        },
        {
          "comments": "Provide a value for the name of the billing information",
          "example": "John Doe",
          "required": false,
          "key": "billingName",
          "type": "string",
          "default": "",
          "label": "Full Name"
        },
        {
          "comments": "Provide a value for the phone of the billing information",
          "example": "18005554545",
          "required": false,
          "key": "phone",
          "type": "string",
          "default": "",
          "label": "Billing State"
        },
        {
          "comments": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them.",
          "required": false,
          "key": "metadata",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Metadata"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        }
      ]
    },
    "createCard": {
      "display": {
        "label": "Create Card",
        "description": "Create a new card"
      },
      "key": "createCard",
      "inputs": [
        {
          "comments": "Provide a string value for unique identifier of the customer.",
          "required": false,
          "key": "customerId",
          "type": "string",
          "default": "",
          "label": "Customer Id"
        },
        {
          "comments": "Provide a value for the number of the card.",
          "example": "48594932905594544",
          "required": true,
          "key": "cardNumber",
          "type": "string",
          "default": "",
          "label": "Card Number"
        },
        {
          "comments": "Provide a value for the expiration month of the card.",
          "example": "09",
          "required": true,
          "key": "expMonth",
          "type": "string",
          "default": "",
          "label": "Expiration Month"
        },
        {
          "comments": "Provide a value for the expiration year of the card.",
          "example": "2021",
          "required": true,
          "key": "expYear",
          "type": "string",
          "default": "",
          "label": "Expiration Year"
        },
        {
          "comments": "Provide a value for the CVC on the back of the card.",
          "example": "937",
          "required": true,
          "key": "cvc",
          "type": "string",
          "default": "",
          "label": "CVC"
        },
        {
          "comments": "Provide a value for the street address of the billing information",
          "example": "4 privet drive",
          "required": false,
          "key": "billingAddress1",
          "type": "string",
          "default": "",
          "label": "Billing Street Address"
        },
        {
          "comments": "Provide a value for the optional second address field of the billing information",
          "example": "suite 3",
          "required": false,
          "key": "billingAddress2",
          "type": "string",
          "default": "",
          "label": "Billing Address 2"
        },
        {
          "comments": "Provide a value for the city of the billing information",
          "example": "Los Angeles",
          "required": false,
          "key": "billingCity",
          "type": "string",
          "default": "",
          "label": "Billing City"
        },
        {
          "comments": "Provide a value for the country of the billing information",
          "example": "United States",
          "required": false,
          "key": "billingCountry",
          "type": "string",
          "default": "",
          "label": "Billing Country"
        },
        {
          "comments": "Provide a value for the postal code of the billing information",
          "example": "90432",
          "required": false,
          "key": "postalCode",
          "type": "string",
          "default": "",
          "label": "Billing Postal Code"
        },
        {
          "comments": "Provide a value for the state of the billing information",
          "example": "California",
          "required": false,
          "key": "state",
          "type": "string",
          "default": "",
          "label": "Billing State"
        },
        {
          "comments": "Provide a value for the email of the billing information",
          "example": "someone@example.com",
          "required": false,
          "key": "billingEmail",
          "type": "string",
          "default": "",
          "label": "Billing State"
        },
        {
          "comments": "Provide a value for the name of the billing information",
          "example": "John Doe",
          "required": false,
          "key": "billingName",
          "type": "string",
          "default": "",
          "label": "Full Name"
        },
        {
          "comments": "Provide a value for the phone of the billing information",
          "example": "18005554545",
          "required": false,
          "key": "phone",
          "type": "string",
          "default": "",
          "label": "Billing State"
        },
        {
          "comments": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them.",
          "required": false,
          "key": "metadata",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Metadata"
        },
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "listCharges": {
      "display": {
        "label": "List Charges",
        "description": "Returns a list of all charges"
      },
      "key": "listCharges",
      "inputs": [
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "comments": "Provide an integer value for the maximum amount of results that will be returned.",
          "required": false,
          "example": "100",
          "key": "limit",
          "type": "string",
          "default": "",
          "label": "Limit"
        },
        {
          "comments": "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required": false,
          "example": "obj903234",
          "key": "startingAfter",
          "type": "string",
          "default": "",
          "label": "Starting After"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "updateInvoice": {
      "display": {
        "label": "Update Invoice",
        "description": "Update an existing invoice"
      },
      "key": "updateInvoice",
      "inputs": [
        {
          "comments": "Provide a value for the unique identifier of the invoice.",
          "example": "849305",
          "required": true,
          "key": "invoiceId",
          "type": "string",
          "default": "",
          "label": "invoiceId"
        },
        {
          "comments": "Provide a value for the unique identifier of the payment.",
          "required": false,
          "example": "pm_003494",
          "key": "paymentId",
          "type": "string",
          "default": "",
          "label": "Payment Method Id"
        },
        {
          "comments": "Controls whether Stripe will perform automatic collection of the invoice.",
          "required": false,
          "key": "autoAdvance",
          "type": "boolean",
          "default": "false",
          "label": "Auto Advance"
        },
        {
          "comments": "Provide a value for the application fee of the invoice. You should only provide this value if you selected 'Charge Automatically' in the collection method input.",
          "required": false,
          "example": "500",
          "key": "applicationFeeAmount",
          "type": "string",
          "default": "",
          "label": "Application Fee Amount"
        },
        {
          "comments": "Provide a value for the collection method of the invoice.",
          "model": [
            {
              "label": "Charge Automatically",
              "value": "charge_automatically"
            },
            {
              "label": "Send Invoice",
              "value": "send_invoice"
            }
          ],
          "required": false,
          "key": "collectionMethod",
          "type": "string",
          "default": "",
          "label": "Collection Method"
        },
        {
          "comments": "Provide a value for the unique identifier of the coupon for the invoice.",
          "required": false,
          "example": "Z4OV52SU",
          "key": "coupon",
          "type": "string",
          "default": "",
          "label": "Coupon"
        },
        {
          "comments": "Provide a value for the discount of the invoice.",
          "required": false,
          "example": "78983",
          "key": "discount",
          "type": "string",
          "default": "",
          "label": "Discount"
        },
        {
          "comments": "Provide a value for the description of the invoice.",
          "required": false,
          "example": "This is an example description.",
          "key": "description",
          "type": "string",
          "default": "",
          "label": "Description"
        },
        {
          "comments": "Provide a unix timestamp value for the due date of the invoice.",
          "required": false,
          "example": "1631824986",
          "key": "dueDate",
          "type": "string",
          "default": "",
          "label": "Due Date"
        },
        {
          "placeholder": "Values",
          "required": false,
          "comments": "The names of optional fields and their values to use when creating/updating a record. For example, if you have a custom configured field that is not represented as an input, here you are able to specify its key and assign it a value.",
          "key": "fieldValues",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Values"
        },
        {
          "comments": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them.",
          "required": false,
          "key": "metadata",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Metadata"
        },
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "rawRequest": {
      "display": {
        "label": "Raw Request",
        "description": "Send Raw Request to Stripe"
      },
      "key": "rawRequest",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "URL to call",
          "required": true,
          "comments": "This is the URL to call.",
          "example": "/products",
          "key": "url",
          "type": "string",
          "default": "",
          "label": "URL"
        },
        {
          "required": true,
          "model": [
            {
              "label": "DELETE",
              "value": "DELETE"
            },
            {
              "label": "GET",
              "value": "GET"
            },
            {
              "label": "HEAD",
              "value": "HEAD"
            },
            {
              "label": "LINK",
              "value": "LINK"
            },
            {
              "label": "OPTIONS",
              "value": "OPTIONS"
            },
            {
              "label": "PATCH",
              "value": "PATCH"
            },
            {
              "label": "POST",
              "value": "POST"
            },
            {
              "label": "PURGE",
              "value": "PURGE"
            },
            {
              "label": "PUT",
              "value": "PUT"
            },
            {
              "label": "UNLINK",
              "value": "UNLINK"
            }
          ],
          "comments": "The HTTP method to use.",
          "key": "method",
          "type": "string",
          "default": "",
          "label": "Method"
        },
        {
          "placeholder": "Data to send",
          "required": false,
          "comments": "The HTTP body payload to send to the URL.",
          "example": "{\"exampleKey\": \"Example Data\"}",
          "key": "data",
          "type": "string",
          "default": "",
          "label": "Data"
        },
        {
          "placeholder": "Data to send",
          "required": false,
          "comments": "The Form Data to be sent as a multipart form upload.",
          "example": "[{\"key\": \"Example Key\", \"value\": new Buffer(\"Hello World\")}]",
          "key": "formData",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Form Data"
        },
        {
          "placeholder": "Data to send",
          "required": false,
          "comments": "File Data to be sent as a multipart form upload.",
          "example": "[{key: \"example.txt\", value: \"My File Contents\"}]",
          "key": "fileData",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "File Data"
        },
        {
          "placeholder": "The file name to apply to a file",
          "required": false,
          "comments": "File names to apply to the file data inputs. Keys must match the file data keys above.",
          "key": "fileDataFileNames",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "File Data File Names"
        },
        {
          "placeholder": "Query Parameter",
          "required": false,
          "comments": "A list of query parameters to send with the request. This is the portion at the end of the URL similar to ?key1=value1&key2=value2.",
          "key": "queryParams",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Query Parameter"
        },
        {
          "placeholder": "Header",
          "required": false,
          "comments": "A list of headers to send with the request.",
          "example": "User-Agent: curl/7.64.1",
          "key": "headers",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Header"
        },
        {
          "placeholder": "Response Type",
          "required": true,
          "comments": "The type of data you expect in the response. You can request json, text, or binary data.",
          "model": [
            {
              "label": "arraybuffer",
              "value": "arraybuffer"
            },
            {
              "label": "document",
              "value": "document"
            },
            {
              "label": "json",
              "value": "json"
            },
            {
              "label": "text",
              "value": "text"
            }
          ],
          "key": "responseType",
          "type": "string",
          "default": "json",
          "label": "Response Type"
        },
        {
          "required": false,
          "comments": "The maximum time that a client will await a response to its request",
          "example": "2000",
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        },
        {
          "placeholder": "Retry Delay",
          "required": false,
          "comments": "The delay in milliseconds between retries.",
          "key": "retryDelayMS",
          "type": "string",
          "default": "0",
          "label": "Retry Delay (ms)"
        },
        {
          "required": false,
          "comments": "If true, retries on all erroneous responses regardless of type.",
          "key": "retryAllErrors",
          "type": "boolean",
          "default": "false",
          "label": "Retry On All Errors"
        },
        {
          "placeholder": "Max Retries",
          "required": false,
          "comments": "The maximum number of retries to attempt.",
          "key": "maxRetries",
          "type": "string",
          "default": "0",
          "label": "Max Retry Count"
        },
        {
          "required": false,
          "comments": "Specifies whether to use a pre-defined exponential backoff strategy for retries.",
          "key": "useExponentialBackoff",
          "type": "boolean",
          "default": "false",
          "label": "Use Exponential Backoff"
        }
      ]
    },
    "getBalanceTransaction": {
      "display": {
        "label": "Get Balance Transaction",
        "description": "Retrieves the balance transaction with the given ID."
      },
      "key": "getBalanceTransaction",
      "inputs": [
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "Provide a value for the unique identifier of the balance transaction.",
          "example": "txn_1Jb9jvDtJQgcyrdS1Z9KW5",
          "required": true,
          "key": "balanceTransactionId",
          "type": "string",
          "default": "",
          "label": "Balance Transaction ID"
        }
      ]
    },
    "listBalanceTransactions": {
      "display": {
        "label": "List Balance Transactions",
        "description": "Returns a list of transactions that have contributed to the Stripe account balance (e.g., charges, transfers, and so forth)."
      },
      "key": "listBalanceTransactions",
      "inputs": [
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "language": "json",
          "comments": "A filter on the list based on the object created field.",
          "required": false,
          "example": "{\"gt\":1620000000}",
          "key": "created",
          "type": "code",
          "default": "",
          "label": "Created"
        },
        {
          "comments": "Only return transactions in a certain currency. Three-letter ISO currency code, in lowercase. Must be a supported currency.",
          "example": "usd",
          "required": false,
          "key": "currency",
          "type": "string",
          "default": "",
          "label": "Currency"
        },
        {
          "comments": "A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.",
          "required": false,
          "example": "obj903234",
          "key": "endingBefore",
          "type": "string",
          "default": "",
          "label": "Ending Before"
        },
        {
          "comments": "Provide an integer value for the maximum amount of results that will be returned.",
          "required": false,
          "example": "100",
          "key": "limit",
          "type": "string",
          "default": "",
          "label": "Limit"
        },
        {
          "comments": "Only returns the original transaction.",
          "required": false,
          "key": "source",
          "type": "string",
          "default": "",
          "label": "Source"
        },
        {
          "comments": "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required": false,
          "example": "obj903234",
          "key": "startingAfter",
          "type": "string",
          "default": "",
          "label": "Starting After"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "updateCharge": {
      "display": {
        "label": "Update Charge",
        "description": "Updates the specified charge by setting the values of the parameters passed."
      },
      "key": "updateCharge",
      "inputs": [
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "key": "chargeId",
          "type": "string",
          "default": "",
          "label": "Charge ID"
        },
        {
          "comments": "The ID of an existing customer that will be associated with this request.",
          "required": false,
          "key": "customerId",
          "type": "string",
          "default": "",
          "label": "Customer"
        },
        {
          "comments": "An arbitrary string which you can attach to a charge object. It is displayed when in the web interface alongside the charge",
          "required": false,
          "example": "This is an example description.",
          "key": "description",
          "type": "string",
          "default": "",
          "label": "Description"
        },
        {
          "comments": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them.",
          "required": false,
          "key": "metadata",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Metadata"
        },
        {
          "comments": "This is the email address that the receipt for this charge will be sent to. If this field is updated, then a new email receipt will be sent to the updated address.",
          "required": false,
          "key": "receiptEmail",
          "type": "string",
          "default": "",
          "label": "Receipt Email"
        },
        {
          "language": "json",
          "required": false,
          "comments": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
          "example": "{\"address\":{\"city\":\"San Francisco\",\"country\":\"US\",\"line1\":\"1234 Main Street\",\"line2\":\"Apt. 123\",\"postal_code\":\"94111\",\"state\":\"CA\"},\"name\":\"John Doe\"}",
          "key": "shipping",
          "type": "code",
          "default": "",
          "label": "Shipping"
        },
        {
          "language": "json",
          "required": false,
          "comments": "A set of key-value pairs you can attach to a charge giving information about its riskiness.",
          "example": "{\"user_report\":\"safe\"}",
          "key": "fraudDetails",
          "type": "code",
          "default": "",
          "label": "Fraud Details"
        },
        {
          "required": false,
          "comments": "A string that identifies this transaction as part of a group.",
          "key": "transferGroup",
          "type": "string",
          "default": "",
          "label": "Transfer Group"
        }
      ]
    },
    "searchCharges": {
      "display": {
        "label": "Search Charges",
        "description": "Search for charges you've previously created using Stripe's Search Query Language."
      },
      "key": "searchCharges",
      "inputs": [
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "The search query string.",
          "key": "query",
          "type": "string",
          "default": "",
          "label": "Query"
        },
        {
          "comments": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
          "required": false,
          "example": "100",
          "key": "limit",
          "type": "string",
          "default": "",
          "label": "Limit"
        },
        {
          "required": false,
          "comments": "A cursor for pagination across multiple pages of results. Don’t include this parameter on the first call. Use the next_page value returned in a previous response to request subsequent results.",
          "key": "page",
          "type": "string",
          "default": "",
          "label": "Page"
        }
      ]
    },
    "getCharge": {
      "display": {
        "label": "Get Charge",
        "description": "Retrieves the details of a charge that has previously been created."
      },
      "key": "getCharge",
      "inputs": [
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "key": "chargeId",
          "type": "string",
          "default": "",
          "label": "Charge ID"
        }
      ]
    },
    "listPaymentIntents": {
      "display": {
        "label": "List Payment Intents",
        "description": "Returns a list of PaymentIntents."
      },
      "key": "listPaymentIntents",
      "inputs": [
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "Only return PaymentIntents for the customer specified by this customer ID.",
          "required": false,
          "key": "customerId",
          "type": "string",
          "default": "",
          "label": "Customer"
        },
        {
          "language": "json",
          "comments": "A filter on the list based on the object created field.",
          "required": false,
          "example": "{\"gt\":1620000000}",
          "key": "created",
          "type": "code",
          "default": "",
          "label": "Created"
        },
        {
          "comments": "A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.",
          "required": false,
          "example": "obj903234",
          "key": "endingBefore",
          "type": "string",
          "default": "",
          "label": "Ending Before"
        },
        {
          "comments": "Provide an integer value for the maximum amount of results that will be returned.",
          "required": false,
          "example": "100",
          "key": "limit",
          "type": "string",
          "default": "",
          "label": "Limit"
        },
        {
          "comments": "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required": false,
          "example": "obj903234",
          "key": "startingAfter",
          "type": "string",
          "default": "",
          "label": "Starting After"
        }
      ]
    },
    "getPaymentIntent": {
      "display": {
        "label": "Get Payment Intent",
        "description": "Retrieves the details of a PaymentIntent that has previously been created."
      },
      "key": "getPaymentIntent",
      "inputs": [
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "The ID of the PaymentIntent to retrieve.",
          "key": "paymentIntent",
          "type": "string",
          "default": "",
          "label": "Payment ID"
        },
        {
          "required": false,
          "comments": "The client secret of the PaymentIntent. Required if a publishable key is used to retrieve the source.",
          "key": "clientSecret",
          "type": "string",
          "default": "",
          "label": "Client Secret"
        }
      ]
    },
    "createPaymentIntent": {
      "display": {
        "label": "Create Payment Intent",
        "description": "Creates a PaymentIntent object."
      },
      "key": "createPaymentIntent",
      "inputs": [
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "Amount intended to be collected by this PaymentIntent.",
          "key": "amount",
          "type": "string",
          "default": "",
          "label": "Amount"
        },
        {
          "comments": "Three-letter ISO currency code, in lowercase. Must be a supported currency.",
          "example": "usd",
          "required": true,
          "key": "currency",
          "type": "string",
          "default": "",
          "label": "Currency"
        },
        {
          "language": "json",
          "required": false,
          "comments": "When enabled, this PaymentIntent will accept payment methods that you have enabled in the Dashboard and are compatible with this PaymentIntent’s other parameters.",
          "example": "{\"enabled\":true}",
          "key": "automaticPaymentMethods",
          "type": "code",
          "default": "",
          "label": "Automatic Payment Methods"
        },
        {
          "required": false,
          "comments": "Set to true to attempt to confirm this PaymentIntent immediately.",
          "key": "confirm",
          "type": "boolean",
          "default": false,
          "label": "Confirm"
        },
        {
          "comments": "ID of the Customer this PaymentIntent belongs to, if one exists.",
          "required": false,
          "key": "customerId",
          "type": "string",
          "default": "",
          "label": "Customer"
        },
        {
          "comments": "An arbitrary string attached to the object. Often useful for displaying to users.",
          "required": false,
          "example": "This is an example description.",
          "key": "description",
          "type": "string",
          "default": "",
          "label": "Description"
        },
        {
          "comments": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them.",
          "required": false,
          "key": "metadata",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Metadata"
        },
        {
          "comments": "Set to true to indicate that the customer is not in your checkout flow during this payment attempt, and therefore is unable to authenticate.",
          "required": false,
          "model": [
            {
              "label": "",
              "value": ""
            },
            {
              "label": "True",
              "value": "true"
            },
            {
              "label": "False",
              "value": "false"
            }
          ],
          "key": "offSession",
          "type": "string",
          "default": "",
          "label": "Off Session"
        },
        {
          "comments": "ID of the payment method (a PaymentMethod, Card, or compatible Source object) to attach to this PaymentIntent.",
          "required": false,
          "key": "paymentMethod",
          "type": "string",
          "default": "",
          "label": "Payment Method"
        },
        {
          "comments": "Email address that the receipt for the resulting payment will be sent to. ",
          "required": false,
          "key": "receiptEmail",
          "type": "string",
          "default": "",
          "label": "Receipt Email"
        },
        {
          "comments": "Indicates that you intend to make future payments with this PaymentIntent’s payment method.",
          "required": false,
          "model": [
            {
              "label": "",
              "value": ""
            },
            {
              "label": "On Session",
              "value": "on_session"
            },
            {
              "label": "Off Session",
              "value": "off_session"
            }
          ],
          "key": "setupFutureUsage",
          "type": "string",
          "default": "",
          "label": "Setup Future Usage"
        },
        {
          "language": "json",
          "required": false,
          "comments": "Shipping information for this PaymentIntent.",
          "example": "{\"address\":{\"city\":\"San Francisco\",\"country\":\"US\",\"line1\":\"1234 Main Street\",\"line2\":\"Apt. 123\",\"postal_code\":\"94111\",\"state\":\"CA\"},\"name\":\"John Doe\"}",
          "key": "shipping",
          "type": "code",
          "default": "",
          "label": "Shipping"
        },
        {
          "comments": "For non-card charges, you can use this value as the complete description that appears on your customers’ statements.",
          "required": false,
          "key": "statementDescriptor",
          "type": "string",
          "default": "",
          "label": "Statement Descriptor"
        },
        {
          "comments": "Provides information about a card payment that customers see on their statements.",
          "required": false,
          "key": "statementDescriptorSuffix",
          "type": "string",
          "default": "",
          "label": "Statement Descriptor Suffix"
        },
        {
          "comments": "The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner’s Stripe account.",
          "required": false,
          "example": "500",
          "key": "applicationFeeAmount",
          "type": "string",
          "default": "",
          "label": "Application Fee Amount"
        },
        {
          "comments": "Controls when the funds will be captured from the customer’s account.",
          "model": [
            {
              "label": "",
              "value": ""
            },
            {
              "label": "Automatic",
              "value": "automatic"
            },
            {
              "label": "Manual",
              "value": "manual"
            },
            {
              "label": "Automatic async",
              "value": "automatic_async"
            }
          ],
          "required": false,
          "key": "captureMethod",
          "type": "string",
          "default": "",
          "label": "Capture Method"
        },
        {
          "model": [
            {
              "label": "",
              "value": ""
            },
            {
              "label": "Automatic",
              "value": "automatic"
            },
            {
              "label": "Manual",
              "value": "manual"
            }
          ],
          "required": false,
          "key": "confirmationMethod",
          "type": "string",
          "default": "",
          "label": "Confirmation Method"
        },
        {
          "comments": "Set to true to fail the payment attempt if the PaymentIntent transitions into requires_action.",
          "model": [
            {
              "label": "",
              "value": ""
            },
            {
              "label": "True",
              "value": "true"
            },
            {
              "label": "False",
              "value": "false"
            }
          ],
          "required": false,
          "key": "errorOnRequiresAction",
          "type": "string",
          "default": "",
          "label": "Error On Requires Action"
        },
        {
          "comments": "ID of the mandate to be used for this payment.",
          "required": false,
          "key": "mandate",
          "type": "string",
          "default": "",
          "label": "Mandate"
        },
        {
          "language": "json",
          "example": "{\"customer_acceptance\":{\"type\":\"online\"}}",
          "comments": "This hash contains details about the Mandate to create.",
          "required": false,
          "key": "mandateData",
          "type": "code",
          "default": "",
          "label": "Mandate Data"
        },
        {
          "comments": "The Stripe account ID for which these funds are intended",
          "required": false,
          "key": "onBehalfOf",
          "type": "string",
          "default": "",
          "label": "On Behalf Of"
        },
        {
          "language": "json",
          "example": "{\"type\":\"card\"}",
          "comments": "If provided, this hash will be used to create a PaymentMethod.",
          "required": false,
          "key": "paymentMethodData",
          "type": "code",
          "default": "",
          "label": "Payment Method Data"
        },
        {
          "language": "json",
          "example": "{\"card\":{\"request_three_d_secure\":\"any\"}}",
          "comments": "Payment-method-specific configuration for this PaymentIntent.",
          "required": false,
          "key": "paymentMethodOptions",
          "type": "code",
          "default": "",
          "label": "Payment Method Options"
        },
        {
          "comments": "The list of payment method types that this PaymentIntent is allowed to use.",
          "required": false,
          "key": "paymentMethodTypes",
          "type": "string",
          "default": "",
          "collection": "valuelist",
          "label": "Payment Method Types"
        },
        {
          "language": "json",
          "example": "{\"session\":\"123456\"}",
          "comments": "Options to configure Radar.",
          "required": false,
          "key": "radarOptions",
          "type": "code",
          "default": "",
          "label": "Radar Options"
        },
        {
          "comments": "The URL to redirect your customer back to after they authenticate or cancel their payment on the payment method’s app or site.",
          "required": false,
          "key": "returnUrl",
          "type": "string",
          "default": "",
          "label": "Return Url"
        },
        {
          "language": "json",
          "example": "{\"destination\":\"acct_1F5yQhFjP0puYwXh\"}",
          "comments": "The parameters used to automatically create a Transfer when the payment succeeds",
          "required": false,
          "key": "transferData",
          "type": "code",
          "default": "",
          "label": "Transfer Data"
        },
        {
          "required": false,
          "comments": "A string that identifies the resulting payment as part of a group.",
          "key": "transferGroup",
          "type": "string",
          "default": "",
          "label": "Transfer Group"
        },
        {
          "comments": "Set to true when confirming server-side and using Stripe.js, iOS, or Android client-side SDKs to handle the next actions.",
          "required": false,
          "model": [
            {
              "label": "",
              "value": ""
            },
            {
              "label": "True",
              "value": "true"
            },
            {
              "label": "False",
              "value": "false"
            }
          ],
          "key": "useStripeSdk",
          "type": "string",
          "default": "",
          "label": "Use Stripe SDK"
        }
      ]
    },
    "updatePaymentIntent": {
      "display": {
        "label": "Update Payment Intent",
        "description": "Updates properties on a PaymentIntent object without confirming."
      },
      "key": "updatePaymentIntent",
      "inputs": [
        {
          "comments": "The ID of the Payment Intent.",
          "required": true,
          "key": "paymentIntentId",
          "type": "string",
          "default": "",
          "label": "Payment Intent ID"
        },
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "Amount intended to be collected by this PaymentIntent.",
          "key": "amount",
          "type": "string",
          "default": "",
          "label": "Amount"
        },
        {
          "comments": "Three-letter ISO currency code, in lowercase. Must be a supported currency.",
          "example": "usd",
          "required": false,
          "key": "currency",
          "type": "string",
          "default": "",
          "label": "Currency"
        },
        {
          "comments": "ID of the Customer this PaymentIntent belongs to, if one exists.",
          "required": false,
          "key": "customerId",
          "type": "string",
          "default": "",
          "label": "Customer"
        },
        {
          "comments": "An arbitrary string attached to the object. Often useful for displaying to users.",
          "required": false,
          "example": "This is an example description.",
          "key": "description",
          "type": "string",
          "default": "",
          "label": "Description"
        },
        {
          "comments": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them.",
          "required": false,
          "key": "metadata",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Metadata"
        },
        {
          "comments": "ID of the payment method (a PaymentMethod, Card, or compatible Source object) to attach to this PaymentIntent.",
          "required": false,
          "key": "paymentMethod",
          "type": "string",
          "default": "",
          "label": "Payment Method"
        },
        {
          "comments": "Email address that the receipt for the resulting payment will be sent to. ",
          "required": false,
          "key": "receiptEmail",
          "type": "string",
          "default": "",
          "label": "Receipt Email"
        },
        {
          "comments": "Indicates that you intend to make future payments with this PaymentIntent’s payment method.",
          "required": false,
          "model": [
            {
              "label": "",
              "value": ""
            },
            {
              "label": "On Session",
              "value": "on_session"
            },
            {
              "label": "Off Session",
              "value": "off_session"
            }
          ],
          "key": "setupFutureUsage",
          "type": "string",
          "default": "",
          "label": "Setup Future Usage"
        },
        {
          "language": "json",
          "required": false,
          "comments": "Shipping information for this PaymentIntent.",
          "example": "{\"address\":{\"city\":\"San Francisco\",\"country\":\"US\",\"line1\":\"1234 Main Street\",\"line2\":\"Apt. 123\",\"postal_code\":\"94111\",\"state\":\"CA\"},\"name\":\"John Doe\"}",
          "key": "shipping",
          "type": "code",
          "default": "",
          "label": "Shipping"
        },
        {
          "comments": "For non-card charges, you can use this value as the complete description that appears on your customers’ statements.",
          "required": false,
          "key": "statementDescriptor",
          "type": "string",
          "default": "",
          "label": "Statement Descriptor"
        },
        {
          "comments": "Provides information about a card payment that customers see on their statements.",
          "required": false,
          "key": "statementDescriptorSuffix",
          "type": "string",
          "default": "",
          "label": "Statement Descriptor Suffix"
        },
        {
          "comments": "The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner’s Stripe account.",
          "required": false,
          "example": "500",
          "key": "applicationFeeAmount",
          "type": "string",
          "default": "",
          "label": "Application Fee Amount"
        },
        {
          "comments": "Controls when the funds will be captured from the customer’s account.",
          "model": [
            {
              "label": "",
              "value": ""
            },
            {
              "label": "Automatic",
              "value": "automatic"
            },
            {
              "label": "Manual",
              "value": "manual"
            },
            {
              "label": "Automatic async",
              "value": "automatic_async"
            }
          ],
          "required": false,
          "key": "captureMethod",
          "type": "string",
          "default": "",
          "label": "Capture Method"
        },
        {
          "language": "json",
          "example": "{\"type\":\"card\"}",
          "comments": "If provided, this hash will be used to create a PaymentMethod.",
          "required": false,
          "key": "paymentMethodData",
          "type": "code",
          "default": "",
          "label": "Payment Method Data"
        },
        {
          "language": "json",
          "example": "{\"card\":{\"request_three_d_secure\":\"any\"}}",
          "comments": "Payment-method-specific configuration for this PaymentIntent.",
          "required": false,
          "key": "paymentMethodOptions",
          "type": "code",
          "default": "",
          "label": "Payment Method Options"
        },
        {
          "comments": "The list of payment method types that this PaymentIntent is allowed to use.",
          "required": false,
          "key": "paymentMethodTypes",
          "type": "string",
          "default": "",
          "collection": "valuelist",
          "label": "Payment Method Types"
        },
        {
          "language": "json",
          "example": "{\"destination\":\"acct_1F5yQhFjP0puYwXh\"}",
          "comments": "The parameters used to automatically create a Transfer when the payment succeeds",
          "required": false,
          "key": "transferData",
          "type": "code",
          "default": "",
          "label": "Transfer Data"
        },
        {
          "required": false,
          "comments": "A string that identifies the resulting payment as part of a group.",
          "key": "transferGroup",
          "type": "string",
          "default": "",
          "label": "Transfer Group"
        }
      ]
    },
    "confirmPaymentIntent": {
      "display": {
        "label": "Confirm Payment Intent",
        "description": "Confirm that your customer intends to pay with current or provided payment method."
      },
      "key": "confirmPaymentIntent",
      "inputs": [
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the Payment Intent.",
          "required": true,
          "key": "paymentIntentId",
          "type": "string",
          "default": "",
          "label": "Payment Intent ID"
        },
        {
          "comments": "ID of the payment method (a PaymentMethod, Card, or compatible Source object) to attach to this PaymentIntent.",
          "required": false,
          "key": "paymentMethod",
          "type": "string",
          "default": "",
          "label": "Payment Method"
        },
        {
          "comments": "This is the email address that the receipt for this charge will be sent to. If this field is updated, then a new email receipt will be sent to the updated address.",
          "required": false,
          "key": "receiptEmail",
          "type": "string",
          "default": "",
          "label": "Receipt Email"
        },
        {
          "comments": "Indicates that you intend to make future payments with this PaymentIntent’s payment method.",
          "required": false,
          "model": [
            {
              "label": "",
              "value": ""
            },
            {
              "label": "On Session",
              "value": "on_session"
            },
            {
              "label": "Off Session",
              "value": "off_session"
            }
          ],
          "key": "setupFutureUsage",
          "type": "string",
          "default": "",
          "label": "Setup Future Usage"
        },
        {
          "comments": "Controls when the funds will be captured from the customer’s account.",
          "model": [
            {
              "label": "",
              "value": ""
            },
            {
              "label": "Automatic",
              "value": "automatic"
            },
            {
              "label": "Manual",
              "value": "manual"
            },
            {
              "label": "Automatic async",
              "value": "automatic_async"
            }
          ],
          "required": false,
          "key": "captureMethod",
          "type": "string",
          "default": "",
          "label": "Capture Method"
        },
        {
          "comments": "Set to true to fail the payment attempt if the PaymentIntent transitions into requires_action.",
          "model": [
            {
              "label": "",
              "value": ""
            },
            {
              "label": "True",
              "value": "true"
            },
            {
              "label": "False",
              "value": "false"
            }
          ],
          "required": false,
          "key": "errorOnRequiresAction",
          "type": "string",
          "default": "",
          "label": "Error On Requires Action"
        },
        {
          "comments": "ID of the mandate to be used for this payment.",
          "required": false,
          "key": "mandate",
          "type": "string",
          "default": "",
          "label": "Mandate"
        },
        {
          "language": "json",
          "example": "{\"customer_acceptance\":{\"type\":\"online\"}}",
          "comments": "This hash contains details about the Mandate to create.",
          "required": false,
          "key": "mandateData",
          "type": "code",
          "default": "",
          "label": "Mandate Data"
        },
        {
          "comments": "Set to true to indicate that the customer is not in your checkout flow during this payment attempt, and therefore is unable to authenticate.",
          "required": false,
          "model": [
            {
              "label": "",
              "value": ""
            },
            {
              "label": "True",
              "value": "true"
            },
            {
              "label": "False",
              "value": "false"
            }
          ],
          "key": "offSession",
          "type": "string",
          "default": "",
          "label": "Off Session"
        },
        {
          "language": "json",
          "example": "{\"type\":\"card\"}",
          "comments": "If provided, this hash will be used to create a PaymentMethod.",
          "required": false,
          "key": "paymentMethodData",
          "type": "code",
          "default": "",
          "label": "Payment Method Data"
        },
        {
          "language": "json",
          "example": "{\"card\":{\"request_three_d_secure\":\"any\"}}",
          "comments": "Payment-method-specific configuration for this PaymentIntent.",
          "required": false,
          "key": "paymentMethodOptions",
          "type": "code",
          "default": "",
          "label": "Payment Method Options"
        },
        {
          "language": "json",
          "example": "{\"session\":\"123456\"}",
          "comments": "Options to configure Radar.",
          "required": false,
          "key": "radarOptions",
          "type": "code",
          "default": "",
          "label": "Radar Options"
        },
        {
          "comments": "The URL to redirect your customer back to after they authenticate or cancel their payment on the payment method’s app or site.",
          "required": false,
          "key": "returnUrl",
          "type": "string",
          "default": "",
          "label": "Return Url"
        },
        {
          "comments": "Set to true when confirming server-side and using Stripe.js, iOS, or Android client-side SDKs to handle the next actions.",
          "required": false,
          "model": [
            {
              "label": "",
              "value": ""
            },
            {
              "label": "True",
              "value": "true"
            },
            {
              "label": "False",
              "value": "false"
            }
          ],
          "key": "useStripeSdk",
          "type": "string",
          "default": "",
          "label": "Use Stripe SDK"
        }
      ]
    },
    "cancelPaymentIntent": {
      "display": {
        "label": "Cancel Payment Intent",
        "description": "A PaymentIntent object can be canceled when it is in one of these statuses: requires_payment_method, requires_capture, requires_confirmation, requires_action or, in rare cases, processing."
      },
      "key": "cancelPaymentIntent",
      "inputs": [
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the Payment Intent.",
          "required": true,
          "key": "paymentIntentId",
          "type": "string",
          "default": "",
          "label": "Payment Intent ID"
        },
        {
          "comments": "The reason for cancelling the Payment Intent.",
          "required": false,
          "model": [
            {
              "label": "",
              "value": ""
            },
            {
              "label": "Abandoned",
              "value": "abandoned"
            },
            {
              "label": "Duplicate",
              "value": "duplicate"
            },
            {
              "label": "Fraudulent",
              "value": "fraudulent"
            },
            {
              "label": "Requested by Customer",
              "value": "requested_by_customer"
            }
          ],
          "key": "cancellationReason",
          "type": "string",
          "default": "",
          "label": "Cancellation Reason"
        }
      ]
    },
    "capturePaymentIntent": {
      "display": {
        "label": "Capture Payment Intent",
        "description": "Capture the funds of an existing uncaptured PaymentIntent when its status is requires_capture."
      },
      "key": "capturePaymentIntent",
      "inputs": [
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the Payment Intent.",
          "required": true,
          "key": "paymentIntentId",
          "type": "string",
          "default": "",
          "label": "Payment Intent ID"
        },
        {
          "comments": "The amount to capture from the PaymentIntent, which must be less than or equal to the original amount.",
          "required": false,
          "key": "amountToCapture",
          "type": "string",
          "default": "",
          "label": "Amount to Capture"
        },
        {
          "comments": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them.",
          "required": false,
          "key": "metadata",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Metadata"
        },
        {
          "comments": "The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner’s Stripe account.",
          "required": false,
          "example": "500",
          "key": "applicationFeeAmount",
          "type": "string",
          "default": "",
          "label": "Application Fee Amount"
        },
        {
          "comments": "For non-card charges, you can use this value as the complete description that appears on your customers’ statements.",
          "required": false,
          "key": "statementDescriptor",
          "type": "string",
          "default": "",
          "label": "Statement Descriptor"
        },
        {
          "comments": "Provides information about a card payment that customers see on their statements.",
          "required": false,
          "key": "statementDescriptorSuffix",
          "type": "string",
          "default": "",
          "label": "Statement Descriptor Suffix"
        },
        {
          "language": "json",
          "example": "{\"amount\":1000}",
          "comments": "The parameters used to automatically create a Transfer when the payment is captured.",
          "required": false,
          "key": "transferData",
          "type": "code",
          "default": "",
          "label": "Transfer Data"
        }
      ]
    },
    "searchPaymentIntent": {
      "display": {
        "label": "Search Payment Intent",
        "description": "Search for PaymentIntents you’ve previously created using Stripe’s Search Query Language."
      },
      "key": "searchPaymentIntent",
      "inputs": [
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "The search query string.",
          "key": "query",
          "type": "string",
          "default": "",
          "label": "Query"
        },
        {
          "comments": "Provide an integer value for the maximum amount of results that will be returned.",
          "required": false,
          "example": "100",
          "key": "limit",
          "type": "string",
          "default": "",
          "label": "Limit"
        },
        {
          "required": false,
          "comments": "A cursor for pagination across multiple pages of results. Don’t include this parameter on the first call. Use the next_page value returned in a previous response to request subsequent results.",
          "key": "page",
          "type": "string",
          "default": "",
          "label": "Page"
        }
      ]
    },
    "listDisputes": {
      "display": {
        "label": "List Disputes",
        "description": "Returns a list of your disputes."
      },
      "key": "listDisputes",
      "inputs": [
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "Provide an integer value for the maximum amount of results that will be returned.",
          "required": false,
          "example": "100",
          "key": "limit",
          "type": "string",
          "default": "",
          "label": "Limit"
        },
        {
          "comments": "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required": false,
          "example": "obj903234",
          "key": "startingAfter",
          "type": "string",
          "default": "",
          "label": "Starting After"
        },
        {
          "required": false,
          "comments": "Only return disputes associated to the charge specified by this charge ID.",
          "key": "chargeId",
          "type": "string",
          "default": "",
          "label": "Charge"
        },
        {
          "required": false,
          "comments": "Only return charges that were created by the PaymentIntent specified by this PaymentIntent ID.",
          "key": "paymentIntent",
          "type": "string",
          "default": "",
          "label": "Payment Intent"
        },
        {
          "language": "json",
          "comments": "A filter on the list based on the object created field.",
          "required": false,
          "example": "{\"gt\":1620000000}",
          "key": "created",
          "type": "code",
          "default": "",
          "label": "Created"
        },
        {
          "comments": "A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.",
          "required": false,
          "example": "obj903234",
          "key": "endingBefore",
          "type": "string",
          "default": "",
          "label": "Ending Before"
        }
      ]
    },
    "getDispute": {
      "display": {
        "label": "Get Dispute",
        "description": "Retrieves the dispute with the given ID."
      },
      "key": "getDispute",
      "inputs": [
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the dispute.",
          "required": true,
          "key": "disputeId",
          "type": "string",
          "default": "",
          "label": "Dispute ID"
        }
      ]
    },
    "updateDispute": {
      "display": {
        "label": "Update Dispute",
        "description": "When you get a dispute, contacting your customer is always the best first step. If that doesn't work, you can submit evidence to help us resolve the dispute in your favor."
      },
      "key": "updateDispute",
      "inputs": [
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the dispute.",
          "required": true,
          "key": "disputeId",
          "type": "string",
          "default": "",
          "label": "Dispute ID"
        },
        {
          "language": "json",
          "example": "{\"cancellation_policy\":\"policy_123456\"}",
          "comments": "Evidence to upload to respond to a dispute.",
          "required": false,
          "key": "evidence",
          "type": "code",
          "default": "",
          "label": "Evidence"
        },
        {
          "comments": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them.",
          "required": false,
          "key": "metadata",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Metadata"
        },
        {
          "comments": "Whether to immediately submit evidence to the bank.",
          "required": false,
          "model": [
            {
              "label": "",
              "value": ""
            },
            {
              "label": "True",
              "value": "true"
            },
            {
              "label": "False",
              "value": "false"
            }
          ],
          "key": "submit",
          "type": "string",
          "default": "",
          "label": "Submit"
        }
      ]
    },
    "closeDispute": {
      "display": {
        "label": "Close Dispute",
        "description": "Closing the dispute for a charge indicates that you do not have any evidence to submit and are essentially dismissing the dispute, acknowledging it as lost."
      },
      "key": "closeDispute",
      "inputs": [
        {
          "comments": "The maximum time a client will await a response.",
          "example": "2000",
          "required": false,
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": true,
          "key": "stripeConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "The ID of the dispute.",
          "required": true,
          "key": "disputeId",
          "type": "string",
          "default": "",
          "label": "Dispute ID"
        }
      ]
    }
  },
  "triggers": {
    "webhook": {
      "display": {
        "label": "Webhook",
        "description": "Trigger for handling webhooks from Stripe"
      },
      "synchronousResponseSupport": "invalid",
      "scheduleSupport": "invalid",
      "examplePayload": {
        "payload": {
          "headers": {
            "accept": "*/*",
            "Content-Type": "application/json; charset=UTF-8",
            "Stripe-Signature": "Example-Stripe-Signature",
            "User-Agent": "Stripe/1.0 (+https://stripe.com/docs/webhooks)",
            "Host": "hooks.example.prismatic.io"
          },
          "body": {
            "data": {
              "id": "evt_example302r",
              "object": "event",
              "api_version": "2020-08-27",
              "created": "103920",
              "data": {
                "id": "example_prod_39u42432",
                "object": "Product",
                "active": "true",
                "created": "123320112",
                "description": "Ths is an example Product Description.",
                "livemode": true,
                "name": "Example Product Name",
                "type": "service"
              }
            },
            "contentType": "application/json; charset=UTF-8"
          },
          "rawBody": {
            "data": {
              "type": "Buffer",
              "data": [
                69,
                120,
                97,
                109,
                112,
                108,
                101
              ]
            }
          },
          "queryParameters": {
            "user_id": "ExampleUserId",
            "user_key": "ExampleUserKey"
          },
          "webhookUrls": {
            "Flow 1": "https://hooks.example.prismatic.io/trigger/EXAMPLEGbG93Q29uZmlnOmRlNmNmNDMyLTliNWMtN0005NDMxLTRmYzA4ZjViODgxOA=="
          },
          "webhookApiKeys": {
            "Flow 1": [
              "abc-123"
            ]
          },
          "customer": {
            "externalId": "customer-example-external-id",
            "name": "John Doe"
          }
        }
      },
      "key": "webhook",
      "inputs": [],
      "documentation": {
        "description": "You can configure a Stripe [event notification webhook](https://stripe.com/docs/webhooks) to send information to a Prismatic webhook URL under certain conditions (a \"Product\" is created, a \"Order\" is updated, etc.).\n\nAdditionally, you can reference a trigger's results.webhookUrls to create a webhook in a deploy-triggered flow. That'll configure webhooks to point to an instance when that instance is deployed to a customer.\n"
      }
    }
  },
  "dataSources": {},
  "documentation": {
    "description": "The **Stripe** component provides functionality for interacting with the Stripe API .\n"
  },
  "$version": 1
}
