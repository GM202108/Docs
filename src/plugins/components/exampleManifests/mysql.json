{
  "key": "mysql",
  "public": true,
  "documentationUrl": "https://prismatic.io/docs/components/mysql/",
  "display": {
    "label": "MySQL",
    "category": "Data Platforms",
    "description": "Query and manage data in a MySQL Database",
    "iconPath": "icon.png",
    "iconBase64": ""
  },
  "connections": [
    {
      "key": "mySQL",
      "label": "MySQL Connection",
      "comments": "Authenticate requests to a MySQL server",
      "inputs": [
        {
          "placeholder": "Host",
          "required": true,
          "shown": true,
          "comments": "The publicly-accessible address of your MySQL server.",
          "key": "host",
          "type": "string",
          "default": "my-server.example.com",
          "label": "Host"
        },
        {
          "placeholder": "Port",
          "required": true,
          "shown": true,
          "comments": "The port your database server is exposing.",
          "key": "port",
          "type": "string",
          "default": "3306",
          "label": "Port"
        },
        {
          "placeholder": "Database",
          "required": true,
          "shown": true,
          "comments": "The name of your database.",
          "key": "database",
          "type": "string",
          "default": "",
          "label": "Database"
        },
        {
          "placeholder": "Username",
          "required": false,
          "shown": true,
          "key": "username",
          "type": "string",
          "default": "",
          "label": "Username"
        },
        {
          "placeholder": "Password",
          "required": false,
          "shown": true,
          "key": "password",
          "type": "password",
          "default": "",
          "label": "Password"
        }
      ],
      "documentation": {
        "description": "Create a new MySQL connection and enter the host, port, and database for your MySQL server.\nThe **username** and **password** are optional inputs that can be put directly into a MySQL connection.\n"
      }
    }
  ],
  "actions": {
    "query": {
      "display": {
        "label": "Query",
        "description": "Returns the results of a MySQL database query"
      },
      "examplePayload": {
        "data": [
          {
            "id": 1,
            "mycolumn1": "foo",
            "mycolumn2": "bar"
          },
          {
            "id": 2,
            "mycolumn1": "foo2",
            "mycolumn2": "bar2"
          }
        ]
      },
      "key": "query",
      "inputs": [
        {
          "language": "mysql",
          "comments": "A query to be executed by the MySQL server. Substitute parameters with '?' marks.",
          "example": "",
          "required": true,
          "key": "queryField",
          "type": "code",
          "default": "SELECT * FROM `table` WHERE `name` = ? AND `age` > ?",
          "label": "Query"
        },
        {
          "comments": "Optional parameters to insert into a query. Use this when you know how many parameters your query uses ahead of time. Use either parameters or reference parameters, not both.",
          "required": false,
          "key": "params",
          "type": "string",
          "default": "",
          "collection": "valuelist",
          "label": "Parameters"
        },
        {
          "comments": "Optional parameters to insert into a query. Use this when you don't know how many parameters your query uses ahead of time. Reference parameters from a previous step that returns an array. Use either parameters or reference parameters, not both.",
          "language": "javascript",
          "example": "[\"foo\",\"bar\"]",
          "key": "referenceParams",
          "type": "code",
          "default": "",
          "label": "Reference Parameters"
        },
        {
          "required": true,
          "key": "mySQLConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    }
  },
  "triggers": {},
  "dataSources": {},
  "documentation": {
    "description": "[MySQL](https://www.mysql.com/) is a popular relational database system.\nThis component allows you to query a MySQL database.\n",
    "dev": "Instead of generating dynamic queries and sanitizing SQL yourself, you can use generic queries with parameter placeholders using the `?` placeholder.\nYou can use the placeholder several times in your query, and provide a list of optional parameters to the action.\nFor example, you can enter a query that reads `INSERT INTO users (name, email) VALUES (?, ?)`.\nThen, configure the optional parameters input to look like the following, `[\"myUsername\", \"myEmail\"]` or whatever values you like.\nValues provided for name and email are sanitized automatically.\n\nIf you are dynamically generating SQL queries and do not know how many parameters you will have ahead of time, create a dynamic array of parameters in another step and reference them through the **Reference Parameters** input.\n"
  },
  "$version": 1
}
