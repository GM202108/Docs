{
  "key": "algolia",
  "documentationUrl": "https://prismatic.io/docs/components/algolia/",
  "public": true,
  "display": {
    "label": "Algolia",
    "category": "Application Connectors",
    "description": "Algolia is an advanced AI search platform.",
    "iconPath": "icon.png",
    "iconBase64": ""
  },
  "connections": [
    {
      "key": "apiKey",
      "label": "Algolia API Key",
      "comments": "Retrieve this from the Algolia dashboard.",
      "inputs": [
        {
          "placeholder": "API Key",
          "required": true,
          "shown": true,
          "comments": "Your Algolia API Key",
          "example": "YourAlgoliaAPIKey",
          "key": "apiKey",
          "type": "string",
          "default": "",
          "label": "API Key"
        },
        {
          "placeholder": "Application ID",
          "required": true,
          "shown": true,
          "comments": "Your Algolia Application ID",
          "example": "YourAlgoliaApplicationId",
          "key": "applicationId",
          "type": "string",
          "default": "",
          "label": "Application ID"
        }
      ],
      "documentation": {
        "description": "\n**API Keys** are necessary for interacting with the Algolia API. API keys are unique to each application you create in Algolia.\n\nTo generate an **API Key**, you should log into Algolia and navigate to your application page. Within the application settings, you can find your API keys.\n\nAlgolia provides three types of API keys:\n\n**Admin API Key**: This key has read and write rights on all indexing and configuration operations.\n\n**Search-Only API Key**: This key has read-only rights on indexing operations and is recommended for use on the frontend.\n\n**Secured API Key**: This key is generated from a search key and has additional rights defined at the time of generation.\n\nFor your integration, you will need both the Admin API Key and the Search-Only API Key.\n\nFor more information about API keys, refer to the [Algolia Docs](https://www.algolia.com/doc/guides/sending-and-managing-data/prepare-your-data/#how-to-get-your-api-keys)."
      }
    }
  ],
  "actions": {
    "getIndex": {
      "display": {
        "label": "Get Index",
        "description": "Get index information"
      },
      "key": "getIndex",
      "inputs": [
        {
          "required": true,
          "key": "algoliaConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "prismatic_query_suggestions",
          "required": true,
          "example": "prismatic_query_suggestions",
          "comments": "Provide a string value for the index name.",
          "key": "indexName",
          "type": "string",
          "default": "",
          "label": "Index Name"
        },
        {
          "placeholder": "query=george%20clo&hitsPerPage=2&getRankingInfo=1",
          "required": false,
          "example": "query=george%20clo&hitsPerPage=2&getRankingInfo=1",
          "comments": "Provide a string value for the query string. This is optional.",
          "key": "queryString",
          "type": "string",
          "default": "",
          "label": "Query String"
        }
      ]
    },
    "searchMultipleIndices": {
      "display": {
        "label": "Search Multiple Indices",
        "description": "Send multiple search queries, potentially targeting multiple indices, in a single API call."
      },
      "key": "searchMultipleIndices",
      "inputs": [
        {
          "required": true,
          "key": "algoliaConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "language": "json",
          "required": true,
          "comments": "Provide a JSON object where each key-value pair represents an index-query pair for the search.",
          "key": "requests",
          "type": "code",
          "default": "[\n  {\n    \"indexName\": \"prismatic\",\n    \"params\": \"filters=objectID:ff68be7beb72da7db241ffeca4b62f09739ef79f\"\n  },\n  {\n    \"indexName\": \"pris-test-2\",\n    \"params\": \"filters=objectID:b5c24740f0b7a94318193ab136fc3d70eea71f1c\"\n  }\n]",
          "label": "Requests"
        },
        {
          "required": true,
          "example": "none",
          "comments": "Provide a strategy. The possible values are 'none' and 'stopIfEnoughMatches'. This is optional.",
          "key": "strategy",
          "type": "string",
          "default": "",
          "label": "Strategy"
        }
      ]
    },
    "rawRequest": {
      "display": {
        "label": "Raw Request",
        "description": "Send a raw HTTP request to Algolia API"
      },
      "key": "rawRequest",
      "inputs": [
        {
          "required": true,
          "key": "algoliaConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "URL to call",
          "required": true,
          "comments": "Input the path only (/1/indexes/{indexName}), The base URL is already included (https://<CONNECTION_INPUT_APPLICATION_ID>.algolia.net). For example, to connect to https://<CONNECTION_INPUT_APPLICATION_ID>.algolia.net/1/indexes/{indexName}, only /1/indexes/{indexName} is entered in this field.",
          "example": "/1/indexes/{indexName}",
          "key": "url",
          "type": "string",
          "default": "",
          "label": "URL"
        },
        {
          "required": true,
          "model": [
            {
              "label": "DELETE",
              "value": "DELETE"
            },
            {
              "label": "GET",
              "value": "GET"
            },
            {
              "label": "HEAD",
              "value": "HEAD"
            },
            {
              "label": "LINK",
              "value": "LINK"
            },
            {
              "label": "OPTIONS",
              "value": "OPTIONS"
            },
            {
              "label": "PATCH",
              "value": "PATCH"
            },
            {
              "label": "POST",
              "value": "POST"
            },
            {
              "label": "PURGE",
              "value": "PURGE"
            },
            {
              "label": "PUT",
              "value": "PUT"
            },
            {
              "label": "UNLINK",
              "value": "UNLINK"
            }
          ],
          "comments": "The HTTP method to use.",
          "key": "method",
          "type": "string",
          "default": "",
          "label": "Method"
        },
        {
          "placeholder": "Data to send",
          "required": false,
          "comments": "The HTTP body payload to send to the URL.",
          "example": "{\"exampleKey\": \"Example Data\"}",
          "key": "data",
          "type": "string",
          "default": "",
          "label": "Data"
        },
        {
          "placeholder": "Data to send",
          "required": false,
          "comments": "The Form Data to be sent as a multipart form upload.",
          "example": "[{\"key\": \"Example Key\", \"value\": new Buffer(\"Hello World\")}]",
          "key": "formData",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Form Data"
        },
        {
          "placeholder": "Data to send",
          "required": false,
          "comments": "File Data to be sent as a multipart form upload.",
          "example": "[{key: \"example.txt\", value: \"My File Contents\"}]",
          "key": "fileData",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "File Data"
        },
        {
          "placeholder": "The file name to apply to a file",
          "required": false,
          "comments": "File names to apply to the file data inputs. Keys must match the file data keys above.",
          "key": "fileDataFileNames",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "File Data File Names"
        },
        {
          "placeholder": "Query Parameter",
          "required": false,
          "comments": "A list of query parameters to send with the request. This is the portion at the end of the URL similar to ?key1=value1&key2=value2.",
          "key": "queryParams",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Query Parameter"
        },
        {
          "placeholder": "Header",
          "required": false,
          "comments": "A list of headers to send with the request.",
          "example": "User-Agent: curl/7.64.1",
          "key": "headers",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Header"
        },
        {
          "placeholder": "Response Type",
          "required": true,
          "comments": "The type of data you expect in the response. You can request json, text, or binary data.",
          "model": [
            {
              "label": "arraybuffer",
              "value": "arraybuffer"
            },
            {
              "label": "document",
              "value": "document"
            },
            {
              "label": "json",
              "value": "json"
            },
            {
              "label": "text",
              "value": "text"
            }
          ],
          "key": "responseType",
          "type": "string",
          "default": "json",
          "label": "Response Type"
        },
        {
          "required": false,
          "comments": "The maximum time that a client will await a response to its request",
          "example": "2000",
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        },
        {
          "placeholder": "Retry Delay",
          "required": false,
          "comments": "The delay in milliseconds between retries.",
          "key": "retryDelayMS",
          "type": "string",
          "default": "0",
          "label": "Retry Delay (ms)"
        },
        {
          "required": false,
          "comments": "If true, retries on all erroneous responses regardless of type.",
          "key": "retryAllErrors",
          "type": "boolean",
          "default": "false",
          "label": "Retry On All Errors"
        },
        {
          "placeholder": "Max Retries",
          "required": false,
          "comments": "The maximum number of retries to attempt.",
          "key": "maxRetries",
          "type": "string",
          "default": "0",
          "label": "Max Retry Count"
        },
        {
          "required": false,
          "comments": "Specifies whether to use a pre-defined exponential backoff strategy for retries.",
          "key": "useExponentialBackoff",
          "type": "boolean",
          "default": "false",
          "label": "Use Exponential Backoff"
        }
      ]
    },
    "searchFacetValues": {
      "display": {
        "label": "Search Facet Values",
        "description": "Search for values of a given facet."
      },
      "key": "searchFacetValues",
      "inputs": [
        {
          "required": true,
          "key": "algoliaConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "prismatic_query_suggestions",
          "required": true,
          "example": "prismatic_query_suggestions",
          "comments": "Provide a string value for the index name.",
          "key": "indexName",
          "type": "string",
          "default": "",
          "label": "Index Name"
        },
        {
          "placeholder": "hierarchy.lvl0",
          "required": true,
          "example": "example_facet",
          "comments": "Provide a string value for the facet name.",
          "key": "facetName",
          "type": "string",
          "default": "",
          "label": "Facet Name"
        },
        {
          "placeholder": "Articles",
          "required": false,
          "example": "example_query",
          "comments": "Provide a string value for the facet query. This is optional.",
          "key": "facetQuery",
          "type": "string",
          "default": "",
          "label": "Facet Query"
        },
        {
          "placeholder": "10",
          "required": false,
          "example": "10",
          "comments": "Provide a number for the maximum number of facet hits to return. This is optional.",
          "key": "maxFacetHits",
          "type": "string",
          "default": "",
          "label": "Max Facet Hits"
        }
      ]
    },
    "browseIndex": {
      "display": {
        "label": "Browse Index",
        "description": "Retrieve all objects from an index."
      },
      "key": "browseIndex",
      "inputs": [
        {
          "required": true,
          "key": "algoliaConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "prismatic_query_suggestions",
          "required": true,
          "example": "prismatic_query_suggestions",
          "comments": "Provide a string value for the index name.",
          "key": "indexName",
          "type": "string",
          "default": "",
          "label": "Index Name"
        },
        {
          "placeholder": "filters=language:en",
          "required": false,
          "example": "filters=language:en",
          "comments": "Provide a URL-encoded string for search parameters. This is optional.",
          "key": "params",
          "type": "string",
          "default": "",
          "label": "Search Parameters"
        },
        {
          "placeholder": "example_cursor",
          "required": false,
          "example": "cursor:AhNmaWx0ZXJzPWxhbmd1YWdlOmVuAgEoMjAyMjJlNjNjNjliZGQ1NWRkYzcyOGU3Y2M4M2M2ZDRiODI3ZmQ1Mw==",
          "comments": "Provide a string value for the cursor. This is optional.",
          "key": "cursor",
          "type": "string",
          "default": "",
          "label": "Cursor"
        }
      ]
    },
    "copySettings": {
      "display": {
        "label": "Copy Settings",
        "description": "Copy the settings of an index to another index on the same app."
      },
      "examplePayload": {
        "data": {
          "updatedAt": "2013-08-21T13:20:18.960Z",
          "taskID": 10210332
        }
      },
      "key": "copySettings",
      "inputs": [
        {
          "required": true,
          "key": "algoliaConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "prismatic_query_suggestions",
          "required": true,
          "example": "prismatic_query_suggestions",
          "comments": "The index to copy the settings from.",
          "key": "indexFrom",
          "type": "string",
          "default": "",
          "label": "Index From"
        },
        {
          "placeholder": "prismatic_query_suggestions",
          "required": true,
          "example": "prismatic_query_suggestions",
          "comments": "The index to copy the settings to.",
          "key": "indexTo",
          "type": "string",
          "default": "",
          "label": "Index To"
        }
      ]
    },
    "getSettings": {
      "display": {
        "label": "Get Settings",
        "description": "Get the settings of an index."
      },
      "examplePayload": {
        "data": {
          "minWordSizefor1Typo": 4,
          "minWordSizefor2Typos": 8,
          "hitsPerPage": 20,
          "searchableAttributes": null,
          "attributesToRetrieve": null,
          "attributesToSnippet": null,
          "attributesToHighlight": null,
          "ranking": [
            "typo",
            "geo",
            "words",
            "proximity",
            "attribute",
            "exact",
            "custom"
          ],
          "customRanking": null,
          "separatorsToIndex": "",
          "queryType": "prefixAll"
        }
      },
      "key": "getSettings",
      "inputs": [
        {
          "required": true,
          "key": "algoliaConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "prismatic_query_suggestions",
          "required": true,
          "example": "prismatic_query_suggestions",
          "comments": "Provide a string value for the index name.",
          "key": "indexName",
          "type": "string",
          "default": "",
          "label": "Index Name"
        }
      ]
    },
    "setSettings": {
      "display": {
        "label": "Set Settings",
        "description": "Change an index's settings."
      },
      "examplePayload": {
        "data": {
          "updatedAt": "2013-08-21T13:20:18.960Z",
          "taskID": 10210332
        }
      },
      "key": "setSettings",
      "inputs": [
        {
          "required": true,
          "key": "algoliaConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "prismatic_query_suggestions",
          "required": true,
          "example": "prismatic_query_suggestions",
          "comments": "Provide a string value for the index name.",
          "key": "indexName",
          "type": "string",
          "default": "",
          "label": "Index Name"
        },
        {
          "language": "json",
          "example": "{\"searchableAttributes\":[\"name\",\"address\"],\"customRanking\":[\"desc(followers)\"]}",
          "required": true,
          "comments": "A mapping of settings parameters you can use on an index.",
          "key": "settings",
          "type": "code",
          "default": "",
          "label": "Settings"
        },
        {
          "required": false,
          "comments": "The change is also propagated to replicas of this index.",
          "key": "forwardToReplicas",
          "type": "boolean",
          "default": false,
          "label": "Forward to Replicas"
        }
      ]
    },
    "copyIndex": {
      "display": {
        "label": "Copy Index",
        "description": "Copy an index, including its records, Synonyms, Rules, and settings (except for enableReRanking)."
      },
      "examplePayload": {
        "data": {
          "updatedAt": "2013-08-21T13:20:18.960Z",
          "taskID": 10210332
        }
      },
      "key": "copyIndex",
      "inputs": [
        {
          "required": true,
          "key": "algoliaConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "prismatic_query_suggestions",
          "required": true,
          "example": "prismatic_query_suggestions",
          "comments": "The index to copy from.",
          "key": "indexFrom",
          "type": "string",
          "default": "",
          "label": "Index From"
        },
        {
          "placeholder": "prismatic_query_suggestions",
          "required": true,
          "example": "prismatic_query_suggestions",
          "comments": "The index to copy to.",
          "key": "indexTo",
          "type": "string",
          "default": "",
          "label": "Index To"
        }
      ]
    },
    "listIndexes": {
      "display": {
        "label": "List Indices",
        "description": "Get a list of indices with their associated metadata."
      },
      "examplePayload": {
        "data": {
          "items": [
            {
              "name": "contacts",
              "createdAt": "2013-08-15T19:49:47.714Z",
              "updatedAt": "2013-08-17T07:59:28.313Z",
              "entries": 2436442,
              "dataSize": 224152664,
              "fileSize": 269450853,
              "lastBuildTimeS": 0,
              "numberOfPendingTask": 0,
              "pendingTask": false
            }
          ],
          "nbPages": 1
        }
      },
      "key": "listIndexes",
      "inputs": [
        {
          "required": true,
          "key": "algoliaConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "Retrieve a specific page. Pages are zero-based. The page size is set to 100. This parameter isn’t set by default, and all indices are retrieved at once.",
          "key": "page",
          "type": "string",
          "default": "",
          "label": "Page"
        }
      ]
    },
    "deleteIndex": {
      "display": {
        "label": "Delete Index",
        "description": "Delete an index."
      },
      "examplePayload": {
        "data": {
          "deletedAt": "2013-01-18T15:33:13.556Z",
          "taskID": 721
        }
      },
      "key": "deleteIndex",
      "inputs": [
        {
          "required": true,
          "key": "algoliaConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "prismatic_query_suggestions",
          "required": true,
          "example": "prismatic_query_suggestions",
          "comments": "The index name to delete.",
          "key": "indexName",
          "type": "string",
          "default": "",
          "label": "Index Name"
        }
      ]
    },
    "moveIndex": {
      "display": {
        "label": "Move Index",
        "description": "Move or rename an index."
      },
      "examplePayload": {
        "data": {
          "updatedAt": "2013-08-21T13:20:18.960Z",
          "taskID": 10210332
        }
      },
      "key": "moveIndex",
      "inputs": [
        {
          "required": true,
          "key": "algoliaConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "prismatic_query_suggestions",
          "required": true,
          "example": "prismatic_query_suggestions",
          "comments": "The index to move from.",
          "key": "indexFrom",
          "type": "string",
          "default": "",
          "label": "Index From"
        },
        {
          "placeholder": "prismatic_query_suggestions",
          "required": true,
          "example": "prismatic_query_suggestions",
          "comments": "The index to move to.",
          "key": "indexTo",
          "type": "string",
          "default": "",
          "label": "Index To"
        }
      ]
    },
    "updateBatchIndices": {
      "display": {
        "label": "Update Batch Indices",
        "description": "This method enables you to batch multiple different indexing operations in one API call, like add or delete objects, potentially targeting multiple indices."
      },
      "examplePayload": {
        "data": {
          "taskID": {
            "contacts": 792,
            "public_contacts": 793
          },
          "objectIDs": [
            "6891",
            "6892"
          ]
        }
      },
      "key": "updateBatchIndices",
      "inputs": [
        {
          "required": true,
          "key": "algoliaConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "language": "json",
          "example": "[{\"action\":\"addObject\",\"indexName\":\"contacts\",\"body\":{\"name\":\"Betty Jane Mccamey\",\"company\":\"Vita Foods Inc.\",\"email\":\"betty@mccamey.com\"}},{\"action\":\"addObject\",\"indexName\":\"public_contacts\",\"body\":{\"name\":\"Gayla Geimer\",\"company\":\"Ortman Mccain Co\",\"email\":\"gayla@geimer.com\"}}]",
          "required": true,
          "comments": "An array of operations to batch.",
          "key": "requests",
          "type": "code",
          "default": "",
          "label": "Requests"
        }
      ]
    }
  },
  "triggers": {},
  "dataSources": {},
  "documentation": {
    "description": "[Algolia](https://www.algolia.com/es/) is a powerful and flexible search and discovery API, trusted by thousands of developers for delivering relevant search results in real-time.\n\nUse the Algolia component to interact with your Algolia indexes, manage records, and perform search operations in your Algolia account.",
    "dev": "### A Note on Algolia Search Results Pagination\n\nAlgolia's Search API supports pagination.\n\nThis means that the API will return a certain number of hits for any search query. If additional results are available, the API response includes a `nbPages` field that indicates the total number of pages.\n\n```json\n{\n  \"hits\": [],\n  \"nbHits\": 100,\n  \"page\": 0,\n  \"nbPages\": 20\n}\n```\n\nThe `page` parameter can be used in a subsequent query to fetch additional results.\n\nSee [Algolia's Docs](https://www.algolia.com/doc/guides/sending-and-managing-data/send-and-update-your-data/) for information about Algolia's paginated search API, and [this quickstart](quickstarts/looping-over-a-paginated-api.mdx) for information on looping over a paginated API in Prismatic.\n"
  },
  "$version": 1
}
