{
  "key": "ms-excel",
  "public": true,
  "documentationUrl": "https://prismatic.io/docs/components/ms-excel/",
  "display": {
    "category": "Data Platforms",
    "label": "Microsoft Excel",
    "description": "Parse and build .xlsx files (spreadsheets)",
    "iconPath": "icon.png",
    "iconBase64": ""
  },
  "connections": [],
  "actions": {
    "parse": {
      "display": {
        "label": "Read From URL",
        "description": "Parse an xlsx file from a URL endpoint, outputs an array of worksheets"
      },
      "key": "parse",
      "inputs": [
        {
          "required": true,
          "key": "fileUrl",
          "type": "string",
          "default": "",
          "label": "File URL"
        }
      ]
    },
    "build": {
      "display": {
        "label": "Build Spreadsheet",
        "description": "Creates a buffer containing a spreadsheet made from a 2D JavaScript array,"
      },
      "examplePayload": {
        "data": {
          "type": "Buffer",
          "data": [
            115,
            97,
            109,
            112,
            108,
            101,
            66,
            117,
            102,
            102,
            101,
            114
          ]
        }
      },
      "key": "build",
      "inputs": [
        {
          "example": "[ [1,2,3,4,5], [] ]",
          "comments": "For each item, provide a list of items representing the items to be inserted.",
          "required": true,
          "key": "sheetData",
          "type": "code",
          "default": "",
          "label": "Spreadsheet Data"
        },
        {
          "example": "mySheet",
          "comments": "Provide a string value for the name of the file.",
          "required": true,
          "key": "fileName",
          "type": "string",
          "default": "",
          "label": "File Name"
        },
        {
          "example": "{'!cols': [{ wch: 6 }, { wch: 7 }, { wch: 10 }, { wch: 20 } ]};",
          "required": false,
          "comments": "Here you can provide several configuration options for turning the array into a spreadsheet. For more information on possible configurations, see the documentation for the node library this component was built with. https://www.npmjs.com/package/node-xlsx",
          "key": "createOptions",
          "type": "code",
          "default": "",
          "label": "Create Options"
        }
      ]
    },
    "parseBuffer": {
      "display": {
        "label": "Read From Buffer",
        "description": "Parse an xlsx file from a Buffer, outputs an array of worksheets"
      },
      "key": "parseBuffer",
      "inputs": [
        {
          "comments": "Provide a Spreadsheet (file/buffer) to be parsed into array values.",
          "required": true,
          "key": "file",
          "type": "string",
          "default": "",
          "label": "File"
        }
      ]
    }
  },
  "triggers": {},
  "dataSources": {
    "sheetSelect": {
      "display": {
        "label": "Select Sheet",
        "description": ""
      },
      "dataSourceType": "jsonForm",
      "key": "sheetSelect",
      "inputs": [
        {
          "required": true,
          "key": "fileUrl",
          "type": "string",
          "default": "",
          "label": "File URL"
        }
      ]
    }
  },
  "documentation": {
    "description": "[Microsoft Excel](https://www.microsoft.com/en-us/microsoft-365/excel) is a spreadsheet application developed by Microsoft. It features calculation, graphing tools, pivot tables, and a macro programming language called Visual Basic for Applications.\nThis component allows you to read and build .xlsx files. (spreadsheets)\n"
  },
  "$version": 1
}
