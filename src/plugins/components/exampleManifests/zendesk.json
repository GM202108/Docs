{
  "key": "zendesk",
  "public": true,
  "documentationUrl": "https://prismatic.io/docs/components/zendesk/",
  "display": {
    "label": "Zendesk",
    "category": "Application Connectors",
    "description": "Manage Tickets and users in Zendesk",
    "iconPath": "icon.png",
    "iconBase64": ""
  },
  "connections": [
    {
      "oauth2Type": "authorization_code",
      "key": "oauth2",
      "label": "Zendesk Connection",
      "comments": "Authenticates requests to Zendesk using an OAuth 2.0 connection.",
      "inputs": [
        {
          "placeholder": "Authorize URL",
          "required": true,
          "shown": true,
          "comments": "The OAuth 2.0 Authorization URL for Zendesk",
          "example": "https://acme-inc.zendesk.com/oauth/authorizations/new",
          "key": "authorizeUrl",
          "type": "string",
          "default": "https://YOUR-ZENDESK-DOMAIN.zendesk.com/oauth/authorizations/new",
          "label": "Authorize URL"
        },
        {
          "placeholder": "Token URL",
          "required": true,
          "shown": true,
          "comments": "The OAuth 2.0 Token URL for Zendesk",
          "example": "https://acme-inc.zendesk.com/oauth/tokens",
          "key": "tokenUrl",
          "type": "string",
          "default": "https://YOUR-ZENDESK-DOMAIN.zendesk.com/oauth/tokens",
          "label": "Token URL"
        },
        {
          "placeholder": "Scopes",
          "required": true,
          "shown": true,
          "comments": "A space-delimited set of one or more scopes to get the user's permission to access.",
          "example": "read write",
          "key": "scopes",
          "type": "string",
          "default": "read write",
          "label": "Scopes"
        },
        {
          "placeholder": "Client ID",
          "required": true,
          "shown": true,
          "key": "clientId",
          "type": "string",
          "default": "",
          "label": "Client ID"
        },
        {
          "placeholder": "Client Secret",
          "required": true,
          "shown": true,
          "key": "clientSecret",
          "type": "password",
          "default": "",
          "label": "Client Secret"
        }
      ],
      "documentation": {
        "description": "The Zendesk component authenticates requests with OAuth 2.0.\nTo configure an application inside zendesk follow the directions in this [guide](https://support.zendesk.com/hc/en-us/articles/4408845965210-Using-OAuth-authentication-with-your-application)\nNow, you will have to create a new Zendesk connection in Prismatic.\n\n-   For **Client ID** enter in the unique identifier of your app inside the Zendesk admin dashboard.\n    For **Client Secret** enter the generated client secret you received from the Zendesk admin dashboard.\n-   For **Scopes** refer to the [guide](https://support.zendesk.com/hc/en-us/articles/4408845965210-Using-OAuth-authentication-with-your-application) that was linked above. There is detailed information on picking the correct scope.\n\nYou can find your subdomain inside of your Zendesk URL: https://{YOUR SUBDOMAIN HERE}.zendesk.com/\n"
      }
    }
  ],
  "actions": {
    "createTicket": {
      "display": {
        "label": "Create Ticket",
        "description": "Create a new ticket"
      },
      "key": "createTicket",
      "inputs": [
        {
          "example": "John Doe",
          "required": true,
          "comments": "provide a string value for the name of the requester.",
          "key": "requesterName",
          "type": "string",
          "default": "",
          "label": "Requester Name"
        },
        {
          "example": "John.Doe@example-email.com",
          "required": true,
          "comments": "Provide a string value for the email of the requester.",
          "key": "requesterEmail",
          "type": "string",
          "default": "",
          "label": "Requester Email"
        },
        {
          "example": "403598029853443232",
          "required": false,
          "comments": "Provide a valid user id for the assignee of the ticket.",
          "key": "assigneeId",
          "type": "string",
          "default": "",
          "label": "Assignee Id"
        },
        {
          "example": "Jane.Doe@example-prismatic.io",
          "required": false,
          "comments": "Provide a string value for the name of the recipient.",
          "key": "recipientEmail",
          "type": "string",
          "default": "",
          "label": "Recipient Email"
        },
        {
          "required": false,
          "example": "This is an example ticket subject.",
          "comments": "Provide a string value for the subject of the ticket",
          "key": "ticketSubject",
          "type": "string",
          "default": "",
          "label": "Ticket Subject"
        },
        {
          "required": false,
          "model": [
            {
              "label": "High",
              "value": "high"
            },
            {
              "label": "Low",
              "value": "low"
            },
            {
              "label": "Normal",
              "value": "normal"
            },
            {
              "label": "Urgent",
              "value": "urgent"
            }
          ],
          "comments": "Provide a string value for the priority of the ticket.",
          "key": "ticketPriority",
          "type": "string",
          "default": "",
          "label": "Ticket Priority"
        },
        {
          "required": false,
          "model": [
            {
              "label": "Closed",
              "value": "closed"
            },
            {
              "label": "Hold",
              "value": "hold"
            },
            {
              "label": "New",
              "value": "new"
            },
            {
              "label": "Open",
              "value": "open"
            },
            {
              "label": "Pending",
              "value": "pending"
            },
            {
              "label": "Solved",
              "value": "solved"
            }
          ],
          "comments": "Provide a string value for the status of the ticket.",
          "key": "ticketStatus",
          "type": "string",
          "default": "",
          "label": "Ticket Status"
        },
        {
          "example": "This is an example Comment.",
          "required": false,
          "comments": "When creating a ticket, this field can be used to give a ticket description. It will also leave a comment on the ticket from the assignee.",
          "key": "ticketComment",
          "type": "string",
          "default": "",
          "label": "Ticket Comment Body"
        },
        {
          "example": "<p>This is an example Comment.</p>",
          "required": false,
          "comments": "When creating a ticket, this field can be used to give a ticket description using HTML. It will also leave a comment on the ticket from the assignee.",
          "key": "ticketCommentHTML",
          "type": "string",
          "default": "",
          "label": "Ticket Comment HTML Body"
        },
        {
          "example": "Engineering",
          "required": false,
          "comments": "For each item, provide a string value for the tag.",
          "key": "tags",
          "type": "string",
          "default": "",
          "collection": "valuelist",
          "label": "Tags"
        },
        {
          "required": false,
          "model": [
            {
              "label": "Incident",
              "value": "Incident"
            },
            {
              "label": "Problem",
              "value": "Problem"
            },
            {
              "label": "Question",
              "value": "Question"
            },
            {
              "label": "Task",
              "value": "Task"
            }
          ],
          "comments": "Provide a string value for the type of the ticket.",
          "key": "ticketType",
          "type": "string",
          "default": "",
          "label": "Ticket Type"
        },
        {
          "required": false,
          "example": "488042375842",
          "comments": "Provide an integer value to specify the Organization of the requester.",
          "key": "requesterOrganization",
          "type": "string",
          "default": "",
          "label": "Requester Organization Id"
        },
        {
          "required": false,
          "example": "488042375842",
          "comments": "For each item provide a unique identifier of the follower you want to add to the issue.",
          "key": "followers",
          "type": "string",
          "default": "",
          "collection": "valuelist",
          "label": "Followers"
        },
        {
          "required": true,
          "key": "zendeskConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "The ID of this issue from an external system",
          "key": "externalId",
          "type": "string",
          "default": "",
          "label": "External ID"
        },
        {
          "required": false,
          "comments": "This flag toggles debugging. When true the integration will log any requests and failures.",
          "key": "debug",
          "type": "boolean",
          "default": "false",
          "label": "Debug"
        }
      ]
    },
    "listTickets": {
      "display": {
        "label": "List Tickets",
        "description": "List all Tickets"
      },
      "key": "listTickets",
      "inputs": [
        {
          "required": true,
          "key": "zendeskConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "This flag toggles debugging. When true the integration will log any requests and failures.",
          "key": "debug",
          "type": "boolean",
          "default": "false",
          "label": "Debug"
        }
      ]
    },
    "getByExternalId": {
      "display": {
        "label": "Get Ticket By External ID",
        "description": "Get a ticket by external ID"
      },
      "key": "getByExternalId",
      "inputs": [
        {
          "required": true,
          "key": "zendeskConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "This flag toggles debugging. When true the integration will log any requests and failures.",
          "key": "debug",
          "type": "boolean",
          "default": "false",
          "label": "Debug"
        },
        {
          "required": false,
          "comments": "The ID of this issue from an external system",
          "key": "externalId",
          "type": "string",
          "default": "",
          "label": "External ID"
        }
      ]
    },
    "showTicket": {
      "display": {
        "label": "Show Ticket",
        "description": "Get the information and metadata of a ticket by Id"
      },
      "key": "showTicket",
      "inputs": [
        {
          "example": "ExampleTicketId",
          "required": true,
          "comments": "Provide the unique identifier for the ticket you would like to show.",
          "key": "ticketId",
          "type": "string",
          "default": "",
          "label": "Ticket Id"
        },
        {
          "required": true,
          "key": "zendeskConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "This flag toggles debugging. When true the integration will log any requests and failures.",
          "key": "debug",
          "type": "boolean",
          "default": "false",
          "label": "Debug"
        }
      ]
    },
    "deleteTicket": {
      "display": {
        "label": "Delete Ticket",
        "description": "Delete the information and metadata of a ticket by Id"
      },
      "key": "deleteTicket",
      "inputs": [
        {
          "example": "ExampleTicketId",
          "required": true,
          "comments": "Provide the unique identifier for the ticket you would like to show.",
          "key": "ticketId",
          "type": "string",
          "default": "",
          "label": "Ticket Id"
        },
        {
          "required": true,
          "key": "zendeskConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "This flag toggles debugging. When true the integration will log any requests and failures.",
          "key": "debug",
          "type": "boolean",
          "default": "false",
          "label": "Debug"
        }
      ]
    },
    "updateTicket": {
      "display": {
        "label": "Update Ticket",
        "description": "Update the information and metadata of a ticket by Id"
      },
      "key": "updateTicket",
      "inputs": [
        {
          "example": "ExampleTicketId",
          "required": true,
          "comments": "Provide the unique identifier for the ticket you would like to show.",
          "key": "ticketId",
          "type": "string",
          "default": "",
          "label": "Ticket Id"
        },
        {
          "example": "This is an example Comment.",
          "required": false,
          "comments": "When creating a ticket, this field can be used to give a ticket description. It will also leave a comment on the ticket from the assignee.",
          "key": "ticketComment",
          "type": "string",
          "default": "",
          "label": "Ticket Comment Body"
        },
        {
          "example": "<p>This is an example Comment.</p>",
          "required": false,
          "comments": "When creating a ticket, this field can be used to give a ticket description using HTML. It will also leave a comment on the ticket from the assignee.",
          "key": "ticketCommentHTML",
          "type": "string",
          "default": "",
          "label": "Ticket Comment HTML Body"
        },
        {
          "required": false,
          "comments": "The file to attach to the comment - either string contents or a binary file",
          "key": "file",
          "type": "data",
          "default": "",
          "label": "File"
        },
        {
          "required": false,
          "comments": "The name of the file to upload",
          "key": "fileName",
          "type": "string",
          "default": "",
          "label": "File Name"
        },
        {
          "required": false,
          "model": [
            {
              "label": "Closed",
              "value": "closed"
            },
            {
              "label": "Hold",
              "value": "hold"
            },
            {
              "label": "New",
              "value": "new"
            },
            {
              "label": "Open",
              "value": "open"
            },
            {
              "label": "Pending",
              "value": "pending"
            },
            {
              "label": "Solved",
              "value": "solved"
            }
          ],
          "comments": "Provide a string value for the status of the ticket.",
          "key": "ticketStatus",
          "type": "string",
          "default": "",
          "label": "Ticket Status"
        },
        {
          "example": "Jane.Doe@example-prismatic.io",
          "required": false,
          "comments": "Provide a valid email for the assignee of the ticket.",
          "key": "assigneeEmail",
          "type": "string",
          "default": "",
          "label": "Assignee Email"
        },
        {
          "example": "403598029853443232",
          "required": false,
          "comments": "Provide a valid user id for the assignee of the ticket.",
          "key": "assigneeId",
          "type": "string",
          "default": "",
          "label": "Assignee Id"
        },
        {
          "example": "Engineering",
          "required": false,
          "comments": "For each item, provide a string value for the tag.",
          "key": "tags",
          "type": "string",
          "default": "",
          "collection": "valuelist",
          "label": "Tags"
        },
        {
          "required": false,
          "model": [
            {
              "label": "Incident",
              "value": "Incident"
            },
            {
              "label": "Problem",
              "value": "Problem"
            },
            {
              "label": "Question",
              "value": "Question"
            },
            {
              "label": "Task",
              "value": "Task"
            }
          ],
          "comments": "Provide a string value for the type of the ticket.",
          "key": "ticketType",
          "type": "string",
          "default": "",
          "label": "Ticket Type"
        },
        {
          "required": false,
          "example": "This is an example ticket subject.",
          "comments": "Provide a string value for the subject of the ticket",
          "key": "ticketSubject",
          "type": "string",
          "default": "",
          "label": "Ticket Subject"
        },
        {
          "required": false,
          "model": [
            {
              "label": "High",
              "value": "high"
            },
            {
              "label": "Low",
              "value": "low"
            },
            {
              "label": "Normal",
              "value": "normal"
            },
            {
              "label": "Urgent",
              "value": "urgent"
            }
          ],
          "comments": "Provide a string value for the priority of the ticket.",
          "key": "ticketPriority",
          "type": "string",
          "default": "",
          "label": "Ticket Priority"
        },
        {
          "required": false,
          "example": "488042375842",
          "comments": "Provide an integer value to specify the Organization of the requester.",
          "key": "requesterOrganization",
          "type": "string",
          "default": "",
          "label": "Requester Organization Id"
        },
        {
          "required": true,
          "key": "zendeskConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "This flag toggles debugging. When true the integration will log any requests and failures.",
          "key": "debug",
          "type": "boolean",
          "default": "false",
          "label": "Debug"
        }
      ]
    },
    "createUser": {
      "display": {
        "label": "Create User",
        "description": "Create a new user"
      },
      "key": "createUser",
      "inputs": [
        {
          "required": true,
          "comments": "Provide a string value for the name of the user.",
          "example": "John Doe",
          "key": "userName",
          "type": "string",
          "default": "",
          "label": "Name"
        },
        {
          "required": true,
          "comments": "Provide a valid email address for the user. Make sure this value does not conflict with any other users in your Zendesk Domain",
          "example": "someone@example-prismatic.io",
          "key": "userEmail",
          "type": "string",
          "default": "",
          "label": "Email Address"
        },
        {
          "required": false,
          "comments": "Provide which level of permissions the user is granted.",
          "model": [
            {
              "label": "Admin",
              "value": "admin"
            },
            {
              "label": "Agent",
              "value": "agent"
            },
            {
              "label": "End User",
              "value": "end-user"
            }
          ],
          "key": "userRole",
          "type": "string",
          "default": "",
          "label": "User Role"
        },
        {
          "required": false,
          "comments": "Provide a valid phone number for the user.",
          "example": "15554008989",
          "key": "userPhone",
          "type": "string",
          "default": "",
          "label": "Phone Number"
        },
        {
          "required": false,
          "comments": "A unique identifier from another system. The API treats the id as case sensitive. Example: \"ian1\" and \"Ian1\" are different users",
          "key": "externalId",
          "type": "string",
          "default": "",
          "label": "External Id"
        },
        {
          "required": false,
          "comments": "Provide a string value that represents notes to be attached to the user.",
          "example": "These are some example notes.",
          "key": "userNotes",
          "type": "string",
          "default": "",
          "label": "Notes"
        },
        {
          "required": false,
          "comments": "Provide a string value that represents details to be attached to the user.",
          "example": "These are some example user details",
          "key": "userDetails",
          "type": "string",
          "default": "",
          "label": "Details"
        },
        {
          "required": false,
          "comments": "This flag specifies whether or not the user will have moderator permissions.",
          "key": "isModerator",
          "type": "boolean",
          "default": "false",
          "label": "Moderator"
        },
        {
          "required": false,
          "comments": "Provide a string value that represents an alias to give to a user.",
          "example": "Example Alias",
          "key": "userAlias",
          "type": "string",
          "default": "",
          "label": "Alias"
        },
        {
          "required": false,
          "comments": "Flip this flag to true if any of the user's identities is verified.",
          "key": "isVerified",
          "type": "boolean",
          "default": "false",
          "label": "Verified"
        },
        {
          "required": false,
          "comments": "Provide the unique identifier of the organization.",
          "key": "organizationId",
          "type": "string",
          "default": "",
          "label": "Organization Id"
        },
        {
          "required": true,
          "key": "zendeskConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "This flag toggles debugging. When true the integration will log any requests and failures.",
          "key": "debug",
          "type": "boolean",
          "default": "false",
          "label": "Debug"
        }
      ]
    },
    "updateUser": {
      "display": {
        "label": "Update User",
        "description": "Update the information and metadata of a user by Id"
      },
      "key": "updateUser",
      "inputs": [
        {
          "required": true,
          "example": "488042375842",
          "comments": "Provide an integer value for the unique identifier of the user.",
          "key": "userId",
          "type": "string",
          "default": "",
          "label": "UserId"
        },
        {
          "required": false,
          "comments": "Provide which level of permissions the user is granted.",
          "model": [
            {
              "label": "Admin",
              "value": "admin"
            },
            {
              "label": "Agent",
              "value": "agent"
            },
            {
              "label": "End User",
              "value": "end-user"
            }
          ],
          "key": "userRole",
          "type": "string",
          "default": "",
          "label": "User Role"
        },
        {
          "required": false,
          "comments": "Provide a string value for the name of the user.",
          "example": "John Doe",
          "key": "userName",
          "type": "string",
          "default": "",
          "label": "Name"
        },
        {
          "required": false,
          "comments": "Provide a valid email address for the user. Make sure this value does not conflict with any other users in your Zendesk Domain",
          "example": "someone@example-prismatic.io",
          "key": "userEmail",
          "type": "string",
          "default": "",
          "label": "Email Address"
        },
        {
          "required": false,
          "comments": "Provide a valid phone number for the user.",
          "example": "15554008989",
          "key": "userPhone",
          "type": "string",
          "default": "",
          "label": "Phone Number"
        },
        {
          "required": false,
          "comments": "A unique identifier from another system. The API treats the id as case sensitive. Example: \"ian1\" and \"Ian1\" are different users",
          "key": "externalId",
          "type": "string",
          "default": "",
          "label": "External Id"
        },
        {
          "required": false,
          "comments": "Provide a string value that represents notes to be attached to the user.",
          "example": "These are some example notes.",
          "key": "userNotes",
          "type": "string",
          "default": "",
          "label": "Notes"
        },
        {
          "required": false,
          "comments": "Provide a string value that represents details to be attached to the user.",
          "example": "These are some example user details",
          "key": "userDetails",
          "type": "string",
          "default": "",
          "label": "Details"
        },
        {
          "required": false,
          "comments": "This flag specifies whether or not the user will have moderator permissions.",
          "key": "isModerator",
          "type": "boolean",
          "default": "false",
          "label": "Moderator"
        },
        {
          "required": false,
          "comments": "Provide a string value that represents an alias to give to a user.",
          "example": "Example Alias",
          "key": "userAlias",
          "type": "string",
          "default": "",
          "label": "Alias"
        },
        {
          "required": false,
          "comments": "Provide a valid timezone that the user operates in.",
          "example": "Berlin",
          "key": "userTimeZone",
          "type": "string",
          "default": "",
          "label": "Time Zone"
        },
        {
          "required": false,
          "comments": "Flip this flag to true if any of the user's identities is verified.",
          "key": "isVerified",
          "type": "boolean",
          "default": "false",
          "label": "Verified"
        },
        {
          "required": false,
          "comments": "Provide the unique identifier of the organization.",
          "key": "organizationId",
          "type": "string",
          "default": "",
          "label": "Organization Id"
        },
        {
          "required": true,
          "key": "zendeskConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "This flag toggles debugging. When true the integration will log any requests and failures.",
          "key": "debug",
          "type": "boolean",
          "default": "false",
          "label": "Debug"
        }
      ],
      "documentation": {
        "description": "Updating a user's 'User Role' from a end-user to administrator may cause a failed execution.\nFor more information refer to the [user permissions guide](https://support.zendesk.com/hc/en-us/articles/4408883763866-Understanding-Zendesk-Support-user-roles) in the Zendesk docs.\n"
      }
    },
    "deleteUser": {
      "display": {
        "label": "Delete User",
        "description": "Delete the information and metadata of a user by Id"
      },
      "key": "deleteUser",
      "inputs": [
        {
          "required": false,
          "example": "488042375842",
          "comments": "Provide an integer value for the unique identifier of the user.",
          "key": "userId",
          "type": "string",
          "default": "",
          "label": "UserId"
        },
        {
          "required": true,
          "key": "zendeskConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "This flag toggles debugging. When true the integration will log any requests and failures.",
          "key": "debug",
          "type": "boolean",
          "default": "false",
          "label": "Debug"
        }
      ]
    },
    "listUsers": {
      "display": {
        "label": "List Users",
        "description": "List all Users"
      },
      "examplePayload": {
        "data": {
          "users": [],
          "count": 5,
          "next_page": 5,
          "previous_page": 5
        }
      },
      "key": "listUsers",
      "inputs": [
        {
          "required": true,
          "key": "zendeskConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "This flag toggles debugging. When true the integration will log any requests and failures.",
          "key": "debug",
          "type": "boolean",
          "default": "false",
          "label": "Debug"
        }
      ]
    },
    "showUser": {
      "display": {
        "label": "Show User",
        "description": "Get the information and metadata of a user by Id"
      },
      "key": "showUser",
      "inputs": [
        {
          "required": false,
          "example": "488042375842",
          "comments": "Provide an integer value for the unique identifier of the user.",
          "key": "userId",
          "type": "string",
          "default": "",
          "label": "UserId"
        },
        {
          "required": true,
          "key": "zendeskConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "This flag toggles debugging. When true the integration will log any requests and failures.",
          "key": "debug",
          "type": "boolean",
          "default": "false",
          "label": "Debug"
        }
      ]
    },
    "searchUsers": {
      "display": {
        "label": "Search Users",
        "description": "Returns an array of users who meet the search criteria."
      },
      "examplePayload": {
        "data": {
          "users": [
            {
              "id": 35436,
              "name": "Robert Jones",
              "notes": "sigil issue"
            },
            {
              "id": 9873843,
              "name": "Terry Gilliam"
            }
          ]
        }
      },
      "key": "searchUsers",
      "inputs": [
        {
          "required": false,
          "comments": "The external_id parameter does not support the search syntax. It only accepts ids.",
          "key": "externalId",
          "type": "string",
          "default": "",
          "label": "External Id"
        },
        {
          "required": false,
          "comments": "The query parameter supports the Zendesk search syntax for more advanced user searches. It can specify a partial or full value of any user property, including name, email address, notes, or phone. Example: query=\"jdoe\".",
          "key": "query",
          "type": "string",
          "default": "",
          "label": "Query"
        },
        {
          "required": true,
          "key": "zendeskConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "This flag toggles debugging. When true the integration will log any requests and failures.",
          "key": "debug",
          "type": "boolean",
          "default": "false",
          "label": "Debug"
        }
      ]
    },
    "listTicketsByUser": {
      "display": {
        "label": "List Tickets Requested By User",
        "description": "List all of the tickets that a particular user has requested"
      },
      "examplePayload": {
        "data": {
          "tickets": [],
          "count": 5,
          "next_page": 5,
          "previous_page": 5
        }
      },
      "key": "listTicketsByUser",
      "inputs": [
        {
          "required": false,
          "example": "488042375842",
          "comments": "Provide an integer value for the unique identifier of the user.",
          "key": "userId",
          "type": "string",
          "default": "",
          "label": "UserId"
        },
        {
          "required": true,
          "key": "zendeskConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "This flag toggles debugging. When true the integration will log any requests and failures.",
          "key": "debug",
          "type": "boolean",
          "default": "false",
          "label": "Debug"
        }
      ]
    },
    "listTicketsToUser": {
      "display": {
        "label": "List Tickets Assigned To User",
        "description": "List all of the tickets that have been assigned to a particular user"
      },
      "examplePayload": {
        "data": {
          "tickets": [],
          "count": 5,
          "next_page": 5,
          "previous_page": 5
        }
      },
      "key": "listTicketsToUser",
      "inputs": [
        {
          "required": false,
          "example": "488042375842",
          "comments": "Provide an integer value for the unique identifier of the user.",
          "key": "userId",
          "type": "string",
          "default": "",
          "label": "UserId"
        },
        {
          "required": true,
          "key": "zendeskConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": false,
          "comments": "This flag toggles debugging. When true the integration will log any requests and failures.",
          "key": "debug",
          "type": "boolean",
          "default": "false",
          "label": "Debug"
        }
      ]
    },
    "createWebhookTrigger": {
      "display": {
        "label": "Create Webhook Trigger",
        "description": "Create a trigger to cause a webhook to fire"
      },
      "examplePayload": {
        "data": {
          "trigger": {
            "url": "https://example.zendesk.com/api/v2/triggers/10849292971419.json",
            "id": 10849292971419,
            "title": "Trigger for 01GK8E6BKWMJZD2TEXAMPLE",
            "active": true,
            "updated_at": "2022-12-02T03:36:44Z",
            "created_at": "2022-12-02T03:36:44Z",
            "default": false,
            "actions": [
              {
                "field": "notification_webhook",
                "value": [
                  "01GK8E6BKWMJZD2TEXAMPLE",
                  "{\"current_user\": \"{{current_user.details}}\"}"
                ]
              }
            ],
            "conditions": {
              "all": [],
              "any": [
                {
                  "field": "status",
                  "operator": "changed",
                  "value": null
                },
                {
                  "field": "status",
                  "operator": "not_changed",
                  "value": null
                }
              ]
            },
            "description": null,
            "position": 10,
            "raw_title": "01GK8E6BKWMJZD2TEXAMPLE",
            "category_id": "4558610559259"
          }
        }
      },
      "key": "createWebhookTrigger",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "key": "title",
          "type": "string",
          "default": "",
          "label": "Trigger Name"
        },
        {
          "required": true,
          "example": "01GK7R2DBS16XB76SPDEXAMPLE",
          "key": "webhookId",
          "type": "string",
          "default": "",
          "label": "Webhook ID"
        },
        {
          "comments": "The body to send to the webhook. See https://support.zendesk.com/hc/en-us/articles/4408886858138-Zendesk-Support-placeholders-reference",
          "language": "json",
          "required": true,
          "key": "messageBody",
          "type": "code",
          "default": "{\n  \"current_user\": {\n    \"details\": \"{{current_user.details}}\",\n    \"email\": \"{{current_user.email}}\",\n    \"external_id\": \"{{current_user.external_id}}\",\n    \"first_name\": \"{{current_user.first_name}}\",\n    \"language\": \"{{current_user.language}}\",\n    \"name\": \"{{current_user.name}}\",\n    \"notes\": \"{{current_user.notes}}\",\n    \"organization.details\": \"{{current_user.organization.details}}\",\n    \"organization.name\": \"{{current_user.organization.name}}\",\n    \"organization.notes\": \"{{current_user.organization.notes}}\",\n    \"phone\": \"{{current_user.phone}}\",\n    \"tags\": \"{{current_user.tags}}\"\n  },\n  \"ticket\": {\n    \"account\": \"{{ticket.account}}\",\n    \"assignee\": {\n      \"first_name\": \"{{ticket.assignee.first_name}}\",\n      \"last_name\": \"{{ticket.assignee.last_name}}\",\n      \"name\": \"{{ticket.assignee.name}}\"\n    },\n    \"brand\": {\n      \"name\": \"{{ticket.brand.name}}\"\n    },\n    \"cc_names\": \"{{ticket.cc_names}}\",\n    \"ccs\": \"{{ticket.ccs}}\",\n    \"comments_formatted\": \"{{ticket.comments_formatted}}\",\n    \"description\": \"{{ticket.description}}\",\n    \"due_date\": \"{{ticket.due_date}}\",\n    \"email_cc_names\": \"{{ticket.email_cc_names}}\",\n    \"email_ccs\": \"{{ticket.email_ccs}}\",\n    \"external_id\": \"{{ticket.external_id}}\",\n    \"follower_names\": \"{{ticket.follower_names}}\",\n    \"follower_reply_type_message\": \"{{ticket.follower_reply_type_message}}\",\n    \"followers\": \"{{ticket.followers}}\",\n    \"group\": {\n      \"name\": \"{{ticket.group.name}}\"\n    },\n    \"id\": \"{{ticket.id}}\",\n    \"in_business_hours\": \"{{ticket.in_business_hours}}\",\n    \"latest_comment_formatted\": \"{{ticket.latest_comment_formatted}}\",\n    \"latest_public_comment_formatted\": \"{{ticket.latest_public_comment_formatted}}\",\n    \"link\": \"{{ticket.link}}\",\n    \"organization\": {\n      \"external_id\": \"{{ticket.organization.external_id}}\",\n      \"name\": \"{{ticket.organization.name}}\"\n    },\n    \"priority\": \"{{ticket.priority}}\",\n    \"public_comments_formatted\": \"{{ticket.public_comments_formatted}}\",\n    \"requester\": {\n      \"email\": \"{{ticket.requester.email}}\",\n      \"external_id\": \"{{ticket.requester.external_id}}\",\n      \"first_name\": \"{{ticket.requester.first_name}}\",\n      \"language\": \"{{ticket.requester.language}}\",\n      \"last_name\": \"{{ticket.requester.last_name}}\",\n      \"name\": \"{{ticket.requester.name}}\",\n      \"phone\": \"{{ticket.requester.phone}}\"\n    },\n    \"status\": \"{{ticket.status}}\",\n    \"tags\": \"{{ticket.tags}}\",\n    \"ticket_field_ID\": \"{{ticket.ticket_field_ID}}\",\n    \"ticket_field_option_title_ID\": \"{{ticket.ticket_field_option_title_ID}}\",\n    \"ticket_form\": \"{{ticket.ticket_form}}\",\n    \"ticket_type\": \"{{ticket.ticket_type}}\",\n    \"title\": \"{{ticket.title}}\",\n    \"via\": \"{{ticket.via}}\"\n  }\n}",
          "label": "Webhook Message Body"
        },
        {
          "comments": "The conditions under which this trigger will fire. Leave the default to fire under any change.",
          "language": "json",
          "required": true,
          "key": "conditions",
          "type": "code",
          "default": "{\n  \"all\": [],\n  \"any\": [\n    {\n      \"field\": \"status\",\n      \"operator\": \"changed\"\n    },\n    {\n      \"field\": \"status\",\n      \"operator\": \"not_changed\"\n    }\n  ]\n}",
          "label": "Trigger Conditions"
        },
        {
          "comments": "Allow a duplicate trigger with the same title to be created?",
          "required": true,
          "key": "allowDuplicates",
          "type": "boolean",
          "default": "false",
          "label": "Allow Duplicates?"
        }
      ]
    },
    "listTriggers": {
      "display": {
        "label": "List Triggers",
        "description": "List workflow triggers"
      },
      "key": "listTriggers",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "createWebhook": {
      "display": {
        "label": "Create Webhook",
        "description": "Create a webhook in Zendesk to notify you of changes to your users, organization, or tickets"
      },
      "examplePayload": {
        "data": {
          "webhook": {
            "id": "01GK8E6BKWMJZD2T8Y5AXJQMG5",
            "name": "Test from Prismatic",
            "status": "active",
            "subscriptions": [
              "conditional_ticket_events"
            ],
            "created_at": "2022-12-02T03:31:00Z",
            "created_by": "7272236579355",
            "endpoint": "https://hooks.prismatic.io/trigger/EXAMPLE",
            "http_method": "POST",
            "request_format": "json"
          }
        }
      },
      "key": "createWebhook",
      "inputs": [
        {
          "required": true,
          "key": "zendeskConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "comments": "The URL to send data to",
          "key": "callbackUrl",
          "type": "string",
          "default": "",
          "label": "Callback URL"
        },
        {
          "required": true,
          "comments": "A unique name to assign this webhook",
          "key": "name",
          "type": "string",
          "default": "",
          "label": "Webhook Name"
        },
        {
          "required": true,
          "model": [
            {
              "label": "conditional_ticket_events",
              "value": "conditional_ticket_events"
            },
            {
              "label": "zen:event-type:organization.created",
              "value": "zen:event-type:organization.created"
            },
            {
              "label": "zen:event-type:organization.custom_field_changed",
              "value": "zen:event-type:organization.custom_field_changed"
            },
            {
              "label": "zen:event-type:organization.deleted",
              "value": "zen:event-type:organization.deleted"
            },
            {
              "label": "zen:event-type:organization.external_id_changed",
              "value": "zen:event-type:organization.external_id_changed"
            },
            {
              "label": "zen:event-type:organization.name_changed",
              "value": "zen:event-type:organization.name_changed"
            },
            {
              "label": "zen:event-type:organization.tags_changed",
              "value": "zen:event-type:organization.tags_changed"
            },
            {
              "label": "zen:event-type:user.active_changed",
              "value": "zen:event-type:user.active_changed"
            },
            {
              "label": "zen:event-type:user.alias_changed",
              "value": "zen:event-type:user.alias_changed"
            },
            {
              "label": "zen:event-type:user.created",
              "value": "zen:event-type:user.created"
            },
            {
              "label": "zen:event-type:user.custom_field_changed",
              "value": "zen:event-type:user.custom_field_changed"
            },
            {
              "label": "zen:event-type:user.custom_role_changed",
              "value": "zen:event-type:user.custom_role_changed"
            },
            {
              "label": "zen:event-type:user.default_group_changed",
              "value": "zen:event-type:user.default_group_changed"
            },
            {
              "label": "zen:event-type:user.deleted",
              "value": "zen:event-type:user.deleted"
            },
            {
              "label": "zen:event-type:user.details_changed",
              "value": "zen:event-type:user.details_changed"
            },
            {
              "label": "zen:event-type:user.external_id_changed",
              "value": "zen:event-type:user.external_id_changed"
            },
            {
              "label": "zen:event-type:user.group_membership_created",
              "value": "zen:event-type:user.group_membership_created"
            },
            {
              "label": "zen:event-type:user.group_membership_deleted",
              "value": "zen:event-type:user.group_membership_deleted"
            },
            {
              "label": "zen:event-type:user.identity_changed",
              "value": "zen:event-type:user.identity_changed"
            },
            {
              "label": "zen:event-type:user.identity_created",
              "value": "zen:event-type:user.identity_created"
            },
            {
              "label": "zen:event-type:user.identity_deleted",
              "value": "zen:event-type:user.identity_deleted"
            },
            {
              "label": "zen:event-type:user.last_login_changed",
              "value": "zen:event-type:user.last_login_changed"
            },
            {
              "label": "zen:event-type:user.merged",
              "value": "zen:event-type:user.merged"
            },
            {
              "label": "zen:event-type:user.name_changed",
              "value": "zen:event-type:user.name_changed"
            },
            {
              "label": "zen:event-type:user.notes_changed",
              "value": "zen:event-type:user.notes_changed"
            },
            {
              "label": "zen:event-type:user.only_private_comments_changed",
              "value": "zen:event-type:user.only_private_comments_changed"
            },
            {
              "label": "zen:event-type:user.organization_membership_created",
              "value": "zen:event-type:user.organization_membership_created"
            },
            {
              "label": "zen:event-type:user.organization_membership_deleted",
              "value": "zen:event-type:user.organization_membership_deleted"
            },
            {
              "label": "zen:event-type:user.password_changed",
              "value": "zen:event-type:user.password_changed"
            },
            {
              "label": "zen:event-type:user.photo_changed",
              "value": "zen:event-type:user.photo_changed"
            },
            {
              "label": "zen:event-type:user.role_changed",
              "value": "zen:event-type:user.role_changed"
            },
            {
              "label": "zen:event-type:user.suspended_changed",
              "value": "zen:event-type:user.suspended_changed"
            },
            {
              "label": "zen:event-type:user.tags_changed",
              "value": "zen:event-type:user.tags_changed"
            },
            {
              "label": "zen:event-type:user.time_zone_changed",
              "value": "zen:event-type:user.time_zone_changed"
            }
          ],
          "comments": "Determines what events trigger a webhook to fire",
          "key": "events",
          "type": "string",
          "default": "",
          "collection": "valuelist",
          "label": "Events"
        },
        {
          "required": true,
          "key": "allowDuplicates",
          "type": "boolean",
          "default": "false",
          "label": "Allow Duplicates?"
        }
      ]
    },
    "deleteInstanceWebhooks": {
      "display": {
        "label": "Delete Instance Webhooks",
        "description": "Delete all webhooks pointed at this instance"
      },
      "key": "deleteInstanceWebhooks",
      "inputs": [
        {
          "required": true,
          "key": "zendeskConnection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    },
    "deleteWebhook": {
      "display": {
        "label": "Delete Webhook",
        "description": "Delete a webhook by ID"
      },
      "key": "deleteWebhook",
      "inputs": [
        {
          "required": true,
          "key": "zendeskConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "required": true,
          "example": "01GK59HW1XMB8WVZ43RPVAPXRM",
          "key": "webhookId",
          "type": "string",
          "default": "",
          "label": "Webhook ID"
        }
      ]
    },
    "listWebhooks": {
      "display": {
        "label": "List Webhooks",
        "description": "List webhooks configured in Zendesk"
      },
      "key": "listWebhooks",
      "inputs": [
        {
          "required": true,
          "key": "zendeskConnection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "comments": "Show only webhooks that point to this instance",
          "key": "showOnlyInstanceWebhooks",
          "type": "boolean",
          "default": "true",
          "label": "Show only instance webhooks"
        }
      ]
    },
    "rawRequest": {
      "display": {
        "label": "Raw Request",
        "description": "Issue a raw HTTP request"
      },
      "key": "rawRequest",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        },
        {
          "placeholder": "URL to call",
          "required": true,
          "comments": "This is the URL to call.",
          "example": "/sobjects/Account",
          "key": "url",
          "type": "string",
          "default": "",
          "label": "URL"
        },
        {
          "required": true,
          "model": [
            {
              "label": "DELETE",
              "value": "DELETE"
            },
            {
              "label": "GET",
              "value": "GET"
            },
            {
              "label": "HEAD",
              "value": "HEAD"
            },
            {
              "label": "LINK",
              "value": "LINK"
            },
            {
              "label": "OPTIONS",
              "value": "OPTIONS"
            },
            {
              "label": "PATCH",
              "value": "PATCH"
            },
            {
              "label": "POST",
              "value": "POST"
            },
            {
              "label": "PURGE",
              "value": "PURGE"
            },
            {
              "label": "PUT",
              "value": "PUT"
            },
            {
              "label": "UNLINK",
              "value": "UNLINK"
            }
          ],
          "comments": "The HTTP method to use.",
          "key": "method",
          "type": "string",
          "default": "",
          "label": "Method"
        },
        {
          "placeholder": "Data to send",
          "required": false,
          "comments": "The HTTP body payload to send to the URL.",
          "example": "{\"exampleKey\": \"Example Data\"}",
          "key": "data",
          "type": "string",
          "default": "",
          "label": "Data"
        },
        {
          "placeholder": "Data to send",
          "required": false,
          "comments": "The Form Data to be sent as a multipart form upload.",
          "example": "[{\"key\": \"Example Key\", \"value\": new Buffer(\"Hello World\")}]",
          "key": "formData",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Form Data"
        },
        {
          "placeholder": "Data to send",
          "required": false,
          "comments": "File Data to be sent as a multipart form upload.",
          "example": "[{key: \"example.txt\", value: \"My File Contents\"}]",
          "key": "fileData",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "File Data"
        },
        {
          "placeholder": "Query Parameter",
          "required": false,
          "comments": "A list of query parameters to send with the request. This is the portion at the end of the URL similar to ?key1=value1&key2=value2.",
          "key": "queryParams",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Query Parameter"
        },
        {
          "placeholder": "Header",
          "required": false,
          "comments": "A list of headers to send with the request.",
          "example": "User-Agent: curl/7.64.1",
          "key": "headers",
          "type": "string",
          "default": "",
          "collection": "keyvaluelist",
          "label": "Header"
        },
        {
          "placeholder": "Response Type",
          "required": true,
          "comments": "The type of data you expect in the response. You can request json, text, or binary data.",
          "model": [
            {
              "label": "arraybuffer",
              "value": "arraybuffer"
            },
            {
              "label": "document",
              "value": "document"
            },
            {
              "label": "json",
              "value": "json"
            },
            {
              "label": "text",
              "value": "text"
            }
          ],
          "key": "responseType",
          "type": "string",
          "default": "json",
          "label": "Response Type"
        },
        {
          "required": false,
          "comments": "The maximum time that a client will await a response to its request",
          "example": "2000",
          "key": "timeout",
          "type": "string",
          "default": "",
          "label": "Timeout"
        },
        {
          "required": false,
          "comments": "Enabling this flag will log out the current request.",
          "key": "debugRequest",
          "type": "boolean",
          "default": "false",
          "label": "Debug Request"
        },
        {
          "placeholder": "Retry Delay",
          "required": false,
          "comments": "The delay in milliseconds between retries.",
          "key": "retryDelayMS",
          "type": "string",
          "default": "0",
          "label": "Retry Delay (ms)"
        },
        {
          "required": false,
          "comments": "If true, retries on all erroneous responses regardless of type.",
          "key": "retryAllErrors",
          "type": "boolean",
          "default": "false",
          "label": "Retry On All Errors"
        },
        {
          "placeholder": "Max Retries",
          "required": false,
          "comments": "The maximum number of retries to attempt.",
          "key": "maxRetries",
          "type": "string",
          "default": "0",
          "label": "Max Retry Count"
        },
        {
          "required": false,
          "comments": "Specifies whether to use a pre-defined exponential backoff strategy for retries.",
          "key": "useExponentialBackoff",
          "type": "boolean",
          "default": "false",
          "label": "Use Exponential Backoff"
        }
      ],
      "documentation": {
        "description": "The **Raw Request** action allows you to interact with API endpoints that are not covered by other actions.\nFor example, if you want to [list groups](https://developer.zendesk.com/api-reference/ticketing/groups/groups/#list-groups), which as an endpoint of `/api/v2/groups`, you can enter `/groups` as the endpoint and select the GET verb.\n"
      }
    }
  },
  "triggers": {
    "webhook": {
      "display": {
        "label": "Zendesk Webhook",
        "description": "Handle and validate webhook requests from Zendesk"
      },
      "synchronousResponseSupport": "invalid",
      "scheduleSupport": "invalid",
      "key": "webhook",
      "inputs": [
        {
          "required": true,
          "key": "connection",
          "type": "connection",
          "label": "Connection"
        }
      ]
    }
  },
  "dataSources": {},
  "documentation": {
    "description": "**Zendesk** is a public company headquartered in San Francisco, California.\nIt provides software-as-a-service products related to customer support, sales, and other customer communications.\nThe **Zendesk** component allows you to manage Users and Tickets inside your Zendesk domain.\n",
    "dev": "## Zendesk webhooks\n\nThe Zendesk API supports two types of webhooks - one for when something has changed for a user or an organization, and one when something has changed on a support ticket.\n\n### Zendesk user and support webhooks\n\nIf you would like to be alerted when a change to a user or organization has occurred, create a new webhook using the [Create Webhook](#create-webhook) action.\nSelect the events that will cause a the webhook to fire.\nFor example, selecting the `zen:event-type:user.deleted` event will cause the webhook to fire whenever a user is deleted.\nA full list of webhook event types are available in the [Zendesk developer docs](https://developer.zendesk.com/api-reference/event-connectors/webhooks/webhook-event-types/).\n\n### Zendesk ticket webhooks\n\nIf you would like to be alerted when a ticket has changed, first create a webhook using the [Create Webhook](#create-webhook) action.\nWhen selecting webhook events, choose `conditional_ticket_events` (and only that value).\nThis will create a webhook, pointed at a Prismatic instance flow, that can be triggered conditionally.\n\nNext, you need to create a **trigger** that will send data via the webhook you created.\nFetch your webhook's **id** from the step where you created the webhook, and feed it into a [Create Trigger](#create-webhook-trigger) action.\nThe default conditional and webhook body values will cause the webhook to be triggered whenever a ticket is changed, and will send all data related to the ticket to the webhook.\nWe recommend keeping the default values.\nYou can change the conditions under which the trigger fires - see the Zendesk [conditions reference](https://developer.zendesk.com/documentation/ticketing/reference-guides/conditions-reference/) for details.\n"
  },
  "$version": 1
}
